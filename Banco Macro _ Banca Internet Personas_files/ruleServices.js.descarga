function hideElement(elem){
	if($(elem).length>0){
		//verifica si existe label/caption, hint y req asociado
		var label = "#label_" + elem[0].id;
		var hint = "#hint_" + elem[0].id;
		var req = "#req_" + elem[0].id;

		if($(label).length)
			$(label).hide();

		if($(hint).length)
			$(hint).hide();

		if($(req).length)
			$(req).hide();

		if($(elem).hasClass('niceCalendar')){
			$(elem).parent().hide();
		}
		else{
			$(elem).hide();
		}

		$(elem).addClass("hiddenSection");
	}
}
function showElement(elem){
	//verifica si existe label/caption asociado
	var label = "#label_" + elem[0].id;
	var hint = "#hint_" + elem[0].id;
	var req = "#req_" + elem[0].id;

	if($(label).length)
		$(label).show();

	if($(hint).length)
		$(hint).show();

	if($(req).length)
		$(req).show();

	if($(elem).hasClass('niceCalendar')){
		$(elem).parent().show();
	}
	else{
		$(elem).show();
	}

	$(elem).removeClass("hiddenSection");
}
function showOrHideElement(elem){
	if (elem.is(':visible')){
		hideElement(elem);
	}else{
		showElement(elem);
	} 
}
function hideActionButton(elem){
	
	$(elem).parent().hide();

}
function compareNumber(elem,elem1,operador){

    var valElem;
    var valElem1;

    if ($(elem).is("input")) {
        valElem = $(elem).attr("unmasked");
    } else { 
        valElem = $(elem).html();
    }

    if ($(elem1).is("input")) {
        valElem1 = $(elem1).attr("unmasked");
    } else { 
        valElem1 = $(elem1).html();
    }


    var errorMsg="";
    var isOk = true;
    var required = false;
    
    if(!required){

        if (valElem=="" || valElem1=="") {
            return;
        }
    }

    intElem = parseFloat(valElem);
    if (isNaN(intElem)) {  
        errorMsg = elem.attr("caption") + " debe ser un número válido";
        isOk=false;     
    }

    intElem1 = parseFloat(valElem1);  
    if (isNaN(intElem1)) {
        if(errorMsg!="")
            errorMsg = errorMsg + "\\n";
 
        errorMsg = errorMsg + elem1.attr("caption") + " debe ser un número válido";
        isOk=false;
    }

    if(!isOk){
        ruleServiceInvalidation=true;
        showError(errorMsg);        
        return;
    }

   var operadorText = "";

    if(operador == ">"){ //mayor
        isOk = (intElem > intElem1);
        operadorText = "mayor";
    }else if(operador == ">="){ //mayor igual
        isOk = (intElem >= intElem1);
        operadorText = "mayor o igual";
    }else if(operador == "<"){ //menor
        isOk = (intElem < intElem1);
        operadorText = "menor";
    }else if(operador == "<="){ //menor igual
        isOk = (intElem <= intElem1);
        operadorText = "menor o igual";
    }else if(operador == "=="){ //igual
        isOk = (intElem == intElem1);
        operadorText = "igual";
    }else if(operador == "!="){ //distinto
        isOk = (intElem != elem1);
        operadorText = "distinto";
    }
    
    if (operadorText == ""){
        operadorText = operador;
    }
    

    if(!isOk){
        errorMsg= elem.attr("caption") + " debe ser " + operadorText+ " a " + elem1.attr("caption");
        ruleServiceInvalidation=true;   
        showError(errorMsg);    
        return;
    }

    return;
}
  
function setReadOnly(elem){
	$(elem).prop('readonly', true);
	$(elem).css('background-color','#D9D9D9');
}
function setEditable(elem){
	$(elem).prop('readonly', false);
	$(elem).css('background-color','white');
}
function readOnlyOrEditable(elem){
   var readonly = $(elem).attr("readonly");
	if(readonly && (readonly.toLowerCase()!=='false' || readonly.toLowerCase()=='readonly')){
		setEditable(elem);
	}else{
		setReadOnly(elem);
	} 
}
function setReadOnlyWithoutBox(elem){
	var valor = $(elem).val();
	var valorHtml = $(elem).parent().html().replace(/&/g, '&amp;').replace(/>/g, '&gt;').replace(/</g, '&lt;').replace(/"/g, '&quot;');
	$(elem).replaceWith('<span id="' + $(elem).attr('id') + '" class="' + $(elem).attr('class')+ '" prevHtml="' + valorHtml + '">' + valor + '</span>');
}
function readOnlyOrEditableWithoutBox(elem){
   var readonly = $(elem).attr('prevhtml');

   if(readonly){
		var valor = $(elem).html();
		$(elem).replaceWith($(elem).attr('prevhtml'));
		$("#"+elem[0].id).val(valor);
	}else{
		setReadOnlyWithoutBox(elem);
	} 
}
function convertValue(elem, matriz) {

	var elemValue = elem.attr('unmasked');

	if (elemValue == undefined)
		elemValue = elem.val();

	var value = elemValue;
	var a = matriz.split(";");

	for ( var i = 0; i < a.length; i++) {
		var n = a[i].split("=");
		if (n[0] == elemValue) {
			value = n[1];
			break;
		}
	}

	if (elem.html() == '')
		elem.val(value);
	else
		elem.html(value);

}
function validateField(elem, msg) {

	errorElem = $(elem).attr("class").substr(-6);
	if(errorElem == " error") {sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6)} else {sinErrorElem = $(elem).attr("class")}

	$(elem).removeClass();
	$(elem).addClass(sinErrorElem);

	
	var elemValue;
	if("checkbox"==elem.attr("type")){
		elemValue=elem.is(':checked') ;
	} else {
		elemValue = elem.val();
		if (elemValue==undefined){
			elemValue= elem.options[elem.selectedIndex].value;
		}
	
	}
	var isReadOnly= elem.prop("readonly")	
	var isntValid = !isReadOnly && (elemValue=="Ninguno" || elemValue=="" || elemValue=="false")

	if(msg == undefined){
		msg="";
	}

	if(isntValid){
		$(elem).addClass(elem.className+" error");
		showError(elem.attr("caption") + ": " + msg);
		ruleServiceInvalidation=true;		
		return ;
	}
}
function clickButton(elem, idcomp) {
       if (elem){
              elem.focus();	
              elem.click();
        }
}
function enableDisableElementTextField(elem, eval) {	
	try{		
		if ($(eval).prop("checked")) {
			$(elem).prop("disabled", true);
			$(elem).toggleClass();
			$(elem).addClass("text-field_medium_label-large_disabled");
			$(elem).prop("style").cursor = "default";
		} else {
			$(elem).prop("disabled", false);
			$(elem).toggleClass();
			$(elem).addClass("text-field_medium_label-large");
			$(elem).prop("style").cursor = "text";
		}
	}catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --enableDisableElement--");
		}
	}
}
function setSecondFactorParam(param,value) {jQuery("div > #second-factor > div > form > #tab").val(value);container2Draw = value;}
function filterList(sarasa){
$("select").change(function() {
	var seleccionada =this.value;
	var previous = $(this).attr("title");
	if (previous != "") $("select option[value='"+previous+"']").prop("disabled",false);

	if (seleccionada != "") $("select option[value='"+seleccionada+"']").attr("disabled","disabled");
	$(this).attr("title",seleccionada) ;
    });
}
function compareTextFields(comparator,elem1,elem2,errorMessage,hide) {

    var elem1Value = $(elem1).val();
    var elem2Value = $(elem2).val();
    ruleServiceInvalidation = false;

  var jq_elem1 = $(elem1);
    var estilo_elem1 = jq_elem1.attr("class");
    var estilo_con_error_elem1 = estilo_elem1.substr(-6);
        

    if (estilo_con_error_elem1 == " error") {
    var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
    jq_elem1.removeClass();
    jq_elem1.addClass(estilo_dinamico_elem1);
    }


    var jq_elem2 = $(elem2);
    var estilo_elem2 = jq_elem2.attr("class");
    var estilo_con_error_elem2 = estilo_elem2.substr(-6);
        

    if (estilo_con_error_elem2 == " error") {
      var estilo_dinamico_elem2 = estilo_elem2.substring(0, estilo_elem2.length - 6);
      jq_elem2.removeClass();
      jq_elem2.addClass(estilo_dinamico_elem2);
    }

  if (elem1Value===undefined || elem2Value===undefined){
    //error en la definicion de regla de servicio - Elemento DOM invalido.
    return;
  }

  if (comparator == '==' && elem1Value != elem2Value){
    errorMsg = $(elem1).attr('caption')+" - "+$(elem2).attr('caption')+": " + errorMessage;
    jq_elem1.addClass(estilo_elem1 + " error");
    jq_elem2.addClass(estilo_elem2 + " error");
    ruleServiceInvalidation=true;
    showError(errorMsg);
    }
  else
    if (comparator == '!=' && elem1Value == elem2Value){
      errorMsg = $(elem1).attr('caption')+" - "+$(elem2).attr('caption')+": " + errorMessage;
      jq_elem1.addClass(estilo_elem1 + " error");
      jq_elem2.addClass(estilo_elem2 + " error");
      ruleServiceInvalidation=true;
      showError(errorMsg);
    }
    else 
      if(comparator!= '==' && comparator!='!='){
        //error de definicion de regla de servicio - Comparador invalido.
        return;
      }
      if(hide != null && hide == "true" && ruleServiceInvalidation != true){
        $(errorPanel).hide();
      }
        
}
function enableDisableElement(elem, eval) {
    try {
        if ($(eval).prop("checked")) {
            $(elem).prop("disabled", false);
        } else {
            $(elem).prop("disabled", true);
        }
    } catch (err) {
        if (window.console && window.console.log) {
            console.error(err, "Error en servicio --enableDisableElement--");
        }
    }
}
function testStrength(elem) {
	transitionTo(jQuery(".medidor"), medirFortaleza(jQuery(elem).val()));
	return true;
}
function updateCookieValue(valor) {

	if (valor!=null){

		var idsReadCookieOrig = leerCookie("alertsRead");

		var idsReadCookie = "";
		if (idsReadCookieOrig!=null)
			idsReadCookie = idsReadCookieOrig.split(",");
	
		if (idsReadCookie == "")
			idsReadCookie = valor;
		else{
			var yaExiste = false;	
			for (y=0; y<idsReadCookie.length; y++){
				if (valor == idsReadCookie[y]){
					yaExiste = true;
                                        break;
				}
			}
			if (!yaExiste){
				idsReadCookie = idsReadCookie +"," + valor;
				try{
		
					var spanTopBar = document.getElementById('topbartext');
					var alertToRead = spanTopBar.innerHTML - 1 ;
			
					if (alertToRead <= 0){
						$('.widget_alert_badge2').css("display","none");
					}else{
						$('.widget_alert_badge2').css("display","inline-block");
						spanTopBar.innerHTML = alertToRead;
					}

				}catch(err) {
					if ( window.console && window.console.log ) {
						console.error(err,'Error en servicio --updateCookieValue--');
					}

		
				}
			}
		}

		document.cookie = "alertsRead="+idsReadCookie;
		
	}

}
function updateColectionFromCookie(elem){
		
		try {
		
			if ($(elem).length<1){
				return;
			}
		
			var noLeidasGlobal=0;
			
			//veo si el elemento es una colección
			if($(elem).attr('selectionmode')){
	
				var collectionBody = $(elem).children("tbody").children(); 
					
				modifiCollectionBody(collectionBody);

				noLeidasGlobal = noLeidasGlobal + updateCollection(elem);	

			}
			else{
				//recorro todas las colecciones dentro del contenedor las cuales tengan el atributo 
				//"selectionmode", es algo generico para identificar una coleccion
			
				$(elem).find("table[selectionmode]").each(function () {
		
					var collectionBody = $(this).children("tbody").children(); 
					
					modifiCollectionBody(collectionBody);

					noLeidasGlobal = noLeidasGlobal + updateCollection(this);	
					
				});	
			}
			
			var total = $('.widget_alert_badge2').attr("alertFromCol");

			if (noLeidasGlobal <= 0){
				noLeidasGlobal = 0;  
				$('.widget_alert_badge2').css("display","none");
			}else{
				$('.widget_alert_badge2').css("display","inline-block");
			}

			$('.widget_alert_badge2').text(noLeidasGlobal);
		
		}
		catch(err) {
			if ( window.console && window.console.log ) {
				console.error(err,'Error en servicio --updateColectionFromCookie--');
			}
		}

}

function compareDates(date1, date2, message, operator) {


    var jq_elem1 = $(date1);
    var estilo_elem1 = jq_elem1.attr("class");
    var estilo_con_error_elem1 = estilo_elem1.substr(-6);

    var jq_elem2 = $(date2);
    var estilo_elem2 = jq_elem2.attr("class");
    var estilo_con_error_elem2 = estilo_elem2.substr(-6);

    if (estilo_con_error_elem1 == " error") {
        var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
        jq_elem1.removeClass();
        jq_elem1.addClass(estilo_dinamico_elem1);


    }


    if (estilo_con_error_elem2 == " error") {
        var estilo_dinamico_elem2 = estilo_elem2.substring(0, estilo_elem2.length - 6);
        jq_elem2.removeClass();
        jq_elem2.addClass(estilo_dinamico_elem2);
    }
    var range = 7;


    var fecha1 = $(date1).val();
    var fecha2 = $(date2).val();

    var e1 = completeDate(date1);
    var e2 = completeDate(date2);


    if (e1 == true) {
        var f1 = esFechaInValida(date1);
    }
    if (e2 == true) {
        var f2 = esFechaInValida(date2);
    }

    var errorMsg = "";
    var isOk = true;
    var required = false;


    if (fecha1 == "") {
        errorMsg = date1.attr("caption") + " " + ("es un campo obligatorio") + "\\n";
        isOk = false;
        jq_elem1.addClass(estilo_elem1 + " error");
    }

    if (fecha2 == "") {
        errorMsg = errorMsg + date2.attr("caption") + " " + ("es un campo obligatorio");
        isOk = false;
        jq_elem2.addClass(estilo_elem2 + " error");
    }
    
    if (date1.attr("id").indexOf("date") > -1) {
        intDate1 = parseDate(date1.val());
    }
    if (e1 == true && f1 == true ||e1 == false&& fecha1 != "") {
        errorMsg = date1.attr("caption") + " " + ("debe ser una fecha válida");
        jq_elem1.addClass(estilo_elem1 + " error");
        isOk = false;
    }

    if (date2.attr("id").indexOf("date") > -1) {
        intDate2 = parseDate(date2.val());
    }
    if (e2 == true && f2 == true|| e2 == false && fecha2 != "") {
        if (errorMsg !== "") errorMsg = errorMsg + "\\n";
        errorMsg = errorMsg + date2.attr("caption") + " " + ("debe ser una fecha válida");
        jq_elem2.addClass(estilo_elem2 + " error");
        isOk = false;
    }

    if (!isOk) {
        ruleServiceInvalidation = true;
        showError(errorMsg);
        return false;
    }

    ruleServiceInvalidation = false;

    var operadorText = " ";

    if (operator == ">") {
        isOk = (intDate1 > intDate2);
        operadorText = "mayor";
    } else if (operator == ">=") {
        isOk = (intDate1 >= intDate2);
        operadorText = "mayor o igual";
    } else if (operator == "<") {
        isOk = (intDate1 < intDate2);
        operadorText = "menor";
    } else if (operator == "<=") {
        isOk = (intDate1 <= intDate2);
        operadorText = "menor o igual";
    } else if (operator == "==") {
        if ((intDate1 == null) && (intDate2 == null)) {
            isOk = true;
        } else if ((intDate1 == null) && (intDate2 != null)) {
            isOk = false;
        } else if ((intDate1 != null) && (intDate2 == null)) {
            isOk = false;
        } else {
            isOk = (intDate1.valueOf() == intDate2.valueOf());
        }
        operadorText = "igual";
    } else if (operator == "!=") {
        if ((intDate1 == null) && (intDate2 == null)) {
            isOk = false;
        } else if ((intDate1 == null) && (intDate2 != null)) {
            isOk = true;
        } else if ((intDate1 != null) && (intDate2 == null)) {
            isOk = true;
        } else {
            isOk = (intDate1.valueOf() != intDate2.valueOf());
        }
        operadorText = "distinto";
    }

    if (operadorText == "") {
        operadorText = operador;
    }



    var startDate = parseDate(date1.val());

    var endDate = parseDate(date2.val());

    var today = new Date();

    if (endDate > today) {

        var todayString = today.toLocaleString().split(" ")[0];

        errorMsg = date2.attr("caption") + " debe ser menor o igual a " + todayString + "\\n";

        jq_elem2.addClass(estilo_elem2 + " error");
        ruleServiceInvalidation = true;

    }

    var startMonth = startDate.getMonth() + 1;

    var endMonth = endDate.getMonth() + 1;

    var starYear = startDate.getFullYear();

    var endYear = endDate.getFullYear();

    var numMeses = endYear * 12 + endMonth - (starYear * 12 + startMonth);

    if (endYear < starYear) {
        numMeses = numMeses - 1;
    }

    if (numMeses >= range) {

        errorMsg = errorMsg + "El rango de fechas no puede ser superior a 6 meses" + "\\n";
        jq_elem1.addClass(estilo_elem1 + " error");
        jq_elem2.addClass(estilo_elem2 + " error");
        ruleServiceInvalidation = true;

    }

    if (!isOk) {

        if (message === "null") {
            errorMsg = errorMsg + date1.attr("caption") + " debe ser " + operadorText + " a " + date2.attr("caption");
            jq_elem1.addClass(estilo_elem1 + " error");
            jq_elem2.addClass(estilo_elem2 + " error");
            ruleServiceInvalidation = true;
        } else {
            errorMsg = errorMsg + message;
        }


    }

    if (ruleServiceInvalidation == true) {
        showError(errorMsg);
        return;
    }




}


function toggleWidget(elem) {

	var widgetId = elem.attr('id');	
	if ($('#'+widgetId).is(':visible')) {
		$('#'+widgetId).hide();
	} else {
		var uuid = $('#uuid').val();
		var contexto = $('#IDContexto').val();
		setTimeout(function () {callWidgetAjax(widgetId,uuid,contexto)}, 1000);
}}
function showOrHideElementUsingCheckValue(elem,eval){
	try{
		if($( eval ).prop("checked")){
			showElement(elem);
		}else{
			hideElement(elem);
		}
	}catch(err){
		if ( window.console && window.console.log ) {
			console.error(err,'Error en servicio --showOrHideElementUsingCheckValue--');
		}
	}
}
 
function validateCollectionSelection(elem,errorMsg){
    
    var idRadio= "encodedcollection_"+$(elem).attr("id");
    var isOk = true;
        
    if ($("input[name="+idRadio+"]").is(":checked")) {
        isOk=true;
    }
    else {
        isOk=false;
    }
    if(!isOk){
        if (errorMsg==="null") {
            errorMsg="Seleccioná al menos un elemento de la tabla" + elem.attr("caption");
        }
        ruleServiceInvalidation=true;   
        showError(errorMsg);    
        return errorMsg;
    }
    return;
}
  
  
function scrollToElement(elem) {
        if($(elem)!=undefined){
                   $('html, body').animate({scrollTop: $(elem).offset().top + 'px' }, 'fast');
        }
}
function setRequiredOrNot(conditional, target) {
	var boolean;
    if (conditional.attr('id').indexOf('checkField') > -1) {
       boolean = $('#' + conditional.attr('id')).is(':checked');
    } else {
        boolean = false;
    }
	if (boolean){
		$('#' + target.attr('id')).prop('required',true);
	}
	else {
		$('#' + target.attr('id')).removeAttr('required');
	}
 }
function showOrHideIfValid(elemToEvaluate,showHideElem,textToCompare){
	var elemValue = "";
	
	if (elemToEvaluate.length ) {
		elemValue = elemToEvaluate.find(":selected").text()
    }

	if (elemValue !="" ){
		if ( elemValue == textToCompare )
			showElement(showHideElem);
		else
			hideElement(showHideElem);
		
	}

}
function removeElement(elem){
	//verifica si existe label/caption, hint y req asociado
	if($(elem).length>0){
		var label = "#label_" + elem[0].id;
		var hint = "#hint_" + elem[0].id;
		var req = "#req_" + elem[0].id;
		try{
			if($(label).length)
				$(label).remove();
		
			if($(hint).length)
				$(hint).remove();
		
			if($(req).length)
				$(req).remove();
			if($(elem).length>0){
				$(elem).remove();
			}
		}
		catch(error){
			console.log("RemoveElement - ERROR:  " + err.message);
		}
	}	
}
function mustCompleteAtLeastOne(e0, e1, msj) {
    var e0HaveData = false;
    
    if ((e0[0].value != null) && (e0[0].value.trim() != '')) {
        e0HaveData = true;
    }
    var e1HaveData = false;
    if ((e1[0].value != null) && (e1[0].value.trim() != '')) {
        e1HaveData = true;
    }
    
    if ( (e1HaveData && e0HaveData) || (!e1HaveData && !e0HaveData) ) {
        ruleServiceInvalidation = true; 
        if (msj != 'null') { showError(msj); } else { showError('Debe ingresar solo un campo'); }
    }

}
function cleanField(element) {
	
	try{
	
		if ($(element).is("select")){
			var tamano = document.getElementById(element[0].id).length;
			var sel = document.getElementById(element[0].id);
			for(var i = 0; i < tamano; i++){
					var t = sel.options[i].value;
					if (t == "Ninguno"){
						element.val("Ninguno");
						return;
					}
			}
		}else if($(element).is("input")) {
			element.val("");
		}
	}catch(err){
		if ( window.console && window.console.log ) {
			console.error(err,'Error en servicio --cleanField--');
		}
	}
}
function deleteCollectionHeader(elem){
	
	var colHead = $(elem).children("thead");
	colHead.remove();

}
function cleanFieldIfSelectValue(elemToClean,elemToEvaluate,textToCompare){

 var elemValue = "";
 if (elemToEvaluate.length ) {
	 elemValue = $("#" + elemToEvaluate.attr("id") + " option:selected").text();
  }

 if ( textToCompare == null || elemValue == textToCompare ) {
	 
	 if($(elemToClean).is("input")) {
			elemToClean.val("");
	 } else if ($(elemToClean).is("select")) {
			elemToClean.val($("#"+elemToClean.attr("id") + " option:first").val());
	 
	 } else if ($(elemToClean).is("table")) {
		 $("#"+elemToClean.attr("id") +" :input").each(function() {
			 if (this !== undefined)
			 cleanFieldIfSelectValue($(this), elemToEvaluate, textToCompare);
			});
	 }
 	} 
}

function hideRowElement(elem){
    try{
    	if($(elem).closest( "table" ).hasClass("tabla_campos")){
      		$(elem).closest( "table" ).closest( "tr" ).hide();
    	}
    	else{
    		$(elem).closest( "tr" ).hide();	
    	}
    }catch(err){
      return;
    }
}
function showRowElement(elem){
    try{
    	if($(elem).closest( "table" ).hasClass("tabla_campos")){
      		$(elem).closest( "table" ).closest( "tr" ).show();
    	}
    	else{
    		$(elem).closest( "tr" ).show();	
    	}
    }catch(err){
      return;
    }
}
function showOrHideElementUsingRadioValue(radioToCheck){
	try{
		$( radioToCheck ).find("input[type=radio]").each(function() {

			var attr = $(this).attr("value");

			if (typeof attr !== typeof undefined && attr !== false) {
				var cheked = false;
				
				var checkAttr = $(this).is(':checked');
				if (typeof checkAttr !== typeof undefined && checkAttr !== false) {
					cheked = true;
				}
				else
				 if (typeof checkAttr == typeof undefined)
				  {
				     checkAttr = $(this).attr("checked");
				        if (typeof checkAttr !== typeof undefined && checkAttr !== false) 
				        {
					        cheked = true;
				        }
				  }
				
				//valido que exista el elemento a consultar
				var elemToProcess = $("#"+attr);
				if (elemToProcess.length){
					if (cheked){
						showElement(elemToProcess);
					}else{
						hideElement(elemToProcess);
					}
				}
				
			}
		});
	}catch(err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --showOrHideElementUsingRadioValue--");
		}
	}
}
function rangeValidateDates(inputStartDate, inputEndDate, range, showErrorsNullDates){
  
    var errorMsg = '';
    var isOk = true;
    
    if(inputStartDate.val()=='' || inputEndDate.val()==''){
            
        if(inputStartDate.val()==''){
        
            errorMsg = inputStartDate.attr('caption') + ' ' + ('es un campo obligatorio');
        
            isOk = false;
        
        } 
    
        if(inputEndDate.val()==''){
            
            if (errorMsg !== '') errorMsg = errorMsg + '\\n';
            
            errorMsg = errorMsg + inputEndDate.attr('caption') + ' ' + ('es un campo obligatorio');
            
            isOk = false;
        }
        
        ruleServiceInvalidation = true;
        

        if(showErrorsNullDates == 1){
        
            showError(errorMsg);

        }
        
        
        return;
            
    }   

    var startDate;

    var endDate;

    var d1= inputStartDate.val().split("/");

    var d2= inputEndDate.val().split("/");

    var fechaEval1; 

    var dia1= d1[0];

    var mes1= d1[1];

    var anio1= d1[2];

    var fechaEval2; 

    var dia2= d2[0];

    var mes2= d2[1];

    var anio2= d2[2];

    if (dia1.length == 1 && mes1.length == 1){
        mes1= "0" + mes1;
        dia1= "0" + dia1;

        fechaEval1= dia1+"/"+ mes1 + "/"+anio1;

    }

    else if (mes1.length == 1 && dia1.length != 1){
            mes1= "0" + mes1;
            fechaEval1= dia1+"/"+ mes1 + "/"+anio1;
        
    }

     else if(mes1.length != 1 && dia1.length == 1){
            dia1= "0" + dia1;
            fechaEval1= dia1+"/"+ mes1 + "/"+anio1;
        
    }else{
          fechaEval1= inputStartDate.val();
        
    }

    if (dia2.length == 1 && mes2.length == 1){
        mes2= "0" + mes2;
        dia2= "0" + dia2;

        fechaEval2= dia2+"/"+ mes2 + "/"+anio2;

    }

    else if (mes2.length == 1 && dia2.length != 1){
            mes2= "0" + mes2;
            fechaEval2= dia2+"/"+ mes2 + "/"+anio2;
        
    }

    else if (mes2.length != 1 && dia2.length == 1){
            dia2= "0" + dia2;
            fechaEval2= dia2+"/"+ mes2 + "/"+anio2;
        
    }else{
           fechaEval2= inputEndDate.val();
        
    }


    if (inputStartDate.attr('id').indexOf('date') > -1 && parseDate(fechaEval1)!= null) {


        startDate = parseDate(fechaEval1);

    }
    
    if (isNaN(startDate) || parseDate(fechaEval1)== null) {
        
        errorMsg = inputStartDate.attr('caption') + ' ' + ('debe ser una fecha válida');
    
        isOk = false;
    
    }

    if (inputEndDate.attr('id').indexOf('date') > -1 && parseDate(fechaEval2)!= null) {
        
        endDate = parseDate(fechaEval2);
    
    }
    
    if (isNaN(endDate) || parseDate(fechaEval2)== null) {
        
        if (errorMsg !== '') errorMsg = errorMsg + '\\n';
        
        errorMsg = errorMsg + inputEndDate.attr('caption') + ' ' + ('debe ser una fecha válida');
        
        isOk = false;
    }
    
    var today = new Date();
        
    if (endDate > today){
        
        if (errorMsg !== '') errorMsg = errorMsg + '\\n';
        
        var todayString = today.toLocaleString().split(" ")[0];
        
        errorMsg = errorMsg + inputEndDate.attr('caption') + ' ' + ('debe ser menor o igual a  ') + todayString;
        
        isOk = false;
        
    }   
  

    if (!isOk) {
        
        ruleServiceInvalidation = true;
        
        if(showErrorsNullDates == 1){

            showError(errorMsg);
        
        }
        
        
        return;
    }
            
    var startMonth = startDate.getMonth()+1;
    
    var endMonth = endDate.getMonth()+1;

    var starYear = startDate.getFullYear();
    
    var endYear = endDate.getFullYear();
    
    var numMeses = endYear *12 + endMonth - (starYear*12 + startMonth);

    if (endYear < starYear){
        numMeses = numMeses - 1;
    }

    console.log('La diferencia es: ' + numMeses);
    
    if(numMeses >= range){
        
        if (errorMsg !== '') errorMsg = errorMsg + '\\n';
            
        errorMsg = errorMsg + ('El rango de fechas no puede ser superior a 6 meses');
        
        ruleServiceInvalidation = true;
        
        showError(errorMsg);
            
        return;
    }
        
}
function validateDateField(inputDate){
  
	var errorMsg = "";
	var isOk = true;
	
	if(inputDate.val()==""){
			
		if(inputDate.val()==""){
		
			errorMsg = inputDate.attr("caption") + " " + ("es un campo obligatorio.");
		
			isOk = false;
		
		} 
		
		ruleServiceInvalidation = true;
		
		showError(errorMsg);
		
		return;
			
	}	

	var date;

	if (inputDate.attr("id").indexOf("date") > -1) {

		date = parseDate(inputDate.val());

	}
	
	if (isNaN(startDate)) {
		
		errorMsg = inputDate.attr("caption") + " " + ("debe ser una fecha valida");
	
		isOk = false;
	
	}

	if (!isOk) {
		
		ruleServiceInvalidation = true;
		
		showError(errorMsg);
		
		return;
	}
			
}
function validateOneFieldOrAnother(inputField1, inputField2){
  
	var errorMsg = "";
	var isOk = true;
	
	if ((inputField1.val() && inputField1.val().trim() != "") && (inputField2.val() && inputField2.val().trim() != "")) {
		
		errorMsg = "No se puede seleccionar " + inputField1.attr("caption") + " y " + inputField2.attr("caption") + " simultaneamente.";
		
		isOk = false;
			
	}

	if (!isOk) {
		
		ruleServiceInvalidation = true;
		
		showError(errorMsg);
		
		return;
	}
			
}
function completeMinOneInputOfTwo(e0, e1, msj) {
    var e0HaveData = false;
    
    if ((e0[0].value != null) && (e0[0].value.trim() != '')) {
        e0HaveData = true;
    }
    var e1HaveData = false;
    if ((e1[0].value != null) && (e1[0].value.trim() != '')) {
        e1HaveData = true;
    }

    if ((!e0HaveData && e1HaveData) || (e0HaveData && !e1HaveData)){
        ruleServiceInvalidation = true; 
        if (msj != 'null') { showError(msj); } else { showError('Debe ingresar al menos un campo'); }
    }

}
function validateLength(elem, val) {    var elemento = $(elem);    var valor = val;    var isOk = true;    if (((val != undefined) && (val != null)) && (elemento.val() != "")){	if ((elemento.val().length != valor)) {	    isOk = false;	}    }    if (!isOk) {        errorMsg = 'Error de validación: la cantidad de caracteres del "' +elemento.attr("caption") + '" debe ser igual a "' + valor + '" caracteres';        ruleServiceInvalidation = true;        showError(errorMsg);        return;    } else {        ruleServiceInvalidation = false;        $(errorPanel).hide();    }    return;}
function filterListOnLoad(sarasa){
	$("select").each(function() 
		{	
		var seleccionada =this.value;	
		var previous = $(this).attr("title");	
		if (previous != "") $("select option[value='"+previous+"']").prop("disabled",false);	
		if (seleccionada != "") $("select option[value='"+seleccionada+"']").attr("disabled","disabled");	
		$(this).attr("title",seleccionada) ;
		}
	);
}
function nonCopyPaste(elem){
	var elemento = $(elem);
	elemento.attr("onpaste", "return false");
	elemento.attr("oncut", "return false");
	elemento.attr("oncopy", "return false");
}
function completeMinOneInput(e0, e1, e2 ,msj) {
    var e0HaveData = false;
    
    if ((e0[0].value != null) && (e0[0].value.trim() != '')) {
        e0HaveData = true;
    }
    var e1HaveData = false;
    if ((e1[0].value != null) && (e1[0].value.trim() != '')) {
        e1HaveData = true;
    }
   
    var e2HaveData = false;
     if ((e2[0].value != null) && (e2[0].value.trim() != '')) {
         e2HaveData = true;
     }

    
    if (!e0HaveData && !e1HaveData && !e2HaveData) {
        ruleServiceInvalidation = true; 
        if (msj != 'null') { showError(msj); } else { showError('Debe ingresar solo un campo'); }
    }

}
function validateLengthV2(elem,elem2,nom,val){
	var elemento = $(elem);
	var elemento2 = $(elem2);
	var nombre = $(nom).html();
	var nombre2 = "Reconfirmación "+nombre;
	var valor = val;
	var isOk = true;

	if((elemento.val() != "")&&(elemento2.val() != "")){

		if ((elemento.val() != "")&&((valor != null)||(valor != ""))){
			if ((elemento.val().length!=valor)){
				isOk = false;
			}
		}
	
		if (!isOk){
			errorMsg='Error de validación: la cantidad de caracteres del "' + nombre + '" debe ser igual a "' + valor + '" caracteres';
			ruleServiceInvalidation=true;	
			showError(errorMsg);
			return;
		}
		else{
			ruleServiceInvalidation=false;
			$(errorPanel).hide();
		}
	}
	else{
		if((elemento.val() == "")&&(elemento2.val() == "")){
			errorMsg='Error de validación: el campo "'+nombre+'" es obligatorio '+'\\n'+'Error de validación: el campo "'+nombre2+'" es obligatorio';
			ruleServiceInvalidation=true;	
			showError(errorMsg);
			return;
		}
		else if(elemento.val() == ""){
			errorMsg='Error de validación: el campo "' + nombre + '" es obligatorio';
			ruleServiceInvalidation=true;	
			showError(errorMsg);
			return;
		}
		else{
			errorMsg='Error de validación: el campo "' + nombre2 + '" es obligatorio';
			ruleServiceInvalidation=true;	
			showError(errorMsg);
			return;
		}
	}
	return;
}
function completeMinOneInputOfTwoAndSelectOneOption(e0, e1, elem0,elem1 , msj) {
	
	var elemValue0 = $(elem0).val();
	var nombre = $(elem0).attr("caption");
	var elemValue1 = $(elem1).val();
	var nombre1 = $(elem1).attr("caption");
	var jq_elem0 = $(elem0);
	var estilo_elem0 = jq_elem0.attr("class");
	var jq_elem1 = $(elem1);
	var estilo_elem1 = jq_elem1.attr("class");
	

	var e0HaveData = false;
    
	if ((e0[0].value == '') && (e0[0].value.trim() == '')) {
        	e0HaveData = true;
	}
    	var e1HaveData = false;
    	if ((e1[0].value == '') && (e1[0].value.trim() == '')) {
        	e1HaveData = true;
    	}

    	if ((!e0HaveData && e1HaveData) || (e0HaveData && !e1HaveData)){
		
		if ((elemValue0=='Ninguno') && (elemValue1=='')) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+nombre1+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			jq_elem1.addClass(estilo_elem1+" error");
			return;
		} 
		
		
		else if ((elemValue0=='Ninguno') && (elemValue1!='')) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			return;
		}
        	
		
		else if ((elemValue0!='Ninguno') && (elemValue1=='')) {
			errorMsg2 = nombre1+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem1.addClass(estilo_elem1+" error");
			return;
		}
		 
		
		else if ((elemValue0!='Ninguno') && (elemValue1!='')) {
			errorMsg2 = msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			return;
		}
}
}
function firstFilterElement(elem){
	var p = $(elem).find("option").first();
	p.attr("disabled","disabled");

}

function enableDisabledDependSelects (elem, select1, select2){

	var valor1=$(select1).val();
	var elem=$(elem);
	var valor2=$(select2).val();


	if (valor1!="Ninguno" && valor2=="Ninguno" ){	
                $(elem).attr("class","action-button_tertiary_disabled");			
                $(elem).prop("style").cursor = "default"
	 	$(elem).prop("disabled", true);	
	}else{	
	 	$(elem).attr("class","action-button_primary");
                $(elem).prop("style").cursor = "pointer"
                $(elem).prop("disabled", false);
        }
}
function cleanElementsDependNullSelect(select1, select2){
	
	var valor1=$(select1).val();
	var valor2=$(select2);


	if (valor1=='Ninguno'){	
            valor2[0].length=1;

	}
}

function disabledRadioButton(radio,select,val){
	var aux = $(radio)
	var auxEstilo = $(radio.firstChild);
	var val = val;
	var elem = $($(radio).find("div").find("input")[0]);
	var elem2 = $($(radio).find("div").find("input")[1]);
	
	if (!val){
		elem.attr("disabled","disabled");
		elem2.attr("checked","checked");
		$(select).show();
		}
	else{
		elem.removeAttr("disabled","disabled");
		elem2.removeAttr("checked","checked");
		elem.attr("checked","checked");
		$(select).hide();
		}
}
function disabledTextField(elem){
	$(elem).attr("disabled","disabled");	
	}
function validateDayAsDate(dateFieldFecha, textFieldDias, textFieldDiasSoloLectura) {
  var date = new Date();
  var diaTotal = $(dateFieldFecha).val();
  var dia = diaTotal.substr(0, 2);
  var mes = diaTotal.substr(3, 2);
  var anio = diaTotal.substr(6, 6);
  var dias = ["Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"];
  date.setDate(dia);
  date.setMonth(mes - 1);
  date.setFullYear(anio);
  if ($(textFieldDias).get(0).tagName == "INPUT") {
    if ($(dateFieldFecha).val() != "") {
      $(textFieldDias).val(dias[date.getDay()]);
      $(textFieldDiasSoloLectura).attr("value",dias[date.getDay()]);
      $(textFieldDiasSoloLectura).html(dias[date.getDay()]);
    }
    else{
      $(textFieldDias).val("");
      $(textFieldDiasSoloLectura).html("");
    }
  } else {
    if ($(dateFieldFecha).val() != "") {
      $(textFieldDias).val(dias[date.getDay()]);
      $(textFieldDiasSoloLectura).html(dias[date.getDay()]);
    }
    else{
      $(textFieldDias).val("");
      $(textFieldDiasSoloLectura).html("");
    }
  }
}
function disableOneRadioButton (radio1){
	var radio= $(radio1);
	var elem = radio.find("div").find("input");
	elem.attr("disabled","disabled");
	}
function disabledElementOnClick(buttom,elem){
	var elem = $(elem);
	elem.removeAttr("disabled");
	var boton = $(buttom);
	boton.click();
	}
function enableElement(elem){
	elem = $(elem);
	
	if((elem!=null)&&(elem.attr("disabled")=="disabled")){
		elem.removeAttr("disabled");		
		}
	if((elem!=null)&&(elem.attr("disabled")==undefined)){
		elem.attr("disabled","disabled");
		}
	}
function changeOfDateToString (elem0, elem1){
	var var0= $(elem0).val();
	var var1= $(elem1).val();
	if (var0 != '') {
		var1=var0;
	}  
}
function enableDisableKeyboard(check, elem) {
	if ($(check).prop("checked")) {
		$(elem).attr("readonly", true);
		document.getElementById(elem[0].id).onfocus = function(event) {
			if (this.readOnly != true) {
				this.blur(event);
			}
			this.readOnly = true;
			return false;
		};
	} else {
		$(elem).removeAttr("readonly");
		document.getElementById(elem[0].id).onfocus = function(event) {
			return true;
		};
	}
}
function completeMinOneInputV2(e0, e1, e2 ,elem0 ,elem1 ,msj) {
	var e0HaveData = false;
  	var elemValue0 = $(elem0).val();
	var nombre = $(elem0).attr("caption");
	var elemValue1 = $(elem1).val();
	var nombre1 = $(elem1).attr("caption");
	var jq_elem0 = $(elem0);
	var estilo_elem0 = jq_elem0.attr("class");
	var jq_elem1 = $(elem1);
	var estilo_elem1 = jq_elem1.attr("class");
	var estilo_con_error_elem0 = estilo_elem0.substr(-6);
	var estilo_con_error_elem1 = estilo_elem1.substr(-6);
	if (estilo_con_error_elem0 == " error") {
		var estilo_dinamico_elem0 = estilo_elem0.substring(0,estilo_elem0.length-6);
		jq_elem0.removeClass();
		jq_elem0.addClass(estilo_dinamico_elem0);
	}
	
	if (estilo_con_error_elem1 == " error") {
		var estilo_dinamico_elem1 = estilo_elem1.substring(0,estilo_elem1.length-6);
		jq_elem1.removeClass();
		jq_elem1.addClass(estilo_dinamico_elem1);
	}
	
    
	if ((e0[0].value != null) && (e0[0].value.trim() != '')) {
        	e0HaveData = true;
    	}
    	var e1HaveData = false;
    	if ((e1[0].value != null) && (e1[0].value.trim() != '')) {
		e1HaveData = true;
    	}
   
    	var e2HaveData = false;
     	if ((e2[0].value != null) && (e2[0].value.trim() != '')) {
         	e2HaveData = true;
     	}

    
    	if (!e0HaveData && !e1HaveData && !e2HaveData) {

        	if ((elemValue0=='Ninguno') && (elemValue1=='')) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+nombre1+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			jq_elem1.addClass(estilo_elem1+" error");
			return;
		} 
		
		
		else if ((elemValue0=='Ninguno') && (elemValue1!='')) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			return;
		}
        	
		
		else if ((elemValue0!='Ninguno') && (elemValue1=='')) {
			errorMsg2 = nombre1+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem1.addClass(estilo_elem1+" error");
			return;
		}
		 
		
		else if ((elemValue0!='Ninguno') && (elemValue1!='')) {
			errorMsg2 = msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			return;
		}
        
    	}

}
function completeMinOneInputV3(e0, e1, e2 ,elem0 ,elem1 , elem2, msj) {
	var e0HaveData = false;
  	var elemValue0 = $(elem0).val();
	var nombre = $(elem0).attr("caption");
	var elemValue1 = $(elem1).val();
	var nombre1 = $(elem1).attr("caption");
	var elemValue2 = $(elem2).val();
	var nombre2 = $(elem2).attr("caption");
	var jq_elem0 = $(elem0);
	var estilo_elem0 = jq_elem0.attr("class");
	var jq_elem1 = $(elem1);
	var estilo_elem1 = jq_elem1.attr("class");
	var jq_elem2 = $(elem2);
	var estilo_elem2 = jq_elem2.attr("class");
	var estilo_con_error_elem0 = estilo_elem0.substr(-6);
	var estilo_con_error_elem1 = estilo_elem1.substr(-6);
	var estilo_con_error_elem2 = estilo_elem2.substr(-6);
	if (estilo_con_error_elem0 == " error") {
		var estilo_dinamico_elem0 = estilo_elem0.substring(0,estilo_elem0.length-6);
		jq_elem0.removeClass();
		jq_elem0.addClass(estilo_dinamico_elem0);
	}
	
	if (estilo_con_error_elem1 == " error") {
		var estilo_dinamico_elem1 = estilo_elem1.substring(0,estilo_elem1.length-6);
		jq_elem1.removeClass();
		jq_elem1.addClass(estilo_dinamico_elem1);
	}
	
	if (estilo_con_error_elem2 == " error") {
		var estilo_dinamico_elem2 = estilo_elem2.substring(0,estilo_elem2.length-6);
		jq_elem2.removeClass();
		jq_elem2.addClass(estilo_dinamico_elem2);
	}
    
	if ((e0[0].value != null) && (e0[0].value.trim() != '')) {
        	e0HaveData = true;
    	}
    	var e1HaveData = false;
    	if ((e1[0].value != null) && (e1[0].value.trim() != '')) {
		e1HaveData = true;
    	}
   
    	var e2HaveData = false;
     	if ((e2[0].value != null) && (e2[0].value.trim() != '')) {
         	e2HaveData = true;
     	}

    
    	if (!e0HaveData && !e1HaveData && !e2HaveData) {

        	if ((elemValue0=='Ninguno') && (elemValue1=='') && (elemValue2=='Ninguno')) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+nombre1+' es obligatorio'+'\\n'+nombre2+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			jq_elem1.addClass(estilo_elem1+" error");
			jq_elem2.addClass(estilo_elem2+" error");
			return;
		} 
		
		
		else if ((elemValue0!='Ninguno') && (elemValue1=='') && (elemValue2=='Ninguno')) {
			errorMsg2 = nombre1+' es obligatorio'+'\\n'+nombre2+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem1.addClass(estilo_elem1+" error");
			jq_elem2.addClass(estilo_elem2+" error");
			return;
		}
        	
		
		else if ((elemValue0!='Ninguno') && (elemValue1!='') && (elemValue2=='Ninguno')) {
			errorMsg2 = nombre2+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem2.addClass(estilo_elem2+" error");
			return;
		}
		 
		
		else if ((elemValue0!='Ninguno') && (elemValue1!='') && (elemValue2!='Ninguno')) {
			errorMsg2 = msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			return;
		}
		 
		
		else if ((elemValue0=='Ninguno') && (elemValue1!='') && (elemValue2=='Ninguno')) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+nombre2+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			jq_elem2.addClass(estilo_elem2+" error");
			return;
		}
		 
		
		else if ((elemValue0=='Ninguno') && (elemValue1!='') && (elemValue2!='Ninguno')) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			return;
		}
		 
		
		else if ((elemValue0=='Ninguno') && (elemValue1=='') && (elemValue2!='Ninguno')) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+nombre1+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			jq_elem1.addClass(estilo_elem1+" error");
			return;
		}
		 
		
		else if ((elemValue0!='Ninguno') && (elemValue1=='') && (elemValue2!='Ninguno')) {
			errorMsg2 = nombre1+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem1.addClass(estilo_elem1+" error");
			return;
		}
        
    	}

}
function completeMinOneInputOfTwoAndSelectOneOptionV2(e0, e1, elem0,elem1 ,elem2, msj) {
	
	var elemValue0 = $(elem0).val();
	var nombre = $(elem0).attr("caption");
	var elemValue1 = $(elem1).val();
	var nombre1 = $(elem1).attr("caption");
	var elemValue2 = $(elem2).val();
	var nombre2 = $(elem2).attr("caption");
	var jq_elem0 = $(elem0);
	var estilo_elem0 = jq_elem0.attr("class");
	var jq_elem1 = $(elem1);
	var estilo_elem1 = jq_elem1.attr("class");
	var jq_elem2 = $(elem2);
	var estilo_elem2 = jq_elem2.attr("class");
	

	var e0HaveData = false;
    
	if ((e0[0].value == '') && (e0[0].value.trim() == '')) {
        	e0HaveData = true;
	}
    	var e1HaveData = false;
    	if ((e1[0].value == '') && (e1[0].value.trim() == '')) {
        	e1HaveData = true;
    	}

    	if ((!e0HaveData && e1HaveData) || (e0HaveData && !e1HaveData)){
		
		if ((elemValue0=='Ninguno') && (elemValue1=='') && (elemValue2=='Ninguno')) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+nombre1+' es obligatorio'+'\\n'+nombre2+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			jq_elem1.addClass(estilo_elem1+" error");
			jq_elem2.addClass(estilo_elem2+" error");
			return;
		} 
		
		
		else if ((elemValue0!='Ninguno') && (elemValue1=='') && (elemValue2=='Ninguno')) {
			errorMsg2 = nombre1+' es obligatorio'+'\\n'+nombre2+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem1.addClass(estilo_elem1+" error");
			jq_elem2.addClass(estilo_elem2+" error");
			return;
		}
        	
		
		else if ((elemValue0!='Ninguno') && (elemValue1!='') && (elemValue2=='Ninguno')) {
			errorMsg2 = nombre2+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem2.addClass(estilo_elem2+" error");
			return;
		}
		 
		
		else if ((elemValue0!='Ninguno') && (elemValue1!='') && (elemValue2!='Ninguno')) {
			errorMsg2 = msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			return;
		}
		 
		
		else if ((elemValue0=='Ninguno') && (elemValue1!='') && (elemValue2=='Ninguno')) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+nombre2+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			jq_elem2.addClass(estilo_elem2+" error");
			return;
		}
		 
		
		else if ((elemValue0=='Ninguno') && (elemValue1!='') && (elemValue2!='Ninguno')) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			return;
		}
		 
		
		else if ((elemValue0=='Ninguno') && (elemValue1=='') && (elemValue2!='Ninguno')) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+nombre1+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			jq_elem1.addClass(estilo_elem1+" error");
			return;
		}
		 
		
		else if ((elemValue0!='Ninguno') && (elemValue1=='') && (elemValue2!='Ninguno')) {
			errorMsg2 = nombre1+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem1.addClass(estilo_elem1+" error");
			return;
		}
}
}
function completeMinOneInputOfTwoAndSelectOneOptionV3(e0, e1, elem0, msj) {
	
	var elemValue0 = $(elem0).val();
	var nombre = $(elem0).attr("caption");
	var jq_elem0 = $(elem0);
	var estilo_elem0 = jq_elem0.attr("class");
	var e0HaveData = false;

	var jq_elem1 = $(e1);
	var estilo_elem1 = jq_elem1.attr("class");
	var estilo_con_error_elem1 = estilo_elem1.substr(-6);
	
	if (estilo_con_error_elem1 == " error") {
		var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
		jq_elem1.removeClass();
		jq_elem1.addClass(estilo_dinamico_elem1);
	}
    
	if ((e0[0].value == '') && (e0[0].value.trim() == '')) {
        	e0HaveData = true;
	}
    	var e1HaveData = false;
    	if ((e1[0].value == '') && (e1[0].value.trim() == '')) {
        	e1HaveData = true;
    	}

    	if ((!e0HaveData && e1HaveData) || (e0HaveData && !e1HaveData)){
		
		if ((elemValue0=="Ninguno")) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			jq_elem1.addClass(estilo_elem1 + " error");
			return;
		} 
		
		
		else if ((elemValue0!="Ninguno")) {
			errorMsg2 = msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem1.addClass(estilo_elem1 + " error");
			return;
		}
        	
}
}
function completeMinOneInputV4(e0, e1, e2 ,elem0 ,msj) {
	var e0HaveData = false;
  	var elemValue0 = $(elem0).val();
	var nombre = $(elem0).attr("caption");
	var jq_elem0 = $(elem0);
	var estilo_elem0 = jq_elem0.attr("class");
	var estilo_con_error_elem0 = estilo_elem0.substr(-6);
	if (estilo_con_error_elem0 == " error") {
		var estilo_dinamico_elem0 = estilo_elem0.substring(0,estilo_elem0.length-6);
		jq_elem0.removeClass();
		jq_elem0.addClass(estilo_dinamico_elem0);
	}
	
	
	if ((e0[0].value != null) && (e0[0].value.trim() != '')) {
        	e0HaveData = true;
    	}
    	var e1HaveData = false;
    	if ((e1[0].value != null) && (e1[0].value.trim() != '')) {
		e1HaveData = true;
    	}
   
    	var e2HaveData = false;
     	if ((e2[0].value != null) && (e2[0].value.trim() != '')) {
         	e2HaveData = true;
     	}

    
    	if (!e0HaveData && !e1HaveData && !e2HaveData) {

        	if ((elemValue0=='Ninguno')) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			return;
		} 
		
		
		else if ((elemValue0!='Ninguno')) {
			errorMsg2 = msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			return;
		}
        	
		
        
    	}

}
function avatarObligAndCel(avatar1, e1, e2, e3, e4, e5, e6, elem0, elem1, msje, msje2, select1) {

	var avatar=avatar1.get(0);

	var selec= avatar.lastChild;

	var x = selec.children[1];

	var img= x.lastChild;

	var src=img.getAttribute("src");
		
	var valor1=$(select1).val();

	var valorE1 = $(e1).val();

	var nombre1 = $(e1).attr("caption");

	var valorE2 = $(e2).val();

	var nombre2 = $(e2).attr("caption");

	var valorE3 = $(e3).val();

	var nombre3 = $(e3).attr("caption");

	var valorE4 = $(e4).val();

	var nombre4 = $(e4).attr("caption");

	var valorE5 = $(e5).val();

	var nombre5 = $(e5).attr("caption");

	var valorE6 = $(e6).val();

	var nombre6 = $(e6).attr("caption");


	var select = $(select1).val();



    var jq_elem1 = $(e1);
    var estilo_elem1 = jq_elem1.attr("class");
    var jq_elem2 = $(e2);
    var estilo_elem2 = jq_elem2.attr("class");
    var estilo_con_error_elem1 = estilo_elem1.substr(-6);
    var estilo_con_error_elem2 = estilo_elem2.substr(-6);

    var jq_elem3 = $(e3);
    var estilo_elem3 = jq_elem3.attr("class");
    var jq_elem4 = $(e4);
    var estilo_elem4 = jq_elem4.attr("class");
    var estilo_con_error_elem3 = estilo_elem3.substr(-6);
    var estilo_con_error_elem4 = estilo_elem4.substr(-6);

    var jq_elem5 = $(e5);
    var estilo_elem5 = jq_elem5.attr("class");
    var jq_elem6 = $(e6);
    var estilo_elem6 = jq_elem6.attr("class");
    var estilo_con_error_elem5 = estilo_elem5.substr(-6);
    var estilo_con_error_elem6 = estilo_elem6.substr(-6);


    var jq_elem7 = $(elem0);
    var estilo_elem7 = jq_elem7.attr("class");
    var jq_elem8 = $(elem1);
    var estilo_elem8 = jq_elem8.attr("class");
    var estilo_con_error_elem7 = estilo_elem7.substr(-6);
    var estilo_con_error_elem8 = estilo_elem8.substr(-6);

    var jq_elem9 = $(select1);
    var estilo_elem9 = jq_elem9.attr("class");
    var estilo_con_error_elem9 = estilo_elem9.substr(-6);


    if (estilo_con_error_elem1 == " error") {
        var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
        jq_elem1.removeClass();
        jq_elem1.addClass(estilo_dinamico_elem1);
    }

    if (estilo_con_error_elem2 == " error") {
        var estilo_dinamico_elem2 = estilo_elem2.substring(0, estilo_elem2.length - 6);
        jq_elem2.removeClass();
        jq_elem2.addClass(estilo_dinamico_elem2);
    }


    if (estilo_con_error_elem3 == " error") {
        var estilo_dinamico_elem3 = estilo_elem3.substring(0, estilo_elem3.length - 6);
        jq_elem3.removeClass();
        jq_elem3.addClass(estilo_dinamico_elem3);
    }

    if (estilo_con_error_elem4 == " error") {
        var estilo_dinamico_elem4 = estilo_elem4.substring(0, estilo_elem4.length - 6);
        jq_elem4.removeClass();
        jq_elem4.addClass(estilo_dinamico_elem4);
    }


    if (estilo_con_error_elem5 == " error") {
        var estilo_dinamico_elem5 = estilo_elem5.substring(0, estilo_elem5.length - 6);
        jq_elem5.removeClass();
        jq_elem5.addClass(estilo_dinamico_elem5);
    }

    if (estilo_con_error_elem6 == " error") {
        var estilo_dinamico_elem6 = estilo_elem6.substring(0, estilo_elem6.length - 6);
        jq_elem6.removeClass();
        jq_elem6.addClass(estilo_dinamico_elem6);
    }

    if (estilo_con_error_elem7 == " error") {
        var estilo_dinamico_elem7 = estilo_elem7.substring(0, estilo_elem7.length - 6);
        jq_elem7.removeClass();
        jq_elem7.addClass(estilo_dinamico_elem7);
    }


    if (estilo_con_error_elem8 == " error") {
        var estilo_dinamico_elem8 = estilo_elem8.substring(0, estilo_elem8.length - 6);
        jq_elem8.removeClass();
        jq_elem8.addClass(estilo_dinamico_elem8);
    }

    if (estilo_con_error_elem9 == " error") {
        var estilo_dinamico_elem9 = estilo_elem9.substring(0, estilo_elem9.length - 6);
        jq_elem9.removeClass();
        jq_elem9.addClass(estilo_dinamico_elem9);
    }



    var vacio = false;
    if (elem0[0].value == ""){
        vacio = true;
    }
    var vacio1 = false;
    if (elem1[0].value == ""){
        vacio1 = true;
    }
    var vacio2 = false;
    if (select == "Ninguno") {
        vacio2 = true;
    }



    if ((!vacio && vacio1 && vacio2) || (vacio && !vacio1 && vacio2) || (vacio && vacio1 && !vacio2) || (!vacio && !vacio1 && vacio2) || (vacio && !vacio1 && !vacio2) || (!vacio && vacio1 && !vacio2)) {

        ruleServiceInvalidation = true;
        var errorMsg2 = msje;


        if ((elem0[0].value == "")) {
            jq_elem7.addClass(estilo_elem7 + " error");
        }

        if ((elem1[0].value == "")) {
            jq_elem8.addClass(estilo_elem8 + " error");
        }


        if ((select == "Ninguno")) {
            jq_elem9.addClass(estilo_elem9 + " error");
        }

        if ((valorE1 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre1 + " es obligatorio" + "\\n";
            jq_elem1.addClass(estilo_elem1 + " error");
        }
        if ((valorE2 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre2 + " es obligatorio" + "\\n";
            jq_elem2.addClass(estilo_elem2 + " error");
        }

        if ((valorE3 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre3 + " es obligatorio" + "\\n";
            jq_elem3.addClass(estilo_elem3 + " error");
        }

        if ((valorE4 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre4 + " es obligatorio" + "\\n";
            jq_elem4.addClass(estilo_elem4 + " error");
        }

        if ((valorE5 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre5 + " es obligatorio" + "\\n";
            jq_elem5.addClass(estilo_elem5 + " error");
        }

        if ((valorE6 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre6 + " es obligatorio" + "\\n";
            jq_elem6.addClass(estilo_elem6 + " error");
        }

	if (src =="images/avatar/default.png") {

		   errorMsg2 = errorMsg2 + "\\n" + msje2;

	}

        showError(errorMsg2);
        return;

    }


}

function avatarOblig(avatar1, e1, e2, e3, e4, e5, e6, msje2) {

	var avatar=avatar1.get(0);

	var selec= avatar.lastChild;

	var x = selec.children[1];

	var img= x.lastChild;

	var src=img.getAttribute("src");

	var valorE1 = $(e1).val();

	var nombre1 = $(e1).attr("caption");

	var valorE2 = $(e2).val();

	var nombre2 = $(e2).attr("caption");

	var valorE3 = $(e3).val();

	var nombre3 = $(e3).attr("caption");

	var valorE4 = $(e4).val();

	var nombre4 = $(e4).attr("caption");

	var valorE5 = $(e5).val();

	var nombre5 = $(e5).attr("caption");

	var valorE6 = $(e6).val();

	var nombre6 = $(e6).attr("caption");



    var jq_elem1 = $(e1);
    var estilo_elem1 = jq_elem1.attr("class");
    var jq_elem2 = $(e2);
    var estilo_elem2 = jq_elem2.attr("class");
    var estilo_con_error_elem1 = estilo_elem1.substr(-6);
    var estilo_con_error_elem2 = estilo_elem2.substr(-6);

    var jq_elem3 = $(e3);
    var estilo_elem3 = jq_elem3.attr("class");
    var jq_elem4 = $(e4);
    var estilo_elem4 = jq_elem4.attr("class");
    var estilo_con_error_elem3 = estilo_elem3.substr(-6);
    var estilo_con_error_elem4 = estilo_elem4.substr(-6);

    var jq_elem5 = $(e5);
    var estilo_elem5 = jq_elem5.attr("class");
    var jq_elem6 = $(e6);
    var estilo_elem6 = jq_elem6.attr("class");
    var estilo_con_error_elem5 = estilo_elem5.substr(-6);
    var estilo_con_error_elem6 = estilo_elem6.substr(-6);


    if (estilo_con_error_elem1 == " error") {
        var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
        jq_elem1.removeClass();
        jq_elem1.addClass(estilo_dinamico_elem1);
    }

    if (estilo_con_error_elem2 == " error") {
        var estilo_dinamico_elem2 = estilo_elem2.substring(0, estilo_elem2.length - 6);
        jq_elem2.removeClass();
        jq_elem2.addClass(estilo_dinamico_elem2);
    }


    if (estilo_con_error_elem3 == " error") {
        var estilo_dinamico_elem3 = estilo_elem3.substring(0, estilo_elem3.length - 6);
        jq_elem3.removeClass();
        jq_elem3.addClass(estilo_dinamico_elem3);
    }

    if (estilo_con_error_elem4 == " error") {
        var estilo_dinamico_elem4 = estilo_elem4.substring(0, estilo_elem4.length - 6);
        jq_elem4.removeClass();
        jq_elem4.addClass(estilo_dinamico_elem4);
    }


    if (estilo_con_error_elem5 == " error") {
        var estilo_dinamico_elem5 = estilo_elem5.substring(0, estilo_elem5.length - 6);
        jq_elem5.removeClass();
        jq_elem5.addClass(estilo_dinamico_elem5);
    }

    if (estilo_con_error_elem6 == " error") {
        var estilo_dinamico_elem6 = estilo_elem6.substring(0, estilo_elem6.length - 6);
        jq_elem6.removeClass();
        jq_elem6.addClass(estilo_dinamico_elem6);
    }

 
    if (src =="images/avatar/default.png") {

        ruleServiceInvalidation = true;
        var errorMsg2 = msje2;


        if ((valorE1 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre1 + " es obligatorio" + "\\n";
            jq_elem1.addClass(estilo_elem1 + " error");
        }
        if ((valorE2 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre2 + " es obligatorio" + "\\n";
            jq_elem2.addClass(estilo_elem2 + " error");
        }

        if ((valorE3 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre3 + " es obligatorio" + "\\n";
            jq_elem3.addClass(estilo_elem3 + " error");
        }

        if ((valorE4 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre4 + " es obligatorio" + "\\n";
            jq_elem4.addClass(estilo_elem4 + " error");
        }

        if ((valorE5 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre5 + " es obligatorio" + "\\n";
            jq_elem5.addClass(estilo_elem5 + " error");
        }

        if ((valorE6 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre6 + " es obligatorio" + "\\n";
            jq_elem6.addClass(estilo_elem6 + " error");
        }


        showError(errorMsg2);
        return;

    }


}




function avatarObligAndCel2(avatar1, e1, e2, e3, e4, e5, e6, elem0, elem1, msje, msje2, select1) {

  var avatar=avatar1.get(0);

  var selec= avatar.lastChild;

  var x = selec.children[1];

  var img= x.lastChild;

  var src=img.getAttribute("src");
    
  var valor1=$(select1).val();

  var valorE1 = $(e1).val();

  var nombre1 = $(e1).attr("caption");

  var valorE2 = $(e2).val();

  var nombre2 = $(e2).attr("caption");

  var valorE3 = $(e3).val();

  var nombre3 = $(e3).attr("caption");

  var valorE4 = $(e4).val();

  var nombre4 = $(e4).attr("caption");

  var valorE5 = $(e5).val();

  var nombre5 = $(e5).attr("caption");

  var valorE6 = $(e6).val();

  var nombre6 = $(e6).attr("caption");


  var select = $(select1).val();



    var jq_elem1 = $(e1);
    var estilo_elem1 = jq_elem1.attr("class");
    var jq_elem2 = $(e2);
    var estilo_elem2 = jq_elem2.attr("class");
    var estilo_con_error_elem1 = estilo_elem1.substr(-6);
    var estilo_con_error_elem2 = estilo_elem2.substr(-6);

    var jq_elem3 = $(e3);
    var estilo_elem3 = jq_elem3.attr("class");
    var jq_elem4 = $(e4);
    var estilo_elem4 = jq_elem4.attr("class");
    var estilo_con_error_elem3 = estilo_elem3.substr(-6);
    var estilo_con_error_elem4 = estilo_elem4.substr(-6);

    var jq_elem5 = $(e5);
    var estilo_elem5 = jq_elem5.attr("class");
    var jq_elem6 = $(e6);
    var estilo_elem6 = jq_elem6.attr("class");
    var estilo_con_error_elem5 = estilo_elem5.substr(-6);
    var estilo_con_error_elem6 = estilo_elem6.substr(-6);


    var jq_elem7 = $(elem0);
    var estilo_elem7 = jq_elem7.attr("class");
    var jq_elem8 = $(elem1);
    var estilo_elem8 = jq_elem8.attr("class");
    var estilo_con_error_elem7 = estilo_elem7.substr(-6);
    var estilo_con_error_elem8 = estilo_elem8.substr(-6);

    var jq_elem9 = $(select1);
    var estilo_elem9 = jq_elem9.attr("class");
    var estilo_con_error_elem9 = estilo_elem9.substr(-6);


    if (estilo_con_error_elem1 == " error") {
        var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
        jq_elem1.removeClass();
        jq_elem1.addClass(estilo_dinamico_elem1);
    }

    if (estilo_con_error_elem2 == " error") {
        var estilo_dinamico_elem2 = estilo_elem2.substring(0, estilo_elem2.length - 6);
        jq_elem2.removeClass();
        jq_elem2.addClass(estilo_dinamico_elem2);
    }


    if (estilo_con_error_elem3 == " error") {
        var estilo_dinamico_elem3 = estilo_elem3.substring(0, estilo_elem3.length - 6);
        jq_elem3.removeClass();
        jq_elem3.addClass(estilo_dinamico_elem3);
    }

    if (estilo_con_error_elem4 == " error") {
        var estilo_dinamico_elem4 = estilo_elem4.substring(0, estilo_elem4.length - 6);
        jq_elem4.removeClass();
        jq_elem4.addClass(estilo_dinamico_elem4);
    }


    if (estilo_con_error_elem5 == " error") {
        var estilo_dinamico_elem5 = estilo_elem5.substring(0, estilo_elem5.length - 6);
        jq_elem5.removeClass();
        jq_elem5.addClass(estilo_dinamico_elem5);
    }

    if (estilo_con_error_elem6 == " error") {
        var estilo_dinamico_elem6 = estilo_elem6.substring(0, estilo_elem6.length - 6);
        jq_elem6.removeClass();
        jq_elem6.addClass(estilo_dinamico_elem6);
    }

    if (estilo_con_error_elem7 == " error") {
        var estilo_dinamico_elem7 = estilo_elem7.substring(0, estilo_elem7.length - 6);
        jq_elem7.removeClass();
        jq_elem7.addClass(estilo_dinamico_elem7);
    }


    if (estilo_con_error_elem8 == " error") {
        var estilo_dinamico_elem8 = estilo_elem8.substring(0, estilo_elem8.length - 6);
        jq_elem8.removeClass();
        jq_elem8.addClass(estilo_dinamico_elem8);
    }

    if (estilo_con_error_elem9 == " error") {
        var estilo_dinamico_elem9 = estilo_elem9.substring(0, estilo_elem9.length - 6);
        jq_elem9.removeClass();
        jq_elem9.addClass(estilo_dinamico_elem9);
    }



    var vacio = false;
    if (elem0[0].value == ""){
        vacio = true;
    }
    var vacio1 = false;
    if (elem1[0].value == ""){
        vacio1 = true;
    }
    var vacio2 = false;
    if (select == "Ninguno") {
        vacio2 = true;
    }



    if ((!vacio && vacio1 && vacio2) || (vacio && !vacio1 && vacio2) || (vacio && vacio1 && !vacio2) || (!vacio && !vacio1 && vacio2) || (vacio && !vacio1 && !vacio2) || (!vacio && vacio1 && !vacio2)) {

        ruleServiceInvalidation = true;
        var errorMsg2 = "";


        if ((elem0[0].value == "")) {
            jq_elem7.addClass(estilo_elem7 + " error");
        }

        if ((elem1[0].value == "")) {
            jq_elem8.addClass(estilo_elem8 + " error");
        }


        if ((select == "Ninguno")) {
            jq_elem9.addClass(estilo_elem9 + " error");
        }

        if ((valorE1 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre1 + " es un campo obligatorio" + "\\n";
            jq_elem1.addClass(estilo_elem1 + " error");
        }
        if ((valorE2 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre2 + " es un campo obligatorio" + "\\n";
            jq_elem2.addClass(estilo_elem2 + " error");
        }
        if ((valorE1 != "" && valorE2!="" && valorE1!=valorE2)) {
            errorMsg2 = errorMsg2 + "\\n" + nombre1 + " y "+ nombre2 + " no coinciden" + "\\n";
            jq_elem1.addClass(estilo_elem1 + " error");
            jq_elem2.addClass(estilo_elem2 + " error");
        }

        if ((valorE3 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre3 + " es un campo obligatorio" + "\\n";
            jq_elem3.addClass(estilo_elem3 + " error");
        }

        if ((valorE4 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre4 + " es un campo obligatorio" + "\\n";
            jq_elem4.addClass(estilo_elem4 + " error");
        }
        if ((valorE3 != "" && valorE4!="" && valorE3!=valorE4)) {
            errorMsg2 = errorMsg2 + "\\n" + nombre3 + " y "+ nombre4 + " no coinciden" + "\\n";
            jq_elem3.addClass(estilo_elem3 + " error");
            jq_elem4.addClass(estilo_elem4 + " error");
        }

        if ((valorE5 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre5 + " es un campo obligatorio" + "\\n";
            jq_elem5.addClass(estilo_elem5 + " error");
        }

        if ((valorE6 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre6 + " es un campo obligatorio" + "\\n";
            jq_elem6.addClass(estilo_elem6 + " error");
        }
        if ((valorE5 != "" && valorE6!="" && valorE5!=valorE6)) {
            errorMsg2 = errorMsg2 + "\\n" + nombre5 + " y "+ nombre6 + " no coinciden" + "\\n";
            jq_elem5.addClass(estilo_elem5 + " error");
            jq_elem6.addClass(estilo_elem6 + " error");
        }

        errorMsg2 = errorMsg2 + "\\n" + msje + "\\n";



        if (src =="images/avatar/default.png") {

               errorMsg2 = errorMsg2 + "\\n" + msje2;

        }

            showError(errorMsg2);
            return;

        }



    if (src =="images/avatar/default.png"|| (valorE3 != "" && valorE4!="" && valorE3!=valorE4)||(valorE1 != "" && valorE2!="" && valorE1!=valorE2)||(valorE5 != "" && valorE6!="" && valorE5!=valorE6)) {

        ruleServiceInvalidation = true;
        var errorMsg2 = "";


        if ((valorE1 == "")) {
            errorMsg2 =nombre1 + " es un campo obligatorio" + "\\n";
            jq_elem1.addClass(estilo_elem1 + " error");
        }
        if ((valorE2 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre2 + " es un campo obligatorio" + "\\n";
            jq_elem2.addClass(estilo_elem2 + " error");
        }
        if ((valorE1 != "" && valorE2!="" && valorE1!=valorE2)) {
            errorMsg2 = errorMsg2 + "\\n" + nombre1 + " y "+ nombre2 + " no coinciden" + "\\n";
            jq_elem1.addClass(estilo_elem1 + " error");
            jq_elem2.addClass(estilo_elem2 + " error");
        }

        if ((valorE3 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre3 + " es un campo obligatorio" + "\\n";
            jq_elem3.addClass(estilo_elem3 + " error");
        }

        if ((valorE4 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre4 + " es un campo obligatorio" + "\\n";
            jq_elem4.addClass(estilo_elem4 + " error");
        }
        if ((valorE3 != "" && valorE4!="" && valorE3!=valorE4)) {
            errorMsg2 = errorMsg2 + "\\n" + nombre3 + " y "+ nombre4 + " no coinciden" + "\\n";
            jq_elem3.addClass(estilo_elem3 + " error");
            jq_elem4.addClass(estilo_elem4 + " error");
        }

        if ((valorE5 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre5 + " es un campo obligatorio" + "\\n";
            jq_elem5.addClass(estilo_elem5 + " error");
        }

        if ((valorE6 == "")) {
            errorMsg2 = errorMsg2 + "\\n" + nombre6 + " es un campo obligatorio" + "\\n";
            jq_elem6.addClass(estilo_elem6 + " error");
        }
        if ((valorE5 != "" && valorE6!="" && valorE5!=valorE6)) {
            errorMsg2 = errorMsg2 + "\\n" + nombre5 + " y "+ nombre6 + " no coinciden" + "\\n";
            jq_elem5.addClass(estilo_elem5 + " error");
            jq_elem6.addClass(estilo_elem6 + " error");
        }
        if (src =="images/avatar/default.png") {

        errorMsg2 = errorMsg2 + "\\n" + msje2;

        }


        showError(errorMsg2);
        return;

    }
  
  

}



function changeRowColor(collection,valueColor){
		collection.find("tbody").find("tr").click(changeRowBackground);
		collection.find("tbody").find("tr").each(function(){
			$(this).attr("data-color",valueColor);
			$(this).attr("data-orig-color",$(this).css("background-color"));
		})
	}
	function changeRowBackground(e)
	{
		
		obj = $(e.target).closest("tr");
		$(".selected").css("background-color",$(obj).attr("data-orig-color"));
		$(".selected").removeClass("selected");
		$(obj).addClass("selected");
		$(obj).css("background-color",$(obj).attr("data-color"));
	}
function validateFieldsAndCollections(elem,elem2,preg1,preg2,preg3,preg4){
    var elemento = $(elem).val();
    var elemento2 = $(elem2).val();
    var nombreElem = $(elem).attr("caption");
    var nombreElem2 = $(elem2).attr("caption");
    var errorMsg = "";
    var mensajeDePreguntas = "";

    errorElem = $(elem).attr("class").substr(-6);
    if(errorElem == " error") {sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6)} else {sinErrorElem = $(elem).attr("class")}

    errorElem2 = $(elem2).attr("class").substr(-6);
    if(errorElem2 == " error") {sinErrorElem2 = $(elem2).attr("class").substr(0,$(elem2).attr("class").length-6)} else {sinErrorElem2 = $(elem2).attr("class")}

    $(elem).removeClass();
    $(elem).addClass(sinErrorElem);

    $(elem2).removeClass();
    $(elem2).addClass(sinErrorElem2);

    if((elemento=="")||(elemento2=="")){
        
        if(elemento==""){
            errorMsg+= nombreElem + " es un campo obligatorio\\n";
            $(elem).addClass(elem.className+" error");
            ruleServiceInvalidation=true;
            }
            
        if(elemento2==""){
            errorMsg+= nombreElem2 + " es un campo obligatorio\\n";
            $(elem2).addClass(elem2.className+" error");
            ruleServiceInvalidation=true;
            }
        
        }
    mensajeDePreguntas = validateCollectionSelection(preg1,"Seleccioná una opción de cada pregunta");
    mensajeDePreguntas = validateCollectionSelection(preg2,"Seleccioná una opción de cada pregunta");
    mensajeDePreguntas = validateCollectionSelection(preg3,"Seleccioná una opción de cada pregunta");
    mensajeDePreguntas = validateCollectionSelection(preg4,"Seleccioná una opción de cada pregunta");

    if(mensajeDePreguntas != undefined){
        errorMsg += "Seleccioná una opción de cada pregunta"+"\\n";
    }
    if(errorMsg != ""){
        showError(errorMsg);
        return;
    }
    return;


}
function validateLengthPhone(elem1,elem2,valor,msgError){
	elemento1 = $(elem1).val();
	elemento2 = $(elem2).val();
	len1 = elemento1.length;
	len2 = elemento2.length;

	errorElem1 = $(elem1).attr("class").substr(-6);
	if(errorElem1 == " error") {sinErrorElem1 = $(elem1).attr("class").substr(0,$(elem1).attr("class").length-6)} else {sinErrorElem1 = $(elem1).attr("class")}
	errorElem2 = $(elem2).attr("class").substr(-6);
	if(errorElem2 == " error") {sinErrorElem2 = $(elem2).attr("class").substr(0,$(elem2).attr("class").length-6)} else {sinErrorElem2 = $(elem2).attr("class")}

	$(elem1).removeClass();
	$(elem1).addClass(sinErrorElem1);
	$(elem2).removeClass();
	$(elem2).addClass(sinErrorElem2);

	if(len1+len2 != valor){
		$(elem1).addClass(elem1.className+" error");
		$(elem2).addClass(elem2.className+" error");
		ruleServiceInvalidation=true;	
		showError(msgError);
		return;
		}
	}
function repeatedValidateNumbers(elem,errorMsg){
	var d = $(elem).val();
	contador = 0;

	errorElem = $(elem).attr("class").substr(-6);
	if(errorElem == " error") {sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6)} else {sinErrorElem = $(elem).attr("class")}

	$(elem).removeClass();
	$(elem).addClass(sinErrorElem);

	for (i=0;i<d.length;i++){
		if(contador < 4){		
			if (d[i]==d[i+1]){
				contador = contador+1;
				}
			else{
				contador = 0;
				}
			}
		else{
			$(elem).addClass(elem.className+" error");
			ruleServiceInvalidation=true;	
			showError(errorMsg);
			return;
			}
		}
	}
function validateConsecutiveNumbers(elem,errorMsg){
	var d = $(elem).val();
	var b = parseInt(d[0])+1;
	var c = parseInt(d[0])+2;
	var f = parseInt(d[0])+3;
	var e = parseInt(d[0])+4;

	errorElem = $(elem).attr("class").substr(-6);
	if(errorElem == " error") {sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6)} else {sinErrorElem = $(elem).attr("class")}

	$(elem).removeClass();
	$(elem).addClass(sinErrorElem);

	if((b==d[1])&&(c==d[2])&&(f==d[3])&&(e==d[4])){
		$(elem).addClass(elem.className+" error");
		ruleServiceInvalidation=true;	
		showError(errorMsg);
		return;
		}
	}
function validateRepeatChar(elem,errorMsgRangoInvalido,errorMsgCaracteresRepetidos){
 var d = $(elem).val();
 if (d!=""){
  if(d.length>1){
   if((d[0]==d[1])&&(d[0]==d[2])){
    ruleServiceInvalidation=true; 
    showError(errorMsgCaracteresRepetidos);
    return;
    }
   }
  else{
   ruleServiceInvalidation=true; 
   showError(errorMsgRangoInvalido);
   return;
   }
  
  }
 
 }
function validateYear(dateField,textField){
	var fecha = $(dateField).val();
	var anio= fecha.substr(6,6);
        $(textField).val(anio);
}
function validateMonth(dateField,textField){
    var fecha = $(dateField).val();
    var numeroMes= fecha.substr(3,2);
        var meses=["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio", "Agosto", "Septiembre","Octubre", "Noviembre", "Diciembre"];
	$(textField).val(meses[numeroMes-1]);
}
function maximoLength(elem,valor){
	$(elem).attr("maxLength",valor);
	}
function hidePassEffect(elem){

   var opts = {
         duration:      1000,
         replacement:   '%u2022',
         prefix:        'password_',
      }

      var checker = new Array();
      var timer   = new Array();
      var password_length = 0;

      $(elem).each(function() {
                
         // Se recuperan los valores originales del input
         var name        = $(elem).attr('name');
         var id          = $(elem).attr('id');
         var cssclass    = $(elem).attr('class');
         var style       = $(elem).attr('style');
         var size        = $(elem).attr('size');
         var maxlength   = $(elem).attr('maxlength');
         var tabindex    = $(elem).attr('tabindex');
         var accesskey   = $(elem).attr('accesskey');
         var value       = $(elem).attr('value');

         // seteo de timers
         timer.push(id);

         // se crea una copia identica
         $(elem).after(' <input name="' + (opts.prefix + name) + '" ' +
                                 'id="' +  (opts.prefix + id) + '" ' +
                               'type="text" ' +
                              (cssclass != '' ? 'class="' + cssclass + '"' : '') +
                              (style != 'undefined' ? 'style="visibility: hidden; position: absolute; z-index: 5;'+style+'"' : 
                              						  'style="visibility: hidden; position: absolute; z-index: 5;"') +
                              (size != '' ? 'size="' + size + '"' : '') +
                              'autocomplete="off" />');
         
         $('#'+ id).bind('keyup', function(event) {
          var pLength = $('#'+id).val().length;
            if (pLength <= password_length) {
               password_length = pLength;
               return;
            };

            password_length = pLength;
            
            copyValue(id);
            setPosition(id);
            
            setVisible(opts.prefix + id);
            clearTimeout(timer[id]);
            timer[id] = setTimeout(setInvisible,1000,opts.prefix+id);
            
          });
      });
	  
	  setPosition = function(id){
	  		var position = $('#'+id).position();
	  		$('#' + opts.prefix + id).css(position);
	  }

      setInvisible = function(id){
         $('#'+id).css('visibility', 'hidden');
         }

      setVisible = function(id){
         $('#'+id).css('visibility', 'visible');
         }

      
      copyValue = function(id){
                  var tmp = '';
                  var length = $('#'+id).val().length;
                  
                  for (i=0; i < length-1; i++) {
                     tmp = tmp + unescape(opts.replacement);
                  }
                  tmp=tmp + $('#' + id).val().charAt(length-1);
         
                  $('#' + opts.prefix + id).val(tmp);
                  
             }
}
function compareNumber2(elem,elem1,operador,select1){

        var select = $(select1).val();
	var valElem;
	var valElem1;
        var nombre = $(select1).attr("caption");

        var jq_elem9 = $(select1);
        var estilo_elem9 = jq_elem9.attr("class");
        var estilo_con_error_elem9 = estilo_elem9.substr(-6);
	

        var jq_elem = $(elem);
        var estilo_elem = jq_elem.attr("class");
        var jq_elem1 = $(elem1);
        var estilo_elem1 = jq_elem1.attr("class");
        var estilo_con_error_elem = estilo_elem.substr(-6);
        var estilo_con_error_elem1 = estilo_elem1.substr(-6);

        if (estilo_con_error_elem9 == " error") {
            var estilo_dinamico_elem9 = estilo_elem9.substring(0, estilo_elem9.length - 6);
            jq_elem9.removeClass();
            jq_elem9.addClass(estilo_dinamico_elem9);
    	}

	if (estilo_con_error_elem == " error") {
           var estilo_dinamico_elem = estilo_elem.substring(0, estilo_elem.length - 6);
           jq_elem.removeClass();
           jq_elem.addClass(estilo_dinamico_elem);
   	}

    	if (estilo_con_error_elem1 == " error") {
       	  var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
          jq_elem1.removeClass();
          jq_elem1.addClass(estilo_dinamico_elem1);

    	}

	if ($(elem).is('input')) {
		valElem = $(elem).val();
	} else { 
		valElem = $(elem).html();
	}

	if ($(elem1).is('input')) {
		valElem1 = $(elem1).val();
	} else { 
		valElem1 = $(elem1).html();
	}


	var errorMsg='';
	var isOk = true;
	var required = false;
	
	if(!required){

		if (valElem=='' || valElem1=='') {
			return;
		}
	}

	intElem = parseFloat(valElem);
	if (isNaN(intElem)) {  
		errorMsg = elem.attr('caption') + ' debe ser un número válido';
		isOk=false;		
	}

	intElem1 = parseFloat(valElem1);  
	if (isNaN(intElem1)) {
		if(errorMsg!='')
			errorMsg = errorMsg + '\\n';
 
		errorMsg = errorMsg + elem1.attr('caption') + ' debe ser un número válido';
		isOk=false;
	}

	if(!isOk){
		ruleServiceInvalidation=true;
        showError(errorMsg);		
		return;
	}

	var operadorText = '';

	if(operador == '>'){ //mayor
		isOk = (intElem > intElem1);
		operadorText = 'mayor';
	}else if(operador == '>='){ //mayor igual
		isOk = (intElem >= intElem1);
		operadorText = 'mayor o igual';
	}else if(operador == '<'){ //menor
		isOk = (intElem < intElem1);
		operadorText = 'menor';
	}else if(operador == '<='){ //menor igual
		isOk = (intElem <= intElem1);
		operadorText = 'menor o igual';
	}else if(operador == '=='){ //igual
		isOk = (intElem == intElem1);
		operadorText = 'igual';
	}else if(operador == '!='){ //distinto
		isOk = (intElem != elem1);
		operadorText = 'distinto';
	}
	
	if (operadorText == ''){
		operadorText = operador;
	}
	
	if(!isOk && select == "Ninguno"){
                jq_elem9.addClass(estilo_elem9 + " error");
		jq_elem.addClass(estilo_elem + " error");
		jq_elem1.addClass(estilo_elem1 + " error");
		errorMsg= nombre + ' es obligatorio'+ '\\n"' + elem.attr('caption') + '" debe ser ' + operadorText + ' a "' + elem1.attr('caption') + '"';
		ruleServiceInvalidation=true;	
        showError(errorMsg);	
		return;
	}
	else if(!isOk && select != "Ninguno"){
		jq_elem.addClass(estilo_elem + " error");
		jq_elem1.addClass(estilo_elem1 + " error");
		errorMsg='Error de validación: "' + elem.attr('caption') + '" debe ser ' + operadorText + ' a "' + elem1.attr('caption') + '"';
		ruleServiceInvalidation=true;	
       		showError(errorMsg);	
		return;
	}

	return;
}

  function disabledRadiobuttonInCollection(numColumna, tabla, valor){
  
  var coleccion = $(tabla);
  var filas = coleccion.find("tbody").find("tr");
  var columnas = filas.find("td");
  for (var i=0; i<=filas.length-1; i++){
    var filaActual = filas[i];
    var columna3 = $(filaActual).find("td")[numColumna];
    var columna0 = $(filaActual).find("td")[0];
    var radioButton = $(columna0).find("input");
    if ($(columna3).html() != valor){
      $(radioButton).attr("disabled", "disabled");
    } 
  }
}

function showVirtualKeyboard(check, elem, keyboard) {
	if ($(check).prop("checked")) {
		$(elem).attr("readonly", true);
		$(keyboard).click();
		return false;
	} else {
		$(elem).removeAttr("readonly");
		return true;
	}
}
function showElementWithFade(elem) {
    //verifica si existe label/caption asociado
    try {
        var label = "#label_" + elem[0].id;
        var hint = "#hint_" + elem[0].id;
        var req = "#req_" + elem[0].id;

        if ($(label).length) $(label).fadeIn(600);

        if ($(hint).length) $(hint).fadeIn(600);

        if ($(req).length) $(req).fadeIn(600);

        if ($(elem).hasClass("niceCalendar")) {
            $(elem).parent().fadeIn(600);
        } else {
            $(elem).fadeIn(600);
        }

        $(elem).removeClass("hiddenSection");

    } catch (e) {
        console.log("Rule ShowElement: Unknown element " + elem);
    }
}
function hideElementWithFade(elem) {
    //verifica si existe label/caption, hint y req asociado
    try {
        var label = "#label_" + elem[0].id;
        var hint = "#hint_" + elem[0].id;
        var req = "#req_" + elem[0].id;

        if ($(label).length) $(label).fadeOut(600);

        if ($(hint).length) $(hint).fadeOut(600);

        if ($(req).length) $(req).fadeOut(600);

        if ($(elem).hasClass("niceCalendar")) {
            $(elem).parent().fadeOut(600);
        } else {
            $(elem).fadeOut(600);
        }

        $(elem).addClass("hiddenSection");

    } catch (e) {
        console.log("Rule hideElementWithFade: Unknown element " + elem);
    }
}
function disabledRadiobuttonInCollectionWithElement(elem, numColumna, tabla){
	
	var coleccion = $(tabla);
	var cant=$(elem).attr("unmasked");
	var filas = coleccion.find("tbody").find("tr");
	var columnas = filas.find("td");
	for (var i=0; i<filas.length; i++){
		var filaActual = filas[i];
		var columna3 = $(filaActual).find("td")[numColumna];
		var columna0 = $(filaActual).find("td")[0];
		var radioButton = $(columna0).find("input");
		if (parseInt($(columna3).html()) > parseInt(cant)){
			$(radioButton).attr("disabled", "disabled");
		}	
	}
}
function ClicRadioToShowButton(elem, elem1){
	
	var idRadio= 'encodedcollection_'+$(elem).attr('id');
	var isOk = true;
	if ($('input[name='+idRadio+']').is(':checked')) {
        	isOk=true;
    	}
	else {
        	isOk=false;
		$(elem1).hide();
    	}
	if (isOk == true){
		$(elem1).show();	
	} 
	
}
function showOrHideAllElementWithFadeAndUpdateImageInSection(body_elem,body_id,header_elem,header_id,img_close,img_id,img_open,section_id){

	try { 
	
		if (body_elem.is(":visible")){
    		hideElementWithFade(body_elem);
			header_elem.find("img[id$="+img_id+"]").attr("src","images/" +img_close);
		}else{
			$("#"+section_id).find("div[id$="+body_id+"]").each(function(){                     
				
				var elem = $(this);
				
				if (elem.is(":visible")){
					
					var elemId = elem.attr("id");
					var n = elemId.lastIndexOf(body_id); 
					var sectionPartId = elemId.substring(0, n);
					hideElementWithFade(elem);
					$("#"+sectionPartId+header_id).find("img[id$="+img_id+"]").attr("src","images/"+img_close);
				} 
			});
			
			showElementWithFade(body_elem);
			header_elem.find("img[id$="+img_id+"]").attr("src","images/"+img_open);
		}
		
    } catch (e) {
        console.log("Rule showOrHideAllElementWithFadeAndUpdateImageInSection Fail");
    }
}
function checkBoxCondition(elem,valToSelect){
	var selectAll=true;
	if (elem != ""){
		var d = $(elem).find("tbody").find("tr");
		for (i = 0; i < d.length; i++){
			var q = $(d[i]);
			q = q.find("td");
			q = q[2]
			if (q.innerHTML == valToSelect){
				var j = d[i];
				j = j.firstChild;
				j.removeChild(j.childNodes[0]);
			}
			else{
				var j = d[i];
				j = j.firstChild.firstChild;
				if (j.checked==false){
					selectAll=false;
				}
			}
		}
	}
}
function maskingAmountTransfer(elem, maxStrippedSize) {
	if ((maxStrippedSize == undefined) || (maxStrippedSize == null)) {
		maxStrippedSize = 17;
	}

	var dec = new Number(2);

	var nums = new Array();
	var cont = 0;
	var ceroALaizquierda = true;

	for (m = 0; m < ($(elem).val().length) && (cont < maxStrippedSize); m++) {
		if (($(elem).val().charAt(m) >= "0") && ($(elem).val().charAt(m) <= "9")) {
			if (($(elem).val().charAt(m) != "0") || !(ceroALaizquierda)) {
				nums[cont] = $(elem).val().charAt(m);
				cont++;
				ceroALaizquierda = false;
			}
		}
	}

	var ctdd = eval(1 + dec);

	var parteEntera = "",
		parteDecimal = "",
		tres = 0;

	if ((nums.length - ctdd) < 0) {
		parteEntera = "0";
	} else {
		for (var k = nums.length - ctdd; k >= 0; k--) {
			parteEntera = nums[k] + parteEntera;
			tres++;
			if ((tres % 3) == 0) {
				if (k != 0) {
					parteEntera = CB.automask.thousSeparator + parteEntera;
				}
			}
		}
	}

	for (var dd = dec; dd > 0; dd--) {
		if (nums.length < dd) {
			parteDecimal = parteDecimal + "0";
		} else {
			parteDecimal = parteDecimal + nums[nums.length - dd];
		}
	}

	$(elem).val(parteEntera + CB.automask.decSeparator + parteDecimal);

}
function clickRadioToDisabledEnabledButton(elem, elem1){
	
	var idRadio= 'encodedcollection_'+$(elem).attr('id');
	if ($('input[name='+idRadio+']').is(':checked')) {
		isOk=true;
	}
	else {
		isOk=false;
		$(elem1).prop("disabled", true);
		$(elem1).toggleClass();
		$(elem1).addClass("action-button_tertiary_disabled");
		$(elem1).prop("style").cursor = "default";
	} 
	if (isOk == true){
		$(elem1).prop("disabled", false);
		$(elem1).toggleClass();
		$(elem1).addClass("action-button_primary");
		$(elem1).prop("style").cursor = "pointer";	
	} 
	
}
function compareTwoFields(elem,errorMsg,valor){
	if(elem!=""){
		if ((parseFloat($(elem).attr("unmasked")) <= 0)||(parseFloat($(elem).attr("unmasked")) > valor)){
			ruleServiceInvalidation=true;	
			showError(errorMsg);
			return;
		}
		else{
			ruleServiceInvalidation=false;
			$(errorPanel).hide();
		}
	}
}
function hideFieldToClickRadio(elem,elem2,valor){
	var opt0 = $(document.getElementById(elem[0].id+"_opt_0"));
	var opt1 = $(document.getElementById(elem[0].id+"_opt_1"));
	if ((opt0.attr("checked")=="checked")&&(opt0.val()==valor)) {
		$(elem2).hide();
	}
	else if((opt1.attr("checked")=="checked")&&(opt1.val()==valor)){
		$(elem2).hide();
	}
	else{$(elem2).show();}
}
function showFundsTimeZone(date1,date2,texto){
	
	if ((date1 != "")&&(date2!="")&&(texto!="")){
		var desde = date1;
		var hasta = date2;
		
		var horaDesde = desde.substr(8,2);

		var minutosDesde = desde.substr(10,2);

		var horaCompletaDesde = horaDesde+":"+minutosDesde;
		
		var horaHasta = hasta.substr(8,2);

		var minutosHasta = hasta.substr(10,2);

		var horaCompletaHasta = horaHasta+":"+minutosHasta;
		
		$(texto).val("Podra operar con este fondo de "+horaCompletaDesde+" a "+horaCompletaHasta)
		}
	}
function checkValue(elem1,elem2){
	
	if($(elem1 ).prop("checked")){
		$(elem2).attr("checked",false);
	}
}
function DisableElement(elem, eval) {
        if($(eval).prop("checked")) {  
            $(elem).prop("disabled", true);
            $(elem).toggleClass();
            $(elem).addClass("action-button_tertiary_disabled");
            $(elem).prop("style").cursor = "default";
        } 

}
function compareElemRangeTwoValues(elem,errorMsg,valMay,valMen){
	if ((elem != "")&&(valMen != "")&&(valMay != "")){
		var valor = parseFloat($(elem).attr("unmasked"));
		parseFloat(valMen);
		parseFloat(valMay);
		
		if ((valor < valMen)||(valor>valMay)){
			ruleServiceInvalidation=true;
			showError(errorMsg + valMen + " y " + valMay);
			return;
			}
		else{
			ruleServiceInvalidation=false;
			$(errorPanel).hide();
			}
		}	
	}
function layoutPrint(elem){
	window.print()
	}
function verifyCheckBoxSelectAll(elem){
	if (elem != ""){
		var flag = true;
		var d = $(elem).find("tbody").find("tr");
		for (i = 0; i < d.length; i++){
			var q = $(d[i]);
			q = q.find("td");
			ad = q[q.length-1]
			q = q[0];
			q = $(q.getElementsByClassName("checkboxCollection_"+elem[0].id));
			if ((q.attr("checked") != "checked")&&(ad.innerHTML == "Adherido")){
				flag = false;
				}
			}
		if (flag){
			var d = $(document.getElementById("multiCheck_"+elem[0].id))
			$(d).attr("checked","checked");
			}
		}
	}
function printContent(elem){
	var windowObject = window.open("", "PrintWindow");
	elementos = elem.find("tbody").find("tr");
	titulo = elementos[0];
	titulo = titulo.firstChild.firstChild.innerHTML;
	cuerpo = elementos[1];
	cuerpo = cuerpo.firstChild.firstChild.innerHTML;
	windowObject.document.writeln("<h1>"+titulo+"</h1>");
	windowObject.document.writeln(cuerpo);
	windowObject.document.close();
	windowObject.focus();
	windowObject.print();
	windowObject.close();
}
function addZero(elem) {
	var array=$(elem).val();
	var array2;

	switch (parseInt($(elem).val().length)) {
	    case 1:
		array2="0"+"0"+"0"+"0"+"0"+"0"+"0"+ array;
		$(elem).val(array2);
		break;
	    case 2:
		array2="0"+"0"+"0"+"0"+"0"+"0"+ array;
		$(elem).val(array2);
		break;
	    case 3:
		array2="0"+"0"+"0"+"0"+"0"+ array;
		$(elem).val(array2);
		break;
	    case 4:
		array2=+"0"+"0"+"0"+"0"+ array;
		$(elem).val(array2);
		break;
	    case 5:
		array2="0"+"0"+"0"+ array;
		$(elem).val(array2);
		break;
	    case 6:
		array2="0"+"0"+ array;
		$(elem).val(array2);
		break;
	    case  7:
		array2="0"+ array;
		$(elem).val(array2);
		break;
	}
}
function maskingAmountTransferFloat(elem1) {

    var elem = elem1.toString();
    var dec = new Number(2);
    var nums = new Array();
    var cont = 0
    var ceroALaizquierda = true;

    for (m = 0; m < $(elem).val().length; m++) {
        if (($(elem).val().charAt(m) >= "0") && ($(elem).val().charAt(m) <= "9")) {
            if (($(elem).val().charAt(m) != "0") || !(ceroALaizquierda)) {
                nums[cont] = $(elem).val().charAt(m);
                cont++;
                ceroALaizquierda = false;
            }
        }
    }

    var ctdd = eval(1 + dec);

    var parteEntera = "", parteDecimal = "", tres = 0;

    if ((nums.length - ctdd) < 0) {
        parteEntera = "0";
    } else {
        for (var k = nums.length - ctdd; k >= 0; k--) {
            parteEntera = nums[k] + parteEntera;
            tres++;
            if ((tres % 3) == 0) {
                if (k != 0) {
                    parteEntera = "." + parteEntera;
                }
            }
        }
    }

    for (var dd = dec; dd > 0; dd--) {
        if (nums.length < dd) {
            parteDecimal = parteDecimal + "0";
        } else {
            parteDecimal = parteDecimal + nums[nums.length - dd];
        }
    }
	var resultado = parteEntera + "," + parteDecimal;
	$(elem1).val(parseFloat(resultado));
}
function autocompleteOperationId(elem){


    var d = $(elem);
    var j = d.val();
    var bool= false;
    var guion="";
    var barra="";
 
    for (var i = j.length - 1; i >= 0; i--) {
        if (j[i]== "-" ){
            guion="guion";

        } 
        if(j[i]== "/"){
            barra="barra";
          
             
        }

    }
    
        if (d.val().length==7 && guion!="guion"){
            j+="-";
            d.val(j);
        }
        if (d.val().length==11 && barra!="barra"){
            j+="/";
            d.val(j);
        }

    


}


function autocompleteCUIT(elem){
	var d = $(elem);
	var j = d.val();
	
	if (d.val().length==2){
		j+="-";
		d.val(j);
		}
	if (d.val().length==11){
		j+="-";
		d.val(j);
		}
	
	}
function filterLetters(elem) {
	$("#" + $(elem).attr("id")).bind("keypress", function(e) {
		e = e || window.event;
		var charCode = (typeof e.which == "undefined") ? e.keyCode : e.which;
		var charStr = String.fromCharCode(charCode);
		if (/^[a-zA-Z\\s]*$/.test(charStr)) {
			return false;
		}
	});
}
function saveLastCollectionSelected(elem){
	try{
		consolidadaLastPosition = $(elem).position().top;
		idTablaSeccion = $(elem).attr("id");
		if ($("#menuSelected").length){
			$("#menuSelected").val("");
		}
	}catch(err) {
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --saveLastCollectionSelected--");
		}
	}
}
function nextsateDependElements(button,elem1,elem2){
	var coordenada = $(elem1);
	var valor = coordenada.val();
	var button1=$(button);
	
	var coordenada2 = $(elem2);
	var valor2 = coordenada2.val();
	
	if (valor!=""){
		if (valor2 !=""){
		button1.click();	
		
		}

	}
}
function nextsateDependElement(button,elem1){
	var coordenada = $(elem1);
	var valor = coordenada.val();
	var button1=$(button);
	
	
	if (valor !=""){
		button1.click();	
		
		

	}
}
 

function disableButtonDependElement(button,textField){
  var elem0 = $(textField);
  var elem0Val = elem0.val();
  var elem1= $(button);
 



  var esValido=/^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.([a-z]){2,4})$/.test(elem0Val);

  if (elem0Val != "" && esValido==false||elem0Val=="" ){
    $(elem1).prop("disabled", true);
          $(elem1).toggleClass();
          $(elem1).addClass("action-button_tertiary_disabled");
          $(elem1).prop("style").cursor = "default";
  }
  else{
    $(elem1).prop("disabled", false);
    $(elem1).toggleClass();
    $(elem1).addClass("action-button_primary");
    $(elem1).prop("style").cursor = "pointer";  
  }

}
  
function titleDeleter(elem){
	var a= $(elem);
	a.removeAttr("title");
}
function transformNumberToDate(days,elem){
	if(days.val().length>1){
		days = $(days).val();
		fecha=new Date();
		//Obtenemos los milisegundos desde media noche del 1/1/1970
		tiempo=fecha.getTime();
		//Calculamos los milisegundos sobre la fecha que hay que sumar o restar...
		milisegundos=parseInt(days*24*60*60*1000);
		//Modificamos la fecha actual
		total=fecha.setTime(tiempo+milisegundos);
		day=fecha.getDate();
		day = day.toString();
		month=fecha.getMonth()+1;
		month = month.toString();
		year=fecha.getFullYear();
		if(day.length==1){
			day = "0"+day;
			}
		if(month.length==1){
			month = "0"+month;
			}
			
		$(elem).val(day+"/"+month+"/"+year);
		}
}
function transformDateToNumber(date,elem){

		var fecha = new Date();
		var dia = fecha.getDate();
		var dia = dia.toString();
		if(dia.length==1){
			dia = "0"+dia;
			}
		var mes = fecha.getMonth()+1;
			mes = mes.toString();
		if(mes.length==1){
			mes = "0"+mes;
			}
		var año = fecha.getFullYear();
		var dateCompleto = dia+"/"+mes+"/"+año;
		var f1 = date.val().split("/");
		var f2 = dateCompleto.split("/"); 
		var fFecha1 = Date.UTC(f1[2],f1[1]-1,f1[0]); 
		var fFecha2 = Date.UTC(f2[2],f2[1]-1,f2[0]); 
		var dif = fFecha1 - fFecha2;
		var dias = Math.floor(dif / (1000 * 60 * 60 * 24)); 
		if(dias>0){
			$(elem).val(dias);
		}
	
 }
    function addNumMasc(elem) {

    var bool= "false";
    var cuenta=$(elem).val();   
    var expresion = "\\d{7}-\\d{3}\\/\\d{1}";
    var regex = new RegExp(expresion); 
    var guion="";
    var barra="";
    var cont1=0;
    var cont2=0;

    for (var i = cuenta.length - 1; i >= 0; i--) {
        if (cuenta[i]== "-"){
            guion="guion";
            cont1=cont1+1;

        }if(cuenta[i]== "/"){
            barra="barra";
            cont2=cont2+1;

        }

    }
        
    if (regex.test(cuenta)) {
        return;
    }else if (cuenta!= ""){
        
            var enmascarada;
            var primera= cuenta.slice(0,7);
            var segunda= cuenta.slice(7,10);
            var tercera= cuenta.slice(10,11); 
            if (parseInt($(elem).val().length)==12 && cuenta[7]== "-" && barra!="barra" && cont2==0 && cont1==1){
                enmascarada= primera + cuenta.slice(7,11) +"/"+cuenta.slice(11,12);
                $(elem).val(enmascarada);
            }else if((parseInt($(elem).val().length)==11 && barra== "" && guion=="" && cont2==0 && cont1==0)){
                enmascarada= primera + "-" + segunda+"/"+tercera;
                $(elem).val(enmascarada);

            }else if(parseInt($(elem).val().length)==12 && guion!= "guion" && cuenta[10]== "/" && cont2==1 && cont1==0){

                enmascarada= primera+ "-" + segunda + cuenta.slice(10,12);
                $(elem).val(enmascarada);

            }   

    }


}
  


function validateNumberAccount(elem) {
	var elemento=$(elem).val();
	for (var x=0; x< parseInt($(elem).val().length); x++){
		if (elemento.charAt(x) =="/" || elemento.charAt(x)== "-"){
			$(elem).attr("maxLength",13);
			break;
		} else {
			 if(elemento.charAt(x)!="/" && elemento.charAt(x)!= "-"){
				$(elem).attr("maxLength",11);
			}
		}

	}
}
function completeMinOneInputV5(e0, e1, e2 ,elem0 ,elem1 ,elem2 ,elem3, elem4 ,elem5, msj) {
	var e0HaveData = false;
  	var elemValue0 = $(elem0).val();
	var nombre = $(elem0).attr("caption");
	var jq_elem0 = $(elem0);
	var jq_elem1 = $(elem1);
	var jq_elem2 = $(elem2);
	var jq_elem3 = $(elem3);
	var jq_elem4 = $(elem4);
	var jq_elem5 = $(elem5);
	var estilo_elem0 = jq_elem0.attr("class");
	var estilo_con_error_elem0 = estilo_elem0.substr(-6);
	if (estilo_con_error_elem0 == " error") {
		var estilo_dinamico_elem0 = estilo_elem0.substring(0,estilo_elem0.length-6);
		jq_elem0.removeClass();
		jq_elem0.addClass(estilo_dinamico_elem0);
	}
	var estilo_elem1 = jq_elem1.attr("class");
		var estilo_con_error_elem1 = estilo_elem1.substr(-6);
		if (estilo_con_error_elem1 == " error") {
			var estilo_dinamico_elem1 = estilo_elem1.substring(0,estilo_elem1.length-6);
			jq_elem1.removeClass();
			jq_elem1.addClass(estilo_dinamico_elem1);
		}
	var estilo_elem2 = jq_elem2.attr("class");
		var estilo_con_error_elem2 = estilo_elem2.substr(-6);
		if (estilo_con_error_elem2 == " error") {
			var estilo_dinamico_elem2 = estilo_elem2.substring(0,estilo_elem2.length-6);
			jq_elem2.removeClass();
			jq_elem2.addClass(estilo_dinamico_elem2);
		}
	var estilo_elem3 = jq_elem3.attr("class");
		var estilo_con_error_elem3 = estilo_elem3.substr(-6);
		if (estilo_con_error_elem3 == " error") {
			var estilo_dinamico_elem3 = estilo_elem3.substring(0,estilo_elem3.length-6);
			jq_elem3.removeClass();
			jq_elem3.addClass(estilo_dinamico_elem3);
		}
	var estilo_elem4 = jq_elem4.attr("class");
		var estilo_con_error_elem4 = estilo_elem4.substr(-6);
		if (estilo_con_error_elem4 == " error") {
			var estilo_dinamico_elem4 = estilo_elem4.substring(0,estilo_elem4.length-6);
			jq_elem4.removeClass();
			jq_elem4.addClass(estilo_dinamico_elem4);
		}
	var estilo_elem5 = jq_elem5.attr("class");
		var estilo_con_error_elem5 = estilo_elem5.substr(-6);
		if (estilo_con_error_elem5 == " error") {
			var estilo_dinamico_elem5 = estilo_elem5.substring(0,estilo_elem5.length-6);
			jq_elem5.removeClass();
			jq_elem5.addClass(estilo_dinamico_elem5);
		}
	
	
	if ((e0[0].value != null) && (e0[0].value.trim() != '')) {
        	e0HaveData = true;
    	}
    	var e1HaveData = false;
    	if ((e1[0].value != null) && (e1[0].value.trim() != '')) {
		e1HaveData = true;
    	}
   
    	var e2HaveData = false;
     	if ((e2[0].value != null) && (e2[0].value.trim() != '')) {
         	e2HaveData = true;
     	}

    
    	if (!e0HaveData && !e1HaveData && !e2HaveData) {

        	if ((elemValue0=='Ninguno')) {
			errorMsg2 = nombre+' es obligatorio'+'\\n'+msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem0.addClass(estilo_elem0+" error");
			return;
		} 
		
		
		else if ((elemValue0!='Ninguno')) {
			errorMsg2 = msj;
			ruleServiceInvalidation = true;
			showError(errorMsg2);
			jq_elem1.addClass(estilo_elem1+" error");
			jq_elem2.addClass(estilo_elem2+" error");
			jq_elem3.addClass(estilo_elem3+" error");
			jq_elem4.addClass(estilo_elem4+" error");
			jq_elem5.addClass(estilo_elem5+" error");
			return;
		}
        	
		
        
    	}

}
function validateCUIT(inputValor) {
	var valorAnterior = $(inputValor).val();

	errorInputValor = $(inputValor).attr("class").substr(-6);
	if(errorInputValor == " error") {sinErrorInputValor = $(inputValor).attr("class").substr(0,$(inputValor).attr("class").length-6)} else {sinErrorInputValor = $(inputValor).attr("class")}

	$(inputValor).removeClass();
	$(inputValor).addClass(sinErrorInputValor);

	if($(inputValor).val() != ""){
		var flag = false;
		inputString = $(inputValor).val().toString().replace("-","").replace("-","");
		if (inputString.length == 11) {
			var Caracters_1_2 = inputString.charAt(0) + inputString.charAt(1);
			if (Caracters_1_2 == "20" || Caracters_1_2 == "23" || Caracters_1_2 == "24" || Caracters_1_2 == "27" || Caracters_1_2 == "30" || Caracters_1_2 == "33" || Caracters_1_2 == "34") {
				var Count = inputString.charAt(0) * 5 + inputString.charAt(1) * 4 + inputString.charAt(2) * 3 + inputString.charAt(3) * 2 + inputString.charAt(4) * 7 + inputString.charAt(5) * 6 + inputString.charAt(6) * 5 + inputString.charAt(7) * 4 + inputString.charAt(8) * 3 + inputString.charAt(9) * 2 + inputString.charAt(10) * 1;
				Division = Count / 11;
				if (Division == Math.floor(Division)) {
					flag = true;
				}
			}
		}
		if (!flag){
			errorMsg="Error de validación: " + $(inputValor).attr("caption") + " inválido.";
			$(inputValor).val(valorAnterior);
			$(inputValor).addClass($(inputValor).attr("class")+" error");
			ruleServiceInvalidation=true;	
			showError(errorMsg);	
			return;
		}
		else{
			ruleServiceInvalidation = false;        
			$(errorPanel).hide();
			$(inputValor).val(inputString);
		}
	}
	else{
			ruleServiceInvalidation = false;        
			$(errorPanel).hide();
		}
}
function deleteNumMasc(elem) {
	var cuenta=$(elem).val();
	var aux =  cuenta.replace("-", "").replace("/", "");
	$(elem).val(aux);
}
function validateFiveFields(ct1,ct2,h1,h2,h3,h4,mail,t1,t2){

    errorMsg1 = "";

    lenCt1 = $(ct1).val().length;
    lenCt2 = $(ct2).val().length;
    lenT1 = $(t1).val().length;
    lenT2 = $(t2).val().length;

    valorCt1 = $(ct1).val();
    valorCt2 = $(ct2).val();
    valorT1 = $(t1).val();
    valorT2 = $(t2).val();
    valorH1 = $(h1).val();
    valorH2 = $(h2).val();
    valorH3 = $(h3).val();
    valorH4 = $(h4).val();

    ruleServiceInvalidation = false;
    errorUno = false;
    errorDos = false;
    errorTres = false;
    errorCuatro = false;
    errorCinco = false;
    errorSeis = false;
    errorSiete = false;
    errorOcho = false;
    errorNueve = false;
    errorDiez = false;
    errorOnce = false;
    errorDoce = false;
    errorTrece = false;
    errorCatorce = false;
    errorQince = false;
    errorDieciseis = false;
    errorDiecisiete = false;
    validarLengthT1 = false;
    validarLengthT2 = false;
    validarHoraT1 = false;
    validarHoraT2 = false;
    validarHoraT3 = false;
    validarHoraT4 = false;
    
    $(ct1).val() != ""?valCt1=true:valCt1=false;
    $(ct2).val() != ""?valCt2=true:valCt2=false;
    $(h1).val() != ""?valH1=true:valH1=false;
    $(h2).val() != ""?valH2=true:valH2=false;
    $(h3).val() != ""?valH3=true:valH3=false;
    $(h4).val() != ""?valH4=true:valH4=false;
    $(mail).val() != ""?valMail=true:valMail=false;
    $(t1).val() != ""?valT1=true:valT1=false;
    $(t2).val() != ""?valT2=true:valT2=false;
    
    if((!valMail)&&(!valT1)&&(!valT2)&&(!valCt1)&&(!valCt2)) errorUno=true;
    if((valCt1)&&(!valCt2)&&(!valT1)&&(!valT2)) errorDos = true;
    if((!valCt1)&&(!valCt2)&&(valT1)&&(!valT2)) errorTres = true;
    if((!valCt1)&&(valCt2)&&(!valT1)&&(!valT2)) errorCuatro = true;
    if((!valCt1)&&(!valCt2)&&(!valT1)&&(valT2)) errorCinco = true;
    if((valCt1)&&(!valCt2)&&(!valT1)&&(valT2)) errorSeis = true;
    if((!valCt1)&&(valCt2)&&(valT1)&&(!valT2)) errorSiete = true;
    if((!valCt1)&&(!valCt2)&&(valT1)&&(valT2)) errorOcho = true;
    if((valCt1)&&(valCt2)&&(!valT1)&&(!valT2)) errorNueve = true;
    if((valCt1)&&(!valCt2)&&(valT1)&&(valT2)) errorDiez = true;
    if((valCt1)&&(valCt2)&&(valT1)&&(!valT2)) errorOnce = true;
    if((!valCt1)&&(valCt2)&&(valT1)&&(valT2)) errorDoce = true;
    if((valCt1) &&(valCt2)&&(!valT1)&&(valT2)) errorTrece = true;
    if ((valH1)&&(!valorH2)) errorCatorce = true;
    if ((!valH1)&&(valorH2)) errorQince = true;
    if ((valH3)&&(!valorH4)) errorDieciseis = true;
    if ((!valH3)&&(valorH4)) errorDiecisiete = true;
    if((valCt1)&&(valT1)) validarLengthT1 = true;
    if((valCt2)&&(valT2)) validarLengthT2 = true;
    if(valorH1.length==2) validarHoraT1 = true;
    if(valorH2.length==2) validarHoraT2 = true;
    if(valorH3.length==2) validarHoraT3 = true;
    if(valorH4.length==2) validarHoraT4 = true;

    errorCt1 = $(ct1).attr("class").substr(-6);
    if(errorCt1 == " error") {sinErrorCt1 = $(ct1).attr("class").substr(0,$(ct1).attr("class").length-6)} else {sinErrorCt1 = $(ct1).attr("class")}
    
    errorCt2 = $(ct2).attr("class").substr(-6);
    if(errorCt2 == " error") {sinErrorCt2 = $(ct2).attr("class").substr(0,$(ct2).attr("class").length-6)} else {sinErrorCt2 = $(ct2).attr("class")};
    
    errorMail = $(mail).attr("class").substr(-6);
    if(errorMail == " error") {sinErrorMail = $(mail).attr("class").substr(0,$(mail).attr("class").length-6)} else {sinErrorMail = $(mail).attr("class")};
    
    errorT1 = $(t1).attr("class").substr(-6);
    if(errorT1 == " error") {sinErrorT1 = $(t1).attr("class").substr(0,$(t1).attr("class").length-6)} else {sinErrorT1 = $(t1).attr("class")};
    
    errorT2 = $(t2).attr("class").substr(-6);
    if(errorT2 == " error") {sinErrorT2 = $(t2).attr("class").substr(0,$(t2).attr("class").length-6)} else {sinErrorT2 = $(t2).attr("class")};

    errorH1 = $(h1).attr("class").substr(-6);
    if(errorH1 == " error") {sinErrorH1 = $(h1).attr("class").substr(0,$(h1).attr("class").length-6)} else {sinErrorH1 = $(h1).attr("class")}

    errorH2 = $(h2).attr("class").substr(-6);
    if(errorH2 == " error") {sinErrorH2 = $(h2).attr("class").substr(0,$(h2).attr("class").length-6)} else {sinErrorH2 = $(h2).attr("class")}


    errorH3 = $(h3).attr("class").substr(-6);
    if(errorH3 == " error") {sinErrorH3 = $(h3).attr("class").substr(0,$(h3).attr("class").length-6)} else {sinErrorH3 = $(h3).attr("class")}

    errorH4 = $(h4).attr("class").substr(-6);
    if(errorH4 == " error") {sinErrorH4 = $(h4).attr("class").substr(0,$(h4).attr("class").length-6)} else {sinErrorH4 = $(h4).attr("class")}


    $(ct1).removeClass();
    $(ct1).addClass(sinErrorCt1);
    $(ct2).removeClass();
    $(ct2).addClass(sinErrorCt2);
    $(mail).removeClass();
    $(mail).addClass(sinErrorMail);
    $(t1).removeClass();
    $(t1).addClass(sinErrorT1);
    $(t2).removeClass();
    $(t2).addClass(sinErrorT2);
    $(h1).removeClass();
    $(h1).addClass(sinErrorH1);
    $(h2).removeClass();
    $(h2).addClass(sinErrorH2);
    $(h3).removeClass();
    $(h3).addClass(sinErrorH3);
    $(h4).removeClass();
    $(h4).addClass(sinErrorH4);

    if(errorUno){
        errorMsg1 += "Debés indicar al menos uno de los datos de contacto";
        ruleServiceInvalidation = true;
        
        errorMsg1 = "";
        $(ct1).addClass(ct1.className+" error");
        $(ct2).addClass(ct2.className+ " error");
        $(mail).addClass(mail.className+" error");
        $(t1).addClass(t1.className+ " error");
        $(t2).addClass(t2.className+" error");
        return; 
        }
    if(errorDos){
        errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
        ruleServiceInvalidation = true;
        
        $(t1).addClass(t1.className+ " error");
        }
    if(errorTres){
        errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
        ruleServiceInvalidation = true;
        
        $(ct1).addClass(ct1.className+ " error");
        }
    if(errorCuatro){
        errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
        ruleServiceInvalidation = true;
        
        $(t2).addClass(t2.className+ " error");
        }
    if(errorCinco){
        errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
        ruleServiceInvalidation = true;
        
        $(ct2).addClass(ct2.className+ " error");
        }
    if(errorSeis){
        errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
        ruleServiceInvalidation = true;
        
        $(ct2).addClass(ct2.className+ " error");
        $(t1).addClass(t1.className+ " error");
        }
    if(errorSiete){
        errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
        ruleServiceInvalidation = true;
        
        $(ct1).addClass(ct1.className+ " error");
        $(t2).addClass(t2.className+ " error");
        }
    if(errorOcho){
        errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
        ruleServiceInvalidation = true;
        
        $(ct1).addClass(ct1.className+ " error");
        $(ct2).addClass(ct2.className+ " error");
        }
    if(errorNueve){
        errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
        ruleServiceInvalidation = true;
        
        $(t1).addClass(t1.className+ " error");
        $(t2).addClass(t2.className+ " error");
        }
    if(errorDiez){
        errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
        if(!(lenCt1+lenT1==10)){
            errorMsg1 += "Teléfono 1 : la suma de las longitudes debe ser igual a 10"+"\\n";
            $(t1).addClass(t1.className+ " error");
            $(ct1).addClass(ct1.className+ " error");
        }
        ruleServiceInvalidation = true;
        $(ct2).addClass(ct2.className+ " error");
        }
    if(errorOnce){
        errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
        if(!(lenCt1+lenT1==10)){
            errorMsg1 += "Teléfono 1 : la suma de las longitudes debe ser igual a 10"+"\\n";
            $(t1).addClass(t1.className+ " error");
            $(ct1).addClass(ct1.className+ " error");
        }
        ruleServiceInvalidation = true;
        $(t2).addClass(t2.className+ " error");
        }
    if(errorDoce){
        if(!(lenCt2+lenT2==10)){
            errorMsg1 += "Teléfono 2 : la suma de las longitudes debe ser igual a 10"+"\\n";
            $(t2).addClass(t2.className+ " error");
            $(ct2).addClass(ct2.className+ " error");
        }
        errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
        ruleServiceInvalidation = true;
        $(ct1).addClass(ct1.className+ " error");
        }
    if(errorTrece){
        errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
        if(!(lenCt2+lenT2==10)){
            errorMsg1 += "Teléfono 2 : la suma de las longitudes debe ser igual a 10"+"\\n";
            $(t2).addClass(t2.className+ " error");
            $(ct2).addClass(ct2.className+ " error");
        }
        ruleServiceInvalidation = true;
        $(t1).addClass(t1.className+ " error");
        }
    if(errorCatorce){
        errorMsg1 += "Debés ingresar "+ $(h1).attr("caption")+ " y " + $(h2).attr("caption")+ " para telefono 1" +"\\n";
        ruleServiceInvalidation = true;
        $(h2).addClass(h2.className+ " error");
        }
    if(errorQince){
        errorMsg1 += "Debés ingresar "+ $(h1).attr("caption")+ " y " + $(h2).attr("caption")+ " para telefono 1" +"\\n";
        ruleServiceInvalidation = true;
        $(h1).addClass(h3.className+ " error");
        }
    if(errorDieciseis){
        errorMsg1 += "Debés ingresar "+ $(h3).attr("caption")+ " y " + $(h4).attr("caption")+ " para telefono 2" +"\\n";
        ruleServiceInvalidation = true;
        $(h4).addClass(h4.className+ " error");
        }
    if(errorDiecisiete){
        errorMsg1 += "Debés ingresar "+ $(h3).attr("caption")+ " y " + $(h4).attr("caption")+ " para telefono 2" +"\\n";
        ruleServiceInvalidation = true;
        $(h3).addClass(h3.className+ " error");
        }
    if(validarLengthT1){
        if(!(lenCt1+lenT1==10)){
            errorMsg1 += "Teléfono 1 : la suma de las longitudes debe ser igual a 10"+"\\n";
            ruleServiceInvalidation = true;
            $(t1).addClass(t1.className+ " error");
            $(ct1).addClass(ct1.className+ " error");
        }
    }
    if(validarLengthT2){
        if(!(lenCt2+lenT2==10)){
            errorMsg1 += "Teléfono 2 : la suma de las longitudes debe ser igual a 10"+"\\n";
            ruleServiceInvalidation = true;
            $(t2).addClass(t2.className+ " error");
            $(ct2).addClass(ct2.className+ " error");
        }
    }
    if(validarHoraT1){
        if(/^([01]\\d|2[0-3])+$/.test(valorH1)== false){
            ruleServiceInvalidation = true;
            errorMsg1 += $(h1).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 1"+"\\n";
            $(h1).addClass(h1.className+ " error");
        }
    }

    if(validarHoraT2){
        if(/^([01]\\d|2[0-3])+$/.test(valorH2)== false){
            ruleServiceInvalidation = true;
            errorMsg1 += $(h2).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 1"+"\\n";
            $(h2).addClass(h2.className+ " error");
        }
    } 
    if(validarHoraT3){
        if(/^([01]\\d|2[0-3])+$/.test(valorH3)== false){
          ruleServiceInvalidation = true;
          errorMsg1 += $(h3).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 2"+"\\n";
          $(h3).addClass(h3.className+ " error");
        }
    }
    if(validarHoraT4){
        if(/^([01]\\d|2[0-3])+$/.test(valorH4)== false){
          ruleServiceInvalidation = true;
          errorMsg1 += $(h4).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 2"+"\\n";
          $(h4).addClass(h4.className+ " error");
        }
    }
    if (ruleServiceInvalidation){
        showError(errorMsg1);
    }
    else {
        $(ct2).removeClass();
        $(ct2).addClass(sinErrorCt2);
        $(mail).removeClass();
        $(mail).addClass(sinErrorMail);
        $(t1).removeClass();
        $(t1).addClass(sinErrorT1);
        $(t2).removeClass();
        $(t2).addClass(sinErrorT2);
        $(ct1).removeClass();
        $(ct1).addClass(sinErrorCt1);
        $(h1).removeClass();
        $(h1).addClass(sinErrorH1);
        $(h2).removeClass();
        $(h2).addClass(sinErrorH2);
        $(h3).removeClass();
        $(h3).addClass(sinErrorH3);
        $(h4).removeClass();
        $(h4).addClass(sinErrorH4);
        ruleServiceInvalidation = false;        
        $(errorPanel).hide();
        }
        errorMsg1 = "";
    }
function isCUITorDNI(elem,tabla1,tabla2){
	var elemento = $(elem);
	valor = elemento.attr("unmasked");
	if (valor.length == 11){
		$(tabla2).hide();
		}
	else{
		$(tabla1).hide();
		}
	}
function disabledTextfieldThrowRadioButton(elem0,elem1) {
	var nombre = document.getElementById(elem0[0].id);
	var id_opt = nombre.id+"_opt_0";
	var radio = document.getElementById(id_opt);
	var jq_elem1 = $(elem1);
	var estilo_elem1 = jq_elem1.attr("class");
	var estilo_con_error_elem1 = estilo_elem1.substr(-6);
	
	if (estilo_con_error_elem1 == " error") {
		var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
		jq_elem1.removeClass();
		jq_elem1.addClass(estilo_dinamico_elem1);
	}
	
	if (radio.checked==true){
		$(elem1).prop("disabled", false);
	}
	else{
		$(elem1).prop("disabled", true);
		var valor_float = document.getElementById(elem1[0].id);
		valor_float.value = "0,00" ;
	}
	
}
function printContentTandC(elem){
	var windowObject = window.open("", "PrintWindow");
	windowObject.document.writeln("<h1>Términos y condiciones</h1>");
	windowObject.document.writeln(elem.html());
	windowObject.document.close();
	windowObject.focus();
	windowObject.print();
	windowObject.close();
}
function validateLengthPhoneOrNot(elem1,elem2,valor,msgError){
	elemento1 = $(elem1).val();
	elemento2 = $(elem2).val();
	len1 = elemento1.length;
	len2 = elemento2.length;

	errorElem1 = $(elem1).attr("class").substr(-6);
	if(errorElem1 == " error") {sinErrorElem1 = $(elem1).attr("class").substr(0,$(elem1).attr("class").length-6)} else {sinErrorElem1 = $(elem1).attr("class")}
	errorElem2 = $(elem2).attr("class").substr(-6);
	if(errorElem2 == " error") {sinErrorElem2 = $(elem2).attr("class").substr(0,$(elem2).attr("class").length-6)} else {sinErrorElem2 = $(elem2).attr("class")}

	$(elem1).removeClass();
	$(elem1).addClass(sinErrorElem1);
	$(elem2).removeClass();
	$(elem2).addClass(sinErrorElem2);


	if ((elemento1 != "")||(elemento2 != "")){
		if(len1+len2 != valor){
			$(elem1).addClass(elem1.className+" error");
			$(elem2).addClass(elem2.className+" error");
			ruleServiceInvalidation=true;	
			showError(msgError);
			return;
			}
		}
	}
function openNewTab(elem,url) {
	var elemento=$(elem);
	elemento.click(window.open(url,"_blank"));
}
function selectFirstOnCollection(elem){
	d = $(elem);
	d.find("tbody");
	d = $(d.find("tr")[2]);
	d = $(d.find("td")[0]);
	d = $(d.find("input"));
	d.attr("checked","checked");	

}
function focusOnLastCollectionSelected(){
	if (consolidadaLastPosition>0){
		try{
			if(idTablaSeccion != "") {
				var tabla = document.getElementById(idTablaSeccion);
				var posTabla= $(tabla).position().top;
				scrollTo(0, posTabla );
			} 
			if ($("#menuSelected").length){
				$("#menuSelected").val("consolidada");
			}
		}catch(err) {
			if ( window.console && window.console.log ) {
				console.error(err,"Error en servicio --focusOnLastCollectionSelected--");
			}
		}	
	}
}
function tabDeleter(elem) {
		var a = $(elem);
		a.removeAttr("tabindex");
}
function DisableElementNoCondition(elem) {     
            $(elem).prop("disabled", true);
}

function filterSelectField(elem,elem2){

	elem = document.getElementById(elem.attr("id"));
	elem2 = document.getElementById(elem2.attr("id"))


	opt = elem.options;
	opt2 = elem2.options;
	optElegida = elem.options[elem.selectedIndex].innerHTML;
	optElegida2 = elem2.options[elem2.selectedIndex].innerHTML;

	for (var i = 0; i <= opt.length - 1; i++) {
		if(optElegida==opt[i].innerHTML){
			$(opt[i]).attr("disabled","disabled");
		}
		else{

			if((opt[i]!=opt[0])&&(opt[i].innerHTML!=optElegida2))$(opt[i]).removeAttr("disabled")
			else{
				$(opt[i]).attr("disabled","disabled");
			}
		}
	}


	for (var i = 0; i <= opt2.length - 1; i++) {
		if(optElegida2==opt2[i].innerHTML){
			$(opt2[i]).attr("disabled","disabled");
		}
		else{

			if((opt2[i]!=opt2[0])&&(opt2[i].innerHTML!=optElegida))$(opt2[i]).removeAttr("disabled")
			else{
				$(opt2[i]).attr("disabled","disabled");
			}
		}
	}
}
function focusOnElement(elem) {
	elem.prop("autofocus", true);
}
function autofocus(elem) {
	document.getElementById(elem[0].id).focus();
}
function EnableElementNoCondition(elem) {
            $(elem).prop("disabled", false);
}
function disableRadioButtonDependPos (pos,radio){
	var radio= $(radio);
	var radios = radio.find("div").find("input");
	var radio_especifico = radios[pos];
	var radio_div = radio.find("div")[pos];
	radio_div.className="radio-button-field_default_label-nowidth-disabled";
	$(radio_especifico).attr("disabled","disabled");
	}
function validateCollectionSelectionDependRadio(elem,errorMsg,radioButton,valor){
	
	var radio= $(radioButton);
	var radios = radio.find("div").find("input");
	var valor1 = valor;
	var longitud= radios.length;
	
	if ((elem[0]!=undefined) && (!document.getElementById(elem[0].id)== false)){

	for (var i = 0; i < longitud; i++){
	
		if (radios[i].value == valor1 && radios[i].checked == true){


			var idRadio= 'encodedcollection_'+$(elem).attr('id');
			var isOk = true;
		
			if ($('input[name='+idRadio+']').is(':checked')) {
			isOk=true;
		    }
		    else {
			isOk=false;
		    }
			if(!isOk){
				if (errorMsg==='null') {
					errorMsg='Error de validación: Debe seleccionar al menos un elemento de la tabla ' + elem.attr('caption');
				}
				ruleServiceInvalidation=true;	
			showError(errorMsg);	
				return;
			}
			return;


		}
	}

	}
}
function keyValue(){
	localStorage.setItem("clickTerminos1","yes");
}
function validateTwoCheckAndClickElement(elem0, elem1, elem2){

	if ((localStorage.getItem("clickTerminos1")=="yes")&&($(elem0).prop("checked"))&&($(elem1).prop("checked"))){
	 	$(elem2).prop("disabled", false);
        $(elem2).toggleClass();
        $(elem2).addClass("action-button_primary");
        $(elem2).prop("style").cursor = "pointer";
	}
	else {
        $(elem2).prop("disabled", true);
        $(elem2).toggleClass();
        $(elem2).addClass("action-button_tertiary_disabled");
        $(elem2).prop("style").cursor = "default";
        }
}
function clearKeyValue(){
	if (localStorage.getItem("clickTerminos1")== "yes"){
		localStorage.clear();
	}
}
function printContentTandCV2(elem,elem0,elem1,elem2){
	localStorage.setItem("clickTerminos1","yes");
	if ((localStorage.getItem("clickTerminos1")=="yes")&&($(elem0).prop("checked"))&&($(elem1).prop("checked"))){
	 	$(elem2).prop("disabled", false);
        $(elem2).toggleClass();
        $(elem2).addClass("action-button_primary");
        $(elem2).prop("style").cursor = "pointer";
	}
	else {
        $(elem2).prop("disabled", true);
        $(elem2).toggleClass();
        $(elem2).addClass("action-button_tertiary_disabled");
        $(elem2).prop("style").cursor = "default";
        }
	var windowObject = window.open("", "PrintWindow");
	windowObject.document.writeln("<h1>Términos y condiciones</h1>");
	windowObject.document.writeln(elem.html());
	windowObject.document.close();
	windowObject.focus();
	windowObject.print();
	windowObject.close();
}
function disableActionButtonDependCollections(actionButton, collection1, collection2,radioButton,valor1, valor2){
	var radio= $(radioButton);
	var radios = radio.find("div").find("input");
	var valor = valor1;
	var val = valor2;
	var longitud= radios.length;

for (var i = 0; i < longitud; i++){
	if (radios[i].value == valor && radios[i].checked == true){

		if (collection1[0]==undefined){

		    $(actionButton).prop("disabled", true);
		    $(actionButton).toggleClass();
		    $(actionButton).addClass("action-button_tertiary_disabled");
		    $(actionButton).prop("style").cursor = "default";
		    var idRadio1= 'encodedcollection_'+$(collection1).attr('id');
			if ($('input[name='+idRadio1+']').is(':checked')) {
				$('input[name='+idRadio1+']').attr("checked",false);
			}


        }else{

	    $(actionButton).prop("disabled", false);
            $(actionButton).toggleClass();
            $(actionButton).addClass("action-button_primary");
            $(actionButton).prop("style").cursor = "pointer";
	    var idRadio1= 'encodedcollection_'+$(collection1).attr('id');
	    
		if ($('input[name='+idRadio1+']').is(':checked')) {
			$('input[name='+idRadio1+']').attr("checked",false);
		}
        }


	}else if(radios[i].value == val && radios[i].checked == true){
		if (collection2[0]==undefined){
			$(actionButton).prop("disabled", true);
			$(actionButton).toggleClass();
			$(actionButton).addClass("action-button_tertiary_disabled");
			$(actionButton).prop("style").cursor = "default";
			var idRadio2= 'encodedcollection_'+$(collection2).attr('id');
		    
			if ($('input[name='+idRadio2+']').is(':checked')) {
				$('input[name='+idRadio2+']').attr("checked",false); 
			}

		 }else{

		    $(actionButton).prop("disabled", false);
		    $(actionButton).toggleClass();
		    $(actionButton).addClass("action-button_primary");
		    $(actionButton).prop("style").cursor = "pointer";
		    var idRadio2= 'encodedcollection_'+$(collection2).attr('id');
	    
		if ($('input[name='+idRadio2+']').is(':checked')) {
			$('input[name='+idRadio2+']').attr("checked",false); 
		}
        }

    }

			


}
	
}
function cleanRadioCollection(elem){
	var idRadio= 'encodedcollection_'+$(elem).attr('id');
	
	if (elem[0]!=undefined){
	
		if ($('input[name='+idRadio+']').is(':checked')) {
			document.getElementById('input[name='+idRadio+']').checked = false; 
		}
	
	}
}
function disableSelectField(elem0){
	var combo = $(elem0);
	$(combo).prop("disabled", true);
}
function validateSixFields(ct1,ct2,h1,h2,h3,h4,mail,select,t1,t2){

	errorMsg1 = "";
	var nombre = $(select).attr("caption");
	lenCt1 = $(ct1).val().length;
	lenCt2 = $(ct2).val().length;
	lenT1 = $(t1).val().length;
	lenT2 = $(t2).val().length;

	valorCt1 = $(ct1).val();
	valorCt2 = $(ct2).val();
	valorT1 = $(t1).val();
	valorT2 = $(t2).val();
	valorH1 = $(h1).val();
	valorH2 = $(h2).val();
	valorH3 = $(h3).val();
	valorH4 = $(h4).val(); 

	ruleServiceInvalidation = false;
	errorUno = false;
	errorDos = false;
	errorTres = false;
	errorCuatro = false;
	errorCinco = false;
	errorSeis = false;
	errorSiete = false;
	errorOcho = false;
	errorNueve = false;
	errorDiez = false;
	errorOnce = false;
	errorDoce = false;
	errorTrece = false;
	errorCatorce = false;
	errorQince = false;
	errorDieciseis = false;
	errorDiecisiete = false;
	validarLengthT1 = false;
	validarLengthT2 = false;
	validarLengthT1 = false;
	validarLengthT2 = false;
	validarHoraT1 = false;
	validarHoraT2 = false;
	validarHoraT3 = false;
	validarHoraT4 = false;
	
	$(ct1).val() != ""?valCt1=true:valCt1=false;
	$(ct2).val() != ""?valCt2=true:valCt2=false;
	$(h1).val() != ""?valH1=true:valH1=false;
	$(h2).val() != ""?valH2=true:valH2=false;
	$(h3).val() != ""?valH3=true:valH3=false;
	$(h4).val() != ""?valH4=true:valH4=false;
	$(mail).val() != ""?valMail=true:valMail=false;
	$(t1).val() != ""?valT1=true:valT1=false;
	$(t2).val() != ""?valT2=true:valT2=false;
	$(select).val() != "Ninguno"? valSelect=true:valSelect=false;
	
	if((!valMail)&&(!valT1)&&(!valT2)&&(!valCt1)&&(!valCt2)) errorUno=true;
	if((valCt1)&&(!valCt2)&&(!valT1)&&(!valT2)) errorDos = true;
	if((!valCt1)&&(!valCt2)&&(valT1)&&(!valT2)) errorTres = true;
	if((!valCt1)&&(valCt2)&&(!valT1)&&(!valT2)) errorCuatro = true;
	if((!valCt1)&&(!valCt2)&&(!valT1)&&(valT2)) errorCinco = true;
	if((valCt1)&&(!valCt2)&&(!valT1)&&(valT2)) errorSeis = true;
	if((!valCt1)&&(valCt2)&&(valT1)&&(!valT2)) errorSiete = true;
	if((!valCt1)&&(!valCt2)&&(valT1)&&(valT2)) errorOcho = true;
	if((valCt1)&&(valCt2)&&(!valT1)&&(!valT2)) errorNueve = true;
	if((valCt1)&&(!valCt2)&&(valT1)&&(valT2)) errorDiez = true;
	if((valCt1)&&(valCt2)&&(valT1)&&(!valT2)) errorOnce = true;
	if((!valCt1)&&(valCt2)&&(valT1)&&(valT2)) errorDoce = true;
	if((valCt1) &&(valCt2)&&(!valT1)&&(valT2)) errorTrece = true;
	if ((valH1)&&(!valorH2)) errorCatorce = true;
	if ((!valH1)&&(valorH2)) errorQince = true;
	if ((valH3)&&(!valorH4)) errorDieciseis = true;
	if ((!valH3)&&(valorH4)) errorDiecisiete = true;
	if((valCt1)||(valT1)) validarLengthT1 = true;
	if((valCt2)||(valT2)) validarLengthT2 = true;
	if(valorH1.length==2) validarHoraT1 = true;
	if(valorH2.length==2) validarHoraT2 = true;
	if(valorH3.length==2) validarHoraT3 = true;
	if(valorH4.length==2) validarHoraT4 = true;

	errorCt1 = $(ct1).attr("class").substr(-6);
	if(errorCt1 == " error") {sinErrorCt1 = $(ct1).attr("class").substr(0,$(ct1).attr("class").length-6)} else {sinErrorCt1 = $(ct1).attr("class")}
	
	errorCt2 = $(ct2).attr("class").substr(-6);
	if(errorCt2 == " error") {sinErrorCt2 = $(ct2).attr("class").substr(0,$(ct2).attr("class").length-6)} else {sinErrorCt2 = $(ct2).attr("class")};
	
	errorMail = $(mail).attr("class").substr(-6);
	if(errorMail == " error") {sinErrorMail = $(mail).attr("class").substr(0,$(mail).attr("class").length-6)} else {sinErrorMail = $(mail).attr("class")};
	
	errorT1 = $(t1).attr("class").substr(-6);
	if(errorT1 == " error") {sinErrorT1 = $(t1).attr("class").substr(0,$(t1).attr("class").length-6)} else {sinErrorT1 = $(t1).attr("class")};
	
	errorT2 = $(t2).attr("class").substr(-6);
	if(errorT2 == " error") {sinErrorT2 = $(t2).attr("class").substr(0,$(t2).attr("class").length-6)} else {sinErrorT2 = $(t2).attr("class")};
	
	errorSelect = $(select).attr("class").substr(-6);
	if(errorSelect == " error") {sinErrorSelect = $(select).attr("class").substr(0,$(select).attr("class").length-6)} else {sinErrorSelect = $(select).attr("class")}
	
	errorH1 = $(h1).attr("class").substr(-6);
	if(errorH1 == " error") {sinErrorH1 = $(h1).attr("class").substr(0,$(h1).attr("class").length-6)} else {sinErrorH1 = $(h1).attr("class")}

	errorH2 = $(h2).attr("class").substr(-6);
	if(errorH2 == " error") {sinErrorH2 = $(h2).attr("class").substr(0,$(h2).attr("class").length-6)} else {sinErrorH2 = $(h2).attr("class")}

	errorH3 = $(h3).attr("class").substr(-6);
	if(errorH3 == " error") {sinErrorH3 = $(h3).attr("class").substr(0,$(h3).attr("class").length-6)} else {sinErrorH3 = $(h3).attr("class")}

	errorH4 = $(h4).attr("class").substr(-6);
	if(errorH4 == " error") {sinErrorH4 = $(h4).attr("class").substr(0,$(h4).attr("class").length-6)} else {sinErrorH4 = $(h4).attr("class")}

	$(select).removeClass();
	$(select).addClass(sinErrorSelect);
	$(ct1).removeClass();
	$(ct1).addClass(sinErrorCt1);
	$(ct2).removeClass();
	$(ct2).addClass(sinErrorCt2);
	$(mail).removeClass();
	$(mail).addClass(sinErrorMail);
	$(t1).removeClass();
	$(t1).addClass(sinErrorT1);
	$(t2).removeClass();
	$(t2).addClass(sinErrorT2);
	$(h1).removeClass();
	$(h1).addClass(sinErrorH1);
	$(h2).removeClass();
	$(h2).addClass(sinErrorH2);
	$(h3).removeClass();
	$(h3).addClass(sinErrorH3);
	$(h4).removeClass();
	$(h4).addClass(sinErrorH4);

	if(!valSelect){
			errorMsg1 = nombre+" es obligatorio"+"\\n";
			$(select).addClass(select.className+" error");
		}

	if(errorUno){
		
		errorMsg1 += "Debés indicar al menos uno de los datos de contacto";
		ruleServiceInvalidation = true;
		$(ct1).addClass(ct1.className+" error");
		$(ct2).addClass(ct2.className+ " error");
		$(mail).addClass(mail.className+" error");
		$(t1).addClass(t1.className+ " error");
		$(t2).addClass(t2.className+" error");
		}
	if(errorDos){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
		ruleServiceInvalidation = true;
		
		$(t1).addClass(t1.className+ " error");
		}
	if(errorTres){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
		ruleServiceInvalidation = true;
		
		$(ct1).addClass(ct1.className+ " error");
		}
	if(errorCuatro){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
		ruleServiceInvalidation = true;
		
		$(t2).addClass(t2.className+ " error");
		}
	if(errorCinco){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
		ruleServiceInvalidation = true;
		
		$(ct2).addClass(ct2.className+ " error");
		}
	if(errorSeis){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
		ruleServiceInvalidation = true;
		
		$(ct2).addClass(ct2.className+ " error");
		$(t1).addClass(t1.className+ " error");
		}
	if(errorSiete){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
		ruleServiceInvalidation = true;
		
		$(ct1).addClass(ct1.className+ " error");
		$(t2).addClass(t2.className+ " error");
		}
	if(errorOcho){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
		ruleServiceInvalidation = true;
		
		$(ct1).addClass(ct1.className+ " error");
		$(ct2).addClass(ct2.className+ " error");
		}
	if(errorNueve){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
		ruleServiceInvalidation = true;
		
		$(t1).addClass(t1.className+ " error");
		$(t2).addClass(t2.className+ " error");
		}
	if(errorDiez){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
		ruleServiceInvalidation = true;
		
		$(ct2).addClass(ct2.className+ " error");
		}
	if(errorOnce){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
		ruleServiceInvalidation = true;
		
		$(t2).addClass(t2.className+ " error");
		}
	if(errorDoce){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
		ruleServiceInvalidation = true;
		
		$(ct1).addClass(ct1.className+ " error");
		}
	if(errorTrece){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
		ruleServiceInvalidation = true;
		
		$(t1).addClass(t1.className+ " error");
		}
	if(errorCatorce){
		errorMsg1 += "Debés ingresar "+ $(h1).attr("caption")+ " y " + $(h2).attr("caption")+ " para telefono 1" +"\\n";
		ruleServiceInvalidation = true;
		$(h2).addClass(h2.className+ " error");
		}
	if(errorQince){
		errorMsg1 += "Debés ingresar "+ $(h1).attr("caption")+ " y " + $(h2).attr("caption")+ " para telefono 1" +"\\n";
		ruleServiceInvalidation = true;
		$(h1).addClass(h3.className+ " error");
		}
	if(errorDieciseis){
		errorMsg1 += "Debés ingresar "+ $(h3).attr("caption")+ " y " + $(h4).attr("caption")+ " para telefono 2" +"\\n";
		ruleServiceInvalidation = true;
		$(h4).addClass(h4.className+ " error");
		}
	if(errorDiecisiete){
		errorMsg1 += "Debés ingresar "+ $(h3).attr("caption")+ " y " + $(h4).attr("caption")+ " para telefono 2" +"\\n";
		ruleServiceInvalidation = true;
		$(h3).addClass(h3.className+ " error");
		}
	if(validarLengthT1){
		if(!(lenCt1+lenT1==10)){
			errorMsg1 += "Teléfono 1 : la suma de las longitudes debe ser igual a 10"+"\\n";
			ruleServiceInvalidation = true;
			
			$(t1).addClass(t1.className+ " error");
			$(ct1).addClass(ct1.className+ " error");
		}
	}
	if(validarLengthT2){
		if(!(lenCt2+lenT2==10)){
			errorMsg1 += "Teléfono 2 : el número de celular junto al código de área deben alcanzar 10 dígitos"+"\\n";
			ruleServiceInvalidation = true;
			
			$(t2).addClass(t2.className+ " error");
			$(ct2).addClass(ct2.className+ " error");
		}
	}
	if(validarHoraT1){
		if(/^([01]\\d|2[0-3])+$/.test(valorH1)== false){
			ruleServiceInvalidation = true;
			errorMsg1 += $(h1).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 1"+"\\n";
			
			$(h1).addClass(h1.className+ " error");
		}
	}

	if(validarHoraT2){
		if(/^([01]\\d|2[0-3])+$/.test(valorH2)== false){
			ruleServiceInvalidation = true;
			errorMsg1 += $(h2).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 1"+"\\n";
			
			$(h2).addClass(h2.className+ " error");
		}
	} 
	if(validarHoraT3){
		if(/^([01]\\d|2[0-3])+$/.test(valorH3)== false){
		  ruleServiceInvalidation = true;
		  errorMsg1 += $(h3).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 2"+"\\n";	  
		  $(h3).addClass(h3.className+ " error");
		}
	}
	if(validarHoraT4){
		if(/^([01]\\d|2[0-3])+$/.test(valorH4)== false){
		  ruleServiceInvalidation = true;
		  errorMsg1 += $(h4).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 2"+"\\n";
		  $(h4).addClass(h4.className+ " error");
		}
	}
	if (ruleServiceInvalidation){
		showError(errorMsg1);
	}
	else {
		$(select).removeClass();
		$(select).addClass(sinErrorSelect);
		$(ct2).removeClass();
		$(ct2).addClass(sinErrorCt2);
		$(mail).removeClass();
		$(mail).addClass(sinErrorMail);
		$(t1).removeClass();
		$(t1).addClass(sinErrorT1);
		$(t2).removeClass();
		$(t2).addClass(sinErrorT2);
		$(ct1).removeClass();
		$(ct1).addClass(sinErrorCt1);
		$(h1).removeClass();
	    $(h1).addClass(sinErrorH1);
	    $(h2).removeClass();
	    $(h2).addClass(sinErrorH2);
	    $(h3).removeClass();
	    $(h3).addClass(sinErrorH3);
	    $(h4).removeClass();
	    $(h4).addClass(sinErrorH4);
		ruleServiceInvalidation = false;        
		$(errorPanel).hide();
	}
	errorMsg1 = "";
}
function validateSevenFields(ct1,ct2,h1,h2,h3,h4,mail,select,t1,t2,text){

	errorMsg1 = "";
	var nombre = $(select).attr("caption");
	var nombre_text = $(text).attr("caption");
	lenCt1 = $(ct1).val().length;
	lenCt2 = $(ct2).val().length;
	lenT1 = $(t1).val().length;
	lenT2 = $(t2).val().length;

	valorCt1 = $(ct1).val();
	valorCt2 = $(ct2).val();
	valorT1 = $(t1).val();
	valorT2 = $(t2).val();
	valorH1 = $(h1).val();
	valorH2 = $(h2).val();
	valorH3 = $(h3).val();
	valorH4 = $(h4).val();

	ruleServiceInvalidation = false;
	errorUno = false;
	errorDos = false;
	errorTres = false;
	errorCuatro = false;
	errorCinco = false;
	errorSeis = false;
	errorSiete = false;
	errorOcho = false;
	errorNueve = false;
	errorDiez = false;
	errorOnce = false;
	errorDoce = false;
	errorTrece = false;
	errorCatorce = false;
	errorQince = false;
	errorDieciseis = false;
	errorDiecisiete = false;
	validarLengthT1 = false;
	validarLengthT2 = false;
	validarHoraT1 = false;
	validarHoraT2 = false;
	validarHoraT3 = false;
	validarHoraT4 = false;
	
	$(ct1).val() != ""?valCt1=true:valCt1=false;
	$(ct2).val() != ""?valCt2=true:valCt2=false;
	$(h1).val() != ""?valH1=true:valH1=false;
	$(h2).val() != ""?valH2=true:valH2=false;
	$(h3).val() != ""?valH3=true:valH3=false;
	$(h4).val() != ""?valH4=true:valH4=false;
	$(mail).val() != ""?valMail=true:valMail=false;
	$(t1).val() != ""?valT1=true:valT1=false;
	$(t2).val() != ""?valT2=true:valT2=false;
	$(select).val() != "Ninguno"? valSelect=true:valSelect=false;
	$(text).val() != ""? valText=true:valText=false;
	
	if((!valMail)&&(!valT1)&&(!valT2)&&(!valCt1)&&(!valCt2)) errorUno=true;
	if((valCt1)&&(!valCt2)&&(!valT1)&&(!valT2)) errorDos = true;
	if((!valCt1)&&(!valCt2)&&(valT1)&&(!valT2)) errorTres = true;
	if((!valCt1)&&(valCt2)&&(!valT1)&&(!valT2)) errorCuatro = true;
	if((!valCt1)&&(!valCt2)&&(!valT1)&&(valT2)) errorCinco = true;
	if((valCt1)&&(!valCt2)&&(!valT1)&&(valT2)) errorSeis = true;
	if((!valCt1)&&(valCt2)&&(valT1)&&(!valT2)) errorSiete = true;
	if((!valCt1)&&(!valCt2)&&(valT1)&&(valT2)) errorOcho = true;
	if((valCt1)&&(valCt2)&&(!valT1)&&(!valT2)) errorNueve = true;
	if((valCt1)&&(!valCt2)&&(valT1)&&(valT2)) errorDiez = true;
	if((valCt1)&&(valCt2)&&(valT1)&&(!valT2)) errorOnce = true;
	if((!valCt1)&&(valCt2)&&(valT1)&&(valT2)) errorDoce = true;
	if((valCt1) &&(valCt2)&&(!valT1)&&(valT2)) errorTrece = true;
	if ((valH1)&&(!valorH2)) errorCatorce = true;
	if ((!valH1)&&(valorH2)) errorQince = true;
	if ((valH3)&&(!valorH4)) errorDieciseis = true;
	if ((!valH3)&&(valorH4)) errorDiecisiete = true;
	if((valCt1)&&(valT1)) validarLengthT1 = true;
	if((valCt2)&&(valT2)) validarLengthT2 = true;
	if(valorH1.length==2) validarHoraT1 = true;
	if(valorH2.length==2) validarHoraT2 = true;
	if(valorH3.length==2) validarHoraT3 = true;
	if(valorH4.length==2) validarHoraT4 = true;

	errorCt1 = $(ct1).attr("class").substr(-6);
	if(errorCt1 == " error") {sinErrorCt1 = $(ct1).attr("class").substr(0,$(ct1).attr("class").length-6)} else {sinErrorCt1 = $(ct1).attr("class")}
	
	errorCt2 = $(ct2).attr("class").substr(-6);
	if(errorCt2 == " error") {sinErrorCt2 = $(ct2).attr("class").substr(0,$(ct2).attr("class").length-6)} else {sinErrorCt2 = $(ct2).attr("class")};
	
	errorMail = $(mail).attr("class").substr(-6);
	if(errorMail == " error") {sinErrorMail = $(mail).attr("class").substr(0,$(mail).attr("class").length-6)} else {sinErrorMail = $(mail).attr("class")};
	
	errorT1 = $(t1).attr("class").substr(-6);
	if(errorT1 == " error") {sinErrorT1 = $(t1).attr("class").substr(0,$(t1).attr("class").length-6)} else {sinErrorT1 = $(t1).attr("class")};
	
	errorT2 = $(t2).attr("class").substr(-6);
	if(errorT2 == " error") {sinErrorT2 = $(t2).attr("class").substr(0,$(t2).attr("class").length-6)} else {sinErrorT2 = $(t2).attr("class")};
	
	errorSelect = $(select).attr("class").substr(-6);
	if(errorSelect == " error") {sinErrorSelect = $(select).attr("class").substr(0,$(select).attr("class").length-6)} else {sinErrorSelect = $(select).attr("class")}
	
	errorText = $(text).attr("class").substr(-6);
	if(errorText == " error") {sinErrorText = $(text).attr("class").substr(0,$(text).attr("class").length-6)} else {sinErrorText = $(text).attr("class")}
	
	errorH1 = $(h1).attr("class").substr(-6);
	if(errorH1 == " error") {sinErrorH1 = $(h1).attr("class").substr(0,$(h1).attr("class").length-6)} else {sinErrorH1 = $(h1).attr("class")}

	errorH2 = $(h2).attr("class").substr(-6);
	if(errorH2 == " error") {sinErrorH2 = $(h2).attr("class").substr(0,$(h2).attr("class").length-6)} else {sinErrorH2 = $(h2).attr("class")}

	errorH3 = $(h3).attr("class").substr(-6);
	if(errorH3 == " error") {sinErrorH3 = $(h3).attr("class").substr(0,$(h3).attr("class").length-6)} else {sinErrorH3 = $(h3).attr("class")}

	errorH4 = $(h4).attr("class").substr(-6);
	if(errorH4 == " error") {sinErrorH4 = $(h4).attr("class").substr(0,$(h4).attr("class").length-6)} else {sinErrorH4 = $(h4).attr("class")}


	$(select).removeClass();
	$(select).addClass(sinErrorSelect);
	$(text).removeClass();
	$(text).addClass(sinErrorText);
	$(ct1).removeClass();
	$(ct1).addClass(sinErrorCt1);
	$(ct2).removeClass();
	$(ct2).addClass(sinErrorCt2);
	$(mail).removeClass();
	$(mail).addClass(sinErrorMail);
	$(t1).removeClass();
	$(t1).addClass(sinErrorT1);
	$(t2).removeClass();
	$(t2).addClass(sinErrorT2);
	$(h1).removeClass();
	$(h1).addClass(sinErrorH1);
	$(h2).removeClass();
	$(h2).addClass(sinErrorH2);
	$(h3).removeClass();
	$(h3).addClass(sinErrorH3);
	$(h4).removeClass();
	$(h4).addClass(sinErrorH4);

	if(!valSelect){
			errorMsg1 = nombre+" es obligatorio"+"\\n";
			$(select).addClass(select.className+" error");
		}

	if(!valText){
		errorMsg1 += nombre_text+" es obligatorio"+"\\n";
		$(text).addClass(text.className+" error");
	}

	if(errorUno){
		
		errorMsg1 += "Debés indicar al menos uno de los datos de contacto";
		ruleServiceInvalidation = true;
		$(ct1).addClass(ct1.className+" error");
		$(ct2).addClass(ct2.className+ " error");
		$(mail).addClass(mail.className+" error");
		$(t1).addClass(t1.className+ " error");
		$(t2).addClass(t2.className+" error");	
		}
	if(errorDos){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
		ruleServiceInvalidation = true;
		$(t1).addClass(t1.className+ " error");
		}
	if(errorTres){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
		ruleServiceInvalidation = true;
		$(ct1).addClass(ct1.className+ " error");
		}
	if(errorCuatro){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
		ruleServiceInvalidation = true;
		$(t2).addClass(t2.className+ " error");
		}
	if(errorCinco){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
		ruleServiceInvalidation = true;
		$(ct2).addClass(ct2.className+ " error");
		}
	if(errorSeis){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
		ruleServiceInvalidation = true;
		$(ct2).addClass(ct2.className+ " error");
		$(t1).addClass(t1.className+ " error");
		}
	if(errorSiete){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
		ruleServiceInvalidation = true;
		$(ct1).addClass(ct1.className+ " error");
		$(t2).addClass(t2.className+ " error");
		}
	if(errorOcho){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
		ruleServiceInvalidation = true;
		$(ct1).addClass(ct1.className+ " error");
		$(ct2).addClass(ct2.className+ " error");
		}
	if(errorNueve){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
		ruleServiceInvalidation = true;
		$(t1).addClass(t1.className+ " error");
		$(t2).addClass(t2.className+ " error");
		}
	if(errorDiez){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
		ruleServiceInvalidation = true;
		$(ct2).addClass(ct2.className+ " error");
		}
	if(errorOnce){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
		ruleServiceInvalidation = true;
		$(t2).addClass(t2.className+ " error");
		}
	if(errorDoce){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
		ruleServiceInvalidation = true;
		$(ct1).addClass(ct1.className+ " error");
		}
	if(errorTrece){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
		ruleServiceInvalidation = true;
		$(t1).addClass(t1.className+ " error");
		}
	if(errorCatorce){
		errorMsg1 += "Debés ingresar "+ $(h1).attr("caption")+ " y " + $(h2).attr("caption")+ " para telefono 1" +"\\n";
		ruleServiceInvalidation = true;
		$(h2).addClass(h2.className+ " error");
		}
	if(errorQince){
		errorMsg1 += "Debés ingresar "+ $(h1).attr("caption")+ " y " + $(h2).attr("caption")+ " para telefono 1" +"\\n";
		ruleServiceInvalidation = true;
		$(h1).addClass(h3.className+ " error");
		}
	if(errorDieciseis){
		errorMsg1 += "Debés ingresar "+ $(h3).attr("caption")+ " y " + $(h4).attr("caption")+ " para telefono 2" +"\\n";
		ruleServiceInvalidation = true;
		$(h4).addClass(h4.className+ " error");
		}
	if(errorDiecisiete){
		errorMsg1 += "Debés ingresar "+ $(h3).attr("caption")+ " y " + $(h4).attr("caption")+ " para telefono 2" +"\\n";
		ruleServiceInvalidation = true;
		$(h3).addClass(h3.className+ " error");
		}
	if(validarLengthT1){
		if(!(lenCt1+lenT1==10)){
			errorMsg1 += "Teléfono 1 : la suma de las longitudes debe ser igual a 10"+"\\n";
			ruleServiceInvalidation = true;
			$(t1).addClass(t1.className+ " error");
			$(ct1).addClass(ct1.className+ " error");
		}
	}
	if(validarLengthT2){
		if(!(lenCt2+lenT2==10)){
			errorMsg1 += "Teléfono 2 : la suma de las longitudes debe ser igual a 10"+"\\n";
			ruleServiceInvalidation = true;
			$(t2).addClass(t2.className+ " error");
			$(ct2).addClass(ct2.className+ " error");
		}
	}

	if(validarHoraT1){
		if(/^([01]\\d|2[0-3])+$/.test(valorH1)== false){
			ruleServiceInvalidation = true;
			errorMsg1 += $(h1).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 1"+"\\n";
			$(h1).addClass(h1.className+ " error");
		}
	}

	if(validarHoraT2){
		if(/^([01]\\d|2[0-3])+$/.test(valorH2)== false){
			ruleServiceInvalidation = true;
			errorMsg1 += $(h2).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 1"+"\\n";
			$(h2).addClass(h2.className+ " error");
		}
	} 
	if(validarHoraT3){
		if(/^([01]\\d|2[0-3])+$/.test(valorH3)== false){
		  ruleServiceInvalidation = true;
		  errorMsg1 += $(h3).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 2"+"\\n";
		  $(h3).addClass(h3.className+ " error");
		}
	}
	if(validarHoraT4){
		if(/^([01]\\d|2[0-3])+$/.test(valorH4)== false){
		  ruleServiceInvalidation = true;
		  errorMsg1 += $(h4).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 2"+"\\n";
		  $(h4).addClass(h4.className+ " error");
		}
	}

	if (ruleServiceInvalidation){
		showError(errorMsg1);
	}

	else {
		$(select).removeClass();
		$(select).addClass(sinErrorSelect);
		$(ct2).removeClass();
		$(ct2).addClass(sinErrorCt2);
		$(mail).removeClass();
		$(mail).addClass(sinErrorMail);
		$(t1).removeClass();
		$(t1).addClass(sinErrorT1);
		$(t2).removeClass();
		$(t2).addClass(sinErrorT2);
		$(ct1).removeClass();
		$(ct1).addClass(sinErrorCt1);
		$(h1).removeClass();
	    $(h1).addClass(sinErrorH1);
	    $(h2).removeClass();
	    $(h2).addClass(sinErrorH2);
	    $(h3).removeClass();
	    $(h3).addClass(sinErrorH3);
	    $(h4).removeClass();
	    $(h4).addClass(sinErrorH4);
		ruleServiceInvalidation = false;        
		$(errorPanel).hide();
		}
		
		errorMsg1 = "";
	}
function validateEightFields(ct1,ct2,h1,h2,h3,h4,mail,select,select1,t1,t2,text){

	errorMsg1 = "";
	var nombre = $(select).attr("caption");
	var nombre_text = $(text).attr("caption");
	var nombre_select1 = $(select1).attr("caption");
	lenCt1 = $(ct1).val().length;
	lenCt2 = $(ct2).val().length;
	lenT1 = $(t1).val().length;
	lenT2 = $(t2).val().length;

	valorCt1 = $(ct1).val();
	valorCt2 = $(ct2).val();
	valorT1 = $(t1).val();
	valorT2 = $(t2).val();
	valorH1 = $(h1).val();
	valorH2 = $(h2).val();
	valorH3 = $(h3).val();
	valorH4 = $(h4).val();

	ruleServiceInvalidation = false;
	errorUno = false;
	errorDos = false;
	errorTres = false;
	errorCuatro = false;
	errorCinco = false;
	errorSeis = false;
	errorSiete = false;
	errorOcho = false;
	errorNueve = false;
	errorDiez = false;
	errorOnce = false;
	errorDoce = false;
	errorTrece = false;
	errorCatorce = false;
	errorQince = false;
	errorDieciseis = false;
	errorDiecisiete = false;
	validarLengthT1 = false;
	validarLengthT2 = false;
	validarHoraT1 = false;
	validarHoraT2 = false;
	validarHoraT3 = false;
	validarHoraT4 = false;
	
	$(ct1).val() != ""?valCt1=true:valCt1=false;
	$(ct2).val() != ""?valCt2=true:valCt2=false;
	$(h1).val() != ""?valH1=true:valH1=false;
	$(h2).val() != ""?valH2=true:valH2=false;
	$(h3).val() != ""?valH3=true:valH3=false;
	$(h4).val() != ""?valH4=true:valH4=false;
	$(mail).val() != ""?valMail=true:valMail=false;
	$(t1).val() != ""?valT1=true:valT1=false;
	$(t2).val() != ""?valT2=true:valT2=false;
	$(select).val() != "Ninguno"? valSelect=true:valSelect=false;
	$(select1).val() != "Ninguno"? valSelect1=true:valSelect1=false;
	$(text).val() != ""? valText=true:valText=false;
	
	if((!valMail)&&(!valT1)&&(!valT2)&&(!valCt1)&&(!valCt2)) errorUno=true;
	if((valCt1)&&(!valCt2)&&(!valT1)&&(!valT2)) errorDos = true;
	if((!valCt1)&&(!valCt2)&&(valT1)&&(!valT2)) errorTres = true;
	if((!valCt1)&&(valCt2)&&(!valT1)&&(!valT2)) errorCuatro = true;
	if((!valCt1)&&(!valCt2)&&(!valT1)&&(valT2)) errorCinco = true;
	if((valCt1)&&(!valCt2)&&(!valT1)&&(valT2)) errorSeis = true;
	if((!valCt1)&&(valCt2)&&(valT1)&&(!valT2)) errorSiete = true;
	if((!valCt1)&&(!valCt2)&&(valT1)&&(valT2)) errorOcho = true;
	if((valCt1)&&(valCt2)&&(!valT1)&&(!valT2)) errorNueve = true;
	if((valCt1)&&(!valCt2)&&(valT1)&&(valT2)) errorDiez = true;
	if((valCt1)&&(valCt2)&&(valT1)&&(!valT2)) errorOnce = true;
	if((!valCt1)&&(valCt2)&&(valT1)&&(valT2)) errorDoce = true;
	if((valCt1) &&(valCt2)&&(!valT1)&&(valT2)) errorTrece = true;
	if ((valH1)&&(!valorH2)) errorCatorce = true;
	if ((!valH1)&&(valorH2)) errorQince = true;
	if ((valH3)&&(!valorH4)) errorDieciseis = true;
	if ((!valH3)&&(valorH4)) errorDiecisiete = true;
	if((valCt1)&&(valT1)) validarLengthT1 = true;
	if((valCt2)&&(valT2)) validarLengthT2 = true;
	if(valorH1.length==2) validarHoraT1 = true;
	if(valorH2.length==2) validarHoraT2 = true;
	if(valorH3.length==2) validarHoraT3 = true;
	if(valorH4.length==2) validarHoraT4 = true;

	errorCt1 = $(ct1).attr("class").substr(-6);
	if(errorCt1 == " error") {sinErrorCt1 = $(ct1).attr("class").substr(0,$(ct1).attr("class").length-6)} else {sinErrorCt1 = $(ct1).attr("class")}
	
	errorCt2 = $(ct2).attr("class").substr(-6);
	if(errorCt2 == " error") {sinErrorCt2 = $(ct2).attr("class").substr(0,$(ct2).attr("class").length-6)} else {sinErrorCt2 = $(ct2).attr("class")};
	
	errorMail = $(mail).attr("class").substr(-6);
	if(errorMail == " error") {sinErrorMail = $(mail).attr("class").substr(0,$(mail).attr("class").length-6)} else {sinErrorMail = $(mail).attr("class")};
	
	errorT1 = $(t1).attr("class").substr(-6);
	if(errorT1 == " error") {sinErrorT1 = $(t1).attr("class").substr(0,$(t1).attr("class").length-6)} else {sinErrorT1 = $(t1).attr("class")};
	
	errorT2 = $(t2).attr("class").substr(-6);
	if(errorT2 == " error") {sinErrorT2 = $(t2).attr("class").substr(0,$(t2).attr("class").length-6)} else {sinErrorT2 = $(t2).attr("class")};
	
	errorSelect = $(select).attr("class").substr(-6);
	if(errorSelect == " error") {sinErrorSelect = $(select).attr("class").substr(0,$(select).attr("class").length-6)} else {sinErrorSelect = $(select).attr("class")}
	
	errorSelect1 = $(select1).attr("class").substr(-6);
	if(errorSelect1 == " error") {sinErrorSelect1 = $(select1).attr("class").substr(0,$(select1).attr("class").length-6)} else {sinErrorSelect1 = $(select1).attr("class")}

	errorText = $(text).attr("class").substr(-6);
	if(errorText == " error") {sinErrorText = $(text).attr("class").substr(0,$(text).attr("class").length-6)} else {sinErrorText = $(text).attr("class")}
	
	errorH1 = $(h1).attr("class").substr(-6);
	if(errorH1 == " error") {sinErrorH1 = $(h1).attr("class").substr(0,$(h1).attr("class").length-6)} else {sinErrorH1 = $(h1).attr("class")}

	errorH2 = $(h2).attr("class").substr(-6);
	if(errorH2 == " error") {sinErrorH2 = $(h2).attr("class").substr(0,$(h2).attr("class").length-6)} else {sinErrorH2 = $(h2).attr("class")}


	errorH3 = $(h3).attr("class").substr(-6);
	if(errorH3 == " error") {sinErrorH3 = $(h3).attr("class").substr(0,$(h3).attr("class").length-6)} else {sinErrorH3 = $(h3).attr("class")}

	errorH4 = $(h4).attr("class").substr(-6);
	if(errorH4 == " error") {sinErrorH4 = $(h4).attr("class").substr(0,$(h4).attr("class").length-6)} else {sinErrorH4 = $(h4).attr("class")}


	$(select).removeClass();
	$(select).addClass(sinErrorSelect);
	$(select1).removeClass();
	$(select1).addClass(sinErrorSelect1);
	$(text).removeClass();
	$(text).addClass(sinErrorText);
	$(ct1).removeClass();
	$(ct1).addClass(sinErrorCt1);
	$(ct2).removeClass();
	$(ct2).addClass(sinErrorCt2);
	$(mail).removeClass();
	$(mail).addClass(sinErrorMail);
	$(t1).removeClass();
	$(t1).addClass(sinErrorT1);
	$(t2).removeClass();
	$(t2).addClass(sinErrorT2);
	$(h1).removeClass();
	$(h1).addClass(sinErrorH1);
	$(h2).removeClass();
	$(h2).addClass(sinErrorH2);
	$(h3).removeClass();
	$(h3).addClass(sinErrorH3);
	$(h4).removeClass();
	$(h4).addClass(sinErrorH4);

	if(!valSelect){
			errorMsg1 = nombre+" es obligatorio"+"\\n";
			$(select).addClass(select.className+" error");
		}

	if(!valSelect1){
			errorMsg1 += nombre_select1+" es obligatorio"+"\\n";
			$(select1).addClass(select1.className+" error");
		}

	if(!valText){
		errorMsg1 += nombre_text+" es obligatorio"+"\\n";
		$(text).addClass(text.className+" error");
	}

	if(errorUno){
		
		errorMsg1 += "Debés indicar al menos uno de los datos de contacto";
		ruleServiceInvalidation = true;
		$(ct1).addClass(ct1.className+" error");
		$(ct2).addClass(ct2.className+ " error");
		$(mail).addClass(mail.className+" error");
		$(t1).addClass(t1.className+ " error");
		$(t2).addClass(t2.className+" error");
		}
	if(errorDos){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
		ruleServiceInvalidation = true;
		$(t1).addClass(t1.className+ " error");
		}
	if(errorTres){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
		ruleServiceInvalidation = true;
		$(ct1).addClass(ct1.className+ " error");
		}
	if(errorCuatro){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
		ruleServiceInvalidation = true;
		$(t2).addClass(t2.className+ " error");
		}
	if(errorCinco){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
		ruleServiceInvalidation = true;
		$(ct2).addClass(ct2.className+ " error");
		}
	if(errorSeis){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
		ruleServiceInvalidation = true;
		$(ct2).addClass(ct2.className+ " error");
		$(t1).addClass(t1.className+ " error");
		}
	if(errorSiete){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
		ruleServiceInvalidation = true;
		$(ct1).addClass(ct1.className+ " error");
		$(t2).addClass(t2.className+ " error");
		}
	if(errorOcho){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
		ruleServiceInvalidation = true;
		$(ct1).addClass(ct1.className+ " error");
		$(ct2).addClass(ct2.className+ " error");
		}
	if(errorNueve){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1 y/o 2"+"\\n";
		ruleServiceInvalidation = true;
		$(t1).addClass(t1.className+ " error");
		$(t2).addClass(t2.className+ " error");
		}
	if(errorDiez){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
		ruleServiceInvalidation = true;
		$(ct2).addClass(ct2.className+ " error");
		}
	if(errorOnce){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 2"+"\\n";
		ruleServiceInvalidation = true;
		$(t2).addClass(t2.className+ " error");
		}
	if(errorDoce){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
		ruleServiceInvalidation = true;
		$(ct1).addClass(ct1.className+ " error");
		}
	if(errorTrece){
		errorMsg1 += "Debés ingresar codigo de área y número para teléfono 1"+"\\n";
		ruleServiceInvalidation = true;
		$(t1).addClass(t1.className+ " error");
		}
	if(errorCatorce){
		errorMsg1 += "Debés ingresar "+ $(h1).attr("caption")+ " y " + $(h2).attr("caption")+ " para telefono 1" +"\\n";
		ruleServiceInvalidation = true;
		$(h2).addClass(h2.className+ " error");
		}
	if(errorQince){
		errorMsg1 += "Debés ingresar "+ $(h1).attr("caption")+ " y " + $(h2).attr("caption")+ " para telefono 1" +"\\n";
		ruleServiceInvalidation = true;
		$(h1).addClass(h3.className+ " error");
		}
	if(errorDieciseis){
		errorMsg1 += "Debés ingresar "+ $(h3).attr("caption")+ " y " + $(h4).attr("caption")+ " para telefono 2" +"\\n";
		ruleServiceInvalidation = true;
		$(h4).addClass(h4.className+ " error");
		}
	if(errorDiecisiete){
		errorMsg1 += "Debés ingresar "+ $(h3).attr("caption")+ " y " + $(h4).attr("caption")+ " para telefono 2" +"\\n";
		ruleServiceInvalidation = true;
		$(h3).addClass(h3.className+ " error");
		}





	/*if((validarLengthT1)&&(validarLengthT2)){
		if((!(lenCt1+lenT1==10))&&(!(lenCt2+lenT2==10))){
			errorMsg1 += "Teléfono 1 : la suma de las longitudes debe ser igual a 10"+"\\n";
			errorMsg1 += "Teléfono 2 : la suma de las longitudes debe ser igual a 10"+"\\n";
			$(t1).addClass(t1.className+ " error");
			$(ct1).addClass(ct1.className+ " error");
			$(t2).addClass(t2.className+ " error");
			$(ct2).addClass(ct2.className+ " error");
			ruleServiceInvalidation = true;
			showError(errorMsg1);
		}

		if(!(lenCt1+lenT1==10)){
			errorMsg1 += "Teléfono 1 : la suma de las longitudes debe ser igual a 10"+"\\n";
			ruleServiceInvalidation = true;
			showError(errorMsg1);
			$(t1).addClass(t1.className+ " error");
			$(ct1).addClass(ct1.className+ " error");
		}

		if(!(lenCt2+lenT2==10)){
			errorMsg1 += "Teléfono 2 : la suma de las longitudes debe ser igual a 10"+"\\n";
			ruleServiceInvalidation = true;
			showError(errorMsg1);
			$(t2).addClass(t2.className+ " error");
			$(ct2).addClass(ct2.className+ " error");
		}
	}*/
	if(validarLengthT1){
		if(!(lenCt1+lenT1==10)){
			errorMsg1 += "Teléfono 1 : la suma de las longitudes debe ser igual a 10"+"\\n";
			ruleServiceInvalidation = true;
			$(t1).addClass(t1.className+ " error");
			$(ct1).addClass(ct1.className+ " error");
		}
	}
	if(validarLengthT2){
		if(!(lenCt2+lenT2==10)){
			errorMsg1 += "Teléfono 2 : la suma de las longitudes debe ser igual a 10"+"\\n";
			ruleServiceInvalidation = true;
			$(t2).addClass(t2.className+ " error");
			$(ct2).addClass(ct2.className+ " error");
		}
	}

	if(validarHoraT1){
		if(/^([01]\\d|2[0-3])+$/.test(valorH1)== false){
			ruleServiceInvalidation = true;
			errorMsg1 += $(h1).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 1"+"\\n";
			$(h1).addClass(h1.className+ " error");
		}
	}

	if(validarHoraT2){
		if(/^([01]\\d|2[0-3])+$/.test(valorH2)== false){
			ruleServiceInvalidation = true;
			errorMsg1 += $(h2).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 1"+"\\n";
			$(h2).addClass(h2.className+ " error");
		}
	} 
	if(validarHoraT3){
		if(/^([01]\\d|2[0-3])+$/.test(valorH3)== false){
		  ruleServiceInvalidation = true;
		  errorMsg1 += $(h3).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 2"+"\\n";
		  $(h3).addClass(h3.className+ " error");
		}
	}
	if(validarHoraT4){
		if(/^([01]\\d|2[0-3])+$/.test(valorH4)== false){
		  ruleServiceInvalidation = true;
		  errorMsg1 += $(h4).attr("caption")+" debe ser numérico de 0 a 23 para teléfono 2"+"\\n";
		  $(h4).addClass(h4.className+ " error");
		}
	}

	if (ruleServiceInvalidation){
		showError(errorMsg1);
	}

	else {
		$(select).removeClass();
		$(select).addClass(sinErrorSelect);
		$(ct2).removeClass();
		$(ct2).addClass(sinErrorCt2);
		$(mail).removeClass();
		$(mail).addClass(sinErrorMail);
		$(t1).removeClass();
		$(t1).addClass(sinErrorT1);
		$(t2).removeClass();
		$(t2).addClass(sinErrorT2);
		$(ct1).removeClass();
		$(ct1).addClass(sinErrorCt1);
		$(h1).removeClass();
		$(h1).addClass(sinErrorH1);
		$(h2).removeClass();
		$(h2).addClass(sinErrorH2);
		$(h3).removeClass();
		$(h3).addClass(sinErrorH3);
		$(h4).removeClass();
		$(h4).addClass(sinErrorH4);
		ruleServiceInvalidation = false;        
		$(errorPanel).hide();
		}
		
		errorMsg1 = "";
	}
function onlyNumbers(elem) {
	$("#" + $(elem).attr("id")).bind("keypress", function(e) {
		e = e || window.event;
		var charCode = (typeof e.which == "undefined") ? e.keyCode : e.which;
		var charStr = String.fromCharCode(charCode);
		if (!(/^[\\d]*$/.test(charStr))) {
			return false;
		}
	});
}
function validateLengthV3(elem,val){
	var elemento = $(elem).val();
	var valor = val;

	if(elemento != ""){
		if ((elemento != "")&&((valor != null)||(valor != ""))){
			if ((elemento.length!=valor)){
				isOk = false;
			}
			if (!isOk){
				errorMsg="Error de validación: la cantidad de caracteres del Identificador de pago debe ser igual a " + valor + " caracteres";
				ruleServiceInvalidation=true;	
				showError(errorMsg);
				return;
			}
			else{
				ruleServiceInvalidation=false;
				$(errorPanel).hide();
			}
		}
	}
}
function setCursorAtTheEnd(elem){
	$(elem).get(0).focus();
	$(elem).get(0).setSelectionRange($(elem).val().length,$(elem).val().length);
}
function repeatedValidateNumbersMDP(elem,errorMsg){
	var d = $(elem).val();
	contador = 0;

	for (i=0;i<d.length;i++){
		if(contador < 4){		
			if (d[i]==d[i+1]){
				contador = contador+1;
				}
			else{
				contador = 0;
				}
			}
		else{
			errorMsg += "No podes ingresar números repetidos"+"\\n";
			$(elem).addClass(elem.className+" error");
			return errorMsg;
			}
		}
	return undefined;
	}
function validateConsecutiveNumbersMDP(elem,errorMsg){
	var d = $(elem).val();
	var b = parseInt(d[0])+1;
	var c = parseInt(d[0])+2;
	var f = parseInt(d[0])+3;
	var e = parseInt(d[0])+4;

	if((b==d[1])&&(c==d[2])&&(f==d[3])&&(e==d[4])){
		errorMsg += "No podes ingresar números consecutivos"+"\\n";
		$(elem).addClass(elem.className+" error");
		return errorMsg;
		}
	else{
		return undefined;
		}
	}
function validateRepeatCharMDP(elem,msgError){
    var d = $(elem).val();
    if (d!=""){
        if(d.length>1){
            if((d[0]==d[1])&&(d[0]==d[2])){
            msgError += "La calle del domicilio no se permiten tres caracteres iguales"+"\\n";
            $(elem).addClass(elem.className+" error");
            return msgError;
            }
        }
        else{
            msgError += "La calle del domicilio no se permite un único carácter"+"\\n";
            $(elem).addClass(elem.className+" error");
            return msgError;
            }
        }
    }
function modDatosPersonales(calle,cod1,cod2,cod3,cod4,t1,t2,t3,t4){

  msgError = "";

  errorCod1 = $(cod1).attr("class").substr(-6);
  if(errorCod1 == " error") {sinErrorCod1 = $(cod1).attr("class").substr(0,$(cod1).attr("class").length-6)} else {sinErrorCod1 = $(cod1).attr("class")}

  errorT1 = $(t1).attr("class").substr(-6);
  if(errorT1 == " error") {sinErrorT1 = $(t1).attr("class").substr(0,$(t1).attr("class").length-6)} else {sinErrorT1 = $(t1).attr("class")}

  errorCalle = $(calle).attr("class").substr(-6);
  if(errorCalle == " error") {sinErrorCalle = $(calle).attr("class").substr(0,$(calle).attr("class").length-6)} else {sinErrorCalle = $(calle).attr("class")}

  errorCod2 = $(cod2).attr("class").substr(-6);
  if(errorCod2 == " error") {sinErrorCod2 = $(cod2).attr("class").substr(0,$(cod2).attr("class").length-6)} else {sinErrorCod2 = $(cod2).attr("class")}

  errorT2 = $(t2).attr("class").substr(-6);
  if(errorT2 == " error") {sinErrorT2 = $(t2).attr("class").substr(0,$(t2).attr("class").length-6)} else {sinErrorT2 = $(t2).attr("class")}

  errorCod3 = $(cod3).attr("class").substr(-6);
  if(errorCod3 == " error") {sinErrorCod3 = $(cod3).attr("class").substr(0,$(cod3).attr("class").length-6)} else {sinErrorCod3 = $(cod3).attr("class")}

  errorT3 = $(t3).attr("class").substr(-6);
  if(errorT3 == " error") {sinErrorT3 = $(t3).attr("class").substr(0,$(t3).attr("class").length-6)} else {sinErrorT3 = $(t3).attr("class")}

  errorCod4 = $(cod4).attr("class").substr(-6);
  if(errorCod4 == " error") {sinErrorCod4 = $(cod4).attr("class").substr(0,$(cod4).attr("class").length-6)} else {sinErrorCod4 = $(cod4).attr("class")}

  errorT4 = $(t4).attr("class").substr(-6);
  if(errorT4 == " error") {sinErrorT4 = $(t4).attr("class").substr(0,$(t4).attr("class").length-6)} else {sinErrorT4 = $(t4).attr("class")}

  $(cod1).removeClass();
  $(cod1).addClass(sinErrorCod1);
  $(t1).removeClass();
  $(t1).addClass(sinErrorT1);
  $(calle).removeClass();
  $(calle).addClass(sinErrorCalle);
  $(cod2).removeClass();
  $(cod2).addClass(sinErrorCod2);
  $(t2).removeClass();
  $(t2).addClass(sinErrorT2);
  $(cod3).removeClass();
  $(cod3).addClass(sinErrorCod3);
  $(t3).removeClass();
  $(t3).addClass(sinErrorT3);
  $(cod4).removeClass();
  $(cod4).addClass(sinErrorCod4);
  $(t4).removeClass();
  $(t4).addClass(sinErrorT4);

  if(($(cod1).val()=="")&&($(t1).val()=="")){
    msgError += "Celular : es obligatorio"+"\\n";
    $(cod1).addClass(cod1.className+" error");
    $(t1).addClass(t1.className+" error");
  }

  else if(!($(cod1).val().length+$(t1).val().length==10)){
    msgError += "Celular : la suma de las longitudes debe ser igual a 10"+"\\n";
    $(cod1).addClass(cod1.className+" error");
    $(t1).addClass(t1.className+" error");
  }

  if($(t1).val()!=""){
    msgFunc = repeatedValidateNumbersMDP(t1,msgError);
    if(msgFunc!=undefined){
      msgError = msgFunc;
      msgFunc = "";
    }
    msgFunc = validateConsecutiveNumbersMDP(t1,msgError);
    if(msgFunc!=undefined){
      msgError = msgFunc;
      msgFunc = "";
    }


  }

  if($(calle).val()!=""){
    msgFunc = validateRepeatCharMDP(calle,msgError);
    if(msgFunc!=undefined){
      msgError = msgFunc;
      msgFunc = "";
    }
  }

  if(($(cod2).val()=="")&&($(t2).val()=="")){
    msgError += "Tel. particular : es obligatorio"+"\\n";
    $(cod2).addClass(cod2.className+" error");
    $(t2).addClass(t2.className+" error");
  }

  else if(!($(cod2).val().length+$(t2).val().length==10)){
    msgError += "Tel. particular : la suma de las longitudes debe ser igual a 10"+"\\n";
    $(cod2).addClass(cod2.className+" error");
    $(t2).addClass(t2.className+" error");
  }

  if($(t2).val()!=""){
    msgFunc = repeatedValidateNumbersMDP(t2,msgError);
    if(msgFunc!=undefined){
      msgError = msgFunc;
      msgFunc = "";
    }
    msgFunc = validateConsecutiveNumbersMDP(t2,msgError);
    if(msgFunc!=undefined){
      msgError = msgFunc;
      msgFunc = "";
    }
  }

  if(($(cod3).val()!="")||($(t3).val()!="")){
    if(!($(cod3).val().length+$(t3).val().length==10)){
      msgError += "Tel. particular alternativo : la suma de las longitudes debe ser igual a 10"+"\\n";
      $(cod3).addClass(cod3.className+" error");
      $(t3).addClass(t3.className+" error");
    }
  }

  if($(t3).val()!=""){
    msgFunc = repeatedValidateNumbersMDP(t3,msgError);
    if(msgFunc!=undefined){
      msgError = msgFunc;
      msgFunc = "";
    }
    msgFunc = validateConsecutiveNumbersMDP(t3,msgError);
    if(msgFunc!=undefined){
      msgError = msgFunc;
      msgFunc = "";
    }
  }

  if(($(cod4).val()!="")||($(t4).val()!="")){
    if(!($(cod4).val().length+$(t4).val().length==10)){
      msgError += "Tel. laboral alternativo : la suma de las longitudes debe ser igual a 10"+"\\n";
      $(cod4).addClass(cod4.className+" error");
      $(t4).addClass(t4.className+" error");
    }
  }

  if($(t4).val()!=""){
    msgFunc = repeatedValidateNumbersMDP(t4,msgError);
    if(msgFunc!=undefined){
      msgError = msgFunc;
      msgFunc = "";
    }
    msgFunc = validateConsecutiveNumbersMDP(t4,msgError);
    if(msgFunc!=undefined){
      msgError = msgFunc;
      msgFunc = "";
    }
  }

  if(msgError!=""){
    ruleServiceInvalidation=true; 
    showError(msgError);
    msgError = "";
    return;
  }

}
function isNumber(elem) {
	
	$(elem).keypress(function (e) {
	
		if (e.ctrlKey)
			return true;
	
		if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
			return false;
		}
	
		return true;
	
});
}
function checkBoxCondition2(elem){
	if (elem != ""){
		var d = $(elem).find("tbody").find("tr");
		for (i = 0; i < d.length; i++){
			var q = $(d[i]);
			q = q.find("td");
			q = q[q.length-1];
			if (q.innerHTML == "No adherido"){
				q.innerHTML = "No adherido";
				}
			else{
				q.innerHTML = "Ya adherido";
				}
			}
		for (i = 0; i < d.length; i++){
			var q = $(d[i]);
			q = q.find("td");
			q = q[q.length-1];
			if (q.innerHTML == "Ya adherido"){
				var j = d[i];
				j = j.firstChild;
				j = j.firstChild;
				j.removeAttribute("onclick");
				j.remove("type");
				}
			}
		}
	}
function verifyCheckBoxSelectAll2(elem){
	if (elem != ""){
		var flag = true;
		var d = $(elem).find("tbody").find("tr");
		for (i = 0; i < d.length; i++){
			var q = $(d[i]);
			q = q.find("td");
			ad = q[q.length-1]
			q = q[0];
			q = $(q.getElementsByClassName("checkboxCollection_"+elem[0].id));
			if ((q.attr("checked") != "checked")&&(ad.innerHTML == "No adherido")){
				flag = false;
				}
			}
		if (flag){
			var d = $(document.getElementById("multiCheck_"+elem[0].id))
			$(d).attr("checked","checked");
			}
		}
	}
 
function amountNonEmpty(check1, elem, elem1, elem3, msje2, select1, select2){
    
    var numero= $(elem).val();

    var select = $(select1).val();
    
    var selectA = $(select2).val();
    
    var valorE3 = $(elem1).val();

    var mail= $(elem3).val();

    var codigo = valorE3.substr(0,8);

    var cuenta = valorE3.substr(8,14);

    var esValido=/^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.([a-z]){2,4})$/.test(mail);


    var jq_elem1 = $(elem);
    var estilo_elem1 = jq_elem1.attr("class");
    var estilo_con_error_elem1 = estilo_elem1.substr(-6);

    var jq_elem2 = $(elem1);
    var estilo_elem2 = jq_elem2.attr("class");
    var estilo_con_error_elem2 = estilo_elem2.substr(-6);

    var jq_elem9 = $(select1);
    var estilo_elem9 = jq_elem9.attr("class");
    var estilo_con_error_elem9 = estilo_elem9.substr(-6);
    
    var jq_elem10 = $(select2);
    var estilo_elem10 = jq_elem10.attr("class");
    var estilo_con_error_elem10 = estilo_elem10.substr(-6);

    var jq_elem3 = $(elem3);
    var estilo_elem3 = jq_elem3.attr("class");
    var estilo_con_error_elem3 = estilo_elem3.substr(-6);


    if (estilo_con_error_elem1 == " error") {
        var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
        jq_elem1.removeClass();
        jq_elem1.addClass(estilo_dinamico_elem1);
    }


    if (estilo_con_error_elem3 == " error") {
        var estilo_dinamico_elem3 = estilo_elem3.substring(0, estilo_elem3.length - 6);
        jq_elem3.removeClass();
        jq_elem3.addClass(estilo_dinamico_elem3);
    }

    if (estilo_con_error_elem2 == " error") {
        var estilo_dinamico_elem2 = estilo_elem2.substring(0, estilo_elem2.length - 6);
        jq_elem2.removeClass();
        jq_elem2.addClass(estilo_dinamico_elem2);
    }
    
    
    if (estilo_con_error_elem9 == " error") {
        var estilo_dinamico_elem9 = estilo_elem9.substring(0, estilo_elem9.length - 6);
        jq_elem9.removeClass();
        jq_elem9.addClass(estilo_dinamico_elem9);
    }

    if (estilo_con_error_elem10 == " error") {
        var estilo_dinamico_elem10 = estilo_elem10.substring(0, estilo_elem10.length - 6);
        jq_elem10.removeClass();
        jq_elem10.addClass(estilo_dinamico_elem10);
    }

   
   if (numero == "0,00" || valorE3!= "" && valorE3.length==22|| mail!= "" && esValido==false){
       var errorMsg2="";


        if ((select == "Ninguno")) {
            jq_elem9.addClass(estilo_elem9 + " error");
            errorMsg2 = $(select1).attr("caption") + " es un campo obligatorio" + "\\n";
        }

        if ((valorE3== "")) {
            errorMsg2 = errorMsg2 + "\\n" + $(elem1).attr("caption") + " es un campo obligatorio" + "\\n";
            jq_elem2.addClass(estilo_elem2 + " error");
            var s= true;
        }

       if (s!=true){

        if (valorE3 != "" && valorE3.length<22){
            jq_elem2.addClass(estilo_elem2 + " error");
            errorMsg2 = errorMsg2 +"\\n" +"CBU debe ser un número de 22 dígitos";
        }

        else if ((validarCodigoBanco(codigo)) && (validarCuenta(cuenta))){
            ruleServiceInvalidation = false;
            $(errorPanel).hide();
            
        }else {
            jq_elem2.addClass(estilo_elem2 + " error");
            errorMsg2 = errorMsg2 +"\\n"+ "El CBU ingresado no es válido";
            ruleServiceInvalidation=true;
            var a=true;

        }  

        }      
    

        if ((selectA == "Ninguno")) {
            jq_elem10.addClass(estilo_elem10 + " error");
            errorMsg2 = errorMsg2 + "\\n" + $(select2).attr("caption") + " es un campo obligatorio" + "\\n";
        }



        if (numero == "0,00") {
            ruleServiceInvalidation=true;
            errorMsg2 = errorMsg2 + "\\n" + msje2;
            jq_elem1.addClass(estilo_elem1 + " error");
        }

    
        if ($(check1).prop("checked")) {
           if ((mail== "")) {
              errorMsg2 = errorMsg2 + "\\n" + " E-mail es un campo obligatorio" + "\\n";
              jq_elem3.addClass(estilo_elem3 + " error");
           }    
        }

        if ($(check1).prop("checked")) {
           if ((mail!= "" && esValido==false)) {
              errorMsg2 = errorMsg2 + "\\n" + "E-mail debe ser válido" + "\\n";
              ruleServiceInvalidation=true;
              jq_elem3.addClass(estilo_elem3 + " error");
           }    
        }
    
        if (numero != "0,00" && a== true || numero == "0,00" || numero == "0,00" && a==true ||mail!= "" && esValido==false)
        showError(errorMsg2);
        return;
           
        }
       
}



  
  
 
function amountNonEmpty2(check1, check2, d1, d2, d3, d4, d5, elem, elem1, elem2, elem3, msje2, select1, select2, select3){
    
    var numero= $(elem).val();

    var select = $(select1).val();

    var selectA = $(select2).val();
    
    var selectB = $(select3).val();
       
    var valorE3 = $(elem1).val();

    var valorE4 = $(elem2).val();
    
    var mail= $(elem3).val();

    var codigo = valorE4.substr(0,8);

    var cuenta = valorE4.substr(8,14);

    var esValido=/^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.([a-z]){2,4})$/.test(mail);




    var jq_elem10 = $(select2);
    var estilo_elem10 = jq_elem10.attr("class");
    var estilo_con_error_elem10 = estilo_elem10.substr(-6);

    var jq_elem1 = $(elem);
    var estilo_elem1 = jq_elem1.attr("class");
    var estilo_con_error_elem1 = estilo_elem1.substr(-6);

    var jq_elem2 = $(elem1);
    var estilo_elem2 = jq_elem2.attr("class");
    var estilo_con_error_elem2 = estilo_elem2.substr(-6);

    var jq_elem9 = $(select1);
    var estilo_elem9 = jq_elem9.attr("class");
    var estilo_con_error_elem9 = estilo_elem9.substr(-6);

      if (selectB!=undefined){

    var jq_elem4 = $(select3);
    var estilo_elem4 = jq_elem4.attr("class");
    var estilo_con_error_elem4 = estilo_elem4.substr(-6);

    }
    var jq_elem3 = $(elem2);
    var estilo_elem3 = jq_elem3.attr("class");
    var estilo_con_error_elem3 = estilo_elem3.substr(-6);

    var jq_elem33 = $(elem3);
    var estilo_elem33 = jq_elem33.attr("class");
    var estilo_con_error_elem33 = estilo_elem33.substr(-6);

    if (d1[0]!=undefined){

    var jq_elem5 = $(d1);
    var estilo_elem5 = jq_elem5.attr("class");
    var estilo_con_error_elem5 = estilo_elem5.substr(-6);
 }
    if (d2[0]!=undefined){
    var jq_elem6 = $(d2);
    var estilo_elem6 = jq_elem6.attr("class");
    var estilo_con_error_elem6 = estilo_elem6.substr(-6);
}
    if (d3[0]!=undefined){
    var jq_elem7 = $(d3);
    var estilo_elem7 = jq_elem7.attr("class");
    var estilo_con_error_elem7 = estilo_elem7.substr(-6);

}
if (d4[0]!=undefined){
    var jq_elem8 = $(d4);
    var estilo_elem8 = jq_elem8.attr("class");
    var estilo_con_error_elem8 = estilo_elem8.substr(-6);
}
if (d5[0]!=undefined){
    var jq_elem11 = $(d5);
    var estilo_elem11 = jq_elem11.attr("class");
    var estilo_con_error_elem11 = estilo_elem11.substr(-6);


}

    if (estilo_con_error_elem1 == " error") {
        var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
        jq_elem1.removeClass();
        jq_elem1.addClass(estilo_dinamico_elem1);
    }

    if (estilo_con_error_elem2 == " error") {
        var estilo_dinamico_elem2 = estilo_elem2.substring(0, estilo_elem2.length - 6);
        jq_elem2.removeClass();
        jq_elem2.addClass(estilo_dinamico_elem2);
    }
    
    if (estilo_con_error_elem3 == " error") {
        var estilo_dinamico_elem3 = estilo_elem3.substring(0, estilo_elem3.length - 6);
        jq_elem3.removeClass();
        jq_elem3.addClass(estilo_dinamico_elem3);
    }

    if (estilo_con_error_elem4 == " error") {
        var estilo_dinamico_elem4 = estilo_elem4.substring(0, estilo_elem4.length - 6);
        jq_elem4.removeClass();
        jq_elem4.addClass(estilo_dinamico_elem4);
    }

    if (estilo_con_error_elem5 == " error") {
        var estilo_dinamico_elem5 = estilo_elem5.substring(0, estilo_elem5.length - 6);
        jq_elem5.removeClass();
        jq_elem5.addClass(estilo_dinamico_elem5);
    }
    if (estilo_con_error_elem6 == " error") {
        var estilo_dinamico_elem6 = estilo_elem6.substring(0, estilo_elem6.length - 6);
        jq_elem6.removeClass();
        jq_elem6.addClass(estilo_dinamico_elem6);
    }
    if (estilo_con_error_elem7 == " error") {
        var estilo_dinamico_elem7 = estilo_elem7.substring(0, estilo_elem7.length - 6);
        jq_elem7.removeClass();
        jq_elem7.addClass(estilo_dinamico_elem7);
    }

    if (estilo_con_error_elem8 == " error") {
        var estilo_dinamico_elem8 = estilo_elem8.substring(0, estilo_elem8.length - 6);
        jq_elem8.removeClass();
        jq_elem8.addClass(estilo_dinamico_elem8);
    }
    if (estilo_con_error_elem10 == " error") {
        var estilo_dinamico_elem10 = estilo_elem10.substring(0, estilo_elem10.length - 6);
        jq_elem10.removeClass();
        jq_elem10.addClass(estilo_dinamico_elem10);
    }


    
    if (estilo_con_error_elem9 == " error") {
        var estilo_dinamico_elem9 = estilo_elem9.substring(0, estilo_elem9.length - 6);
        jq_elem9.removeClass();
        jq_elem9.addClass(estilo_dinamico_elem9);
    }

    if (estilo_con_error_elem11 == " error") {
        var estilo_dinamico_elem11 = estilo_elem11.substring(0, estilo_elem11.length - 6);
        jq_elem11.removeClass();
        jq_elem11.addClass(estilo_dinamico_elem10);
    }

    if (estilo_con_error_elem33 == " error") {
        var estilo_dinamico_elem33 = estilo_elem33.substring(0, estilo_elem33.length - 6);
        jq_elem33.removeClass();
        jq_elem33.addClass(estilo_dinamico_elem3);
    }




    
    if (numero == "0,00" || valorE4!= "" && valorE4.length==22 || valorE3!= "" && valorE3.length<=11 || mail!= "" && esValido==false ){

        var  errorMsg2="";


    if ((selectA == "Ninguno")) {
            jq_elem10.addClass(estilo_elem10 + " error");
        errorMsg2 =$(select2).attr("caption") + " es un campo obligatorio" + "\\n";
    } 

    if ((valorE4== "")) {
            errorMsg2 = errorMsg2 + "\\n" + $(elem2).attr("caption") + " es un campo obligatorio" + "\\n";
            jq_elem3.addClass(estilo_elem3 + " error");
            var s= true;
    }
    
    if (s!=true){
        if (valorE4 != "" && valorE4.length<22){
        jq_elem3.addClass(estilo_elem3 + " error");
        errorMsg2 = errorMsg2 +"\\n" +"CBU debe ser un número de 22 dígitos";
    }

    else if ((validarCodigoBanco(codigo)) && (validarCuenta(cuenta))){
            ruleServiceInvalidation = false;
            $(errorPanel).hide();
            
    }else{
            jq_elem3.addClass(estilo_elem3 + " error");
            errorMsg2 = errorMsg2 +"\\n"+ "El CBU ingresado no es válido";
            ruleServiceInvalidation=true;
            var a=true;
       
     }
    }

    if ((select == "Ninguno")) {
            jq_elem9.addClass(estilo_elem9 + " error");
        errorMsg2 = errorMsg2 + "\\n" + $(select1).attr("caption") + " es un campo obligatorio" + "\\n";
    }

    if ((valorE3== "")) {
        errorMsg2 = errorMsg2 + "\\n" + $(elem1).attr("caption") + " es un campo obligatorio" + "\\n";
        jq_elem2.addClass(estilo_elem2 + " error");
    }



    var inputValor = $(elem1).val();
    if(inputValor != ""){
        var flag = false;
        inputString = inputValor.toString();
        if (inputString.length == 11) {
            var Caracters_1_2 = inputString.charAt(0) + inputString.charAt(1)
            if (Caracters_1_2 == "20" || Caracters_1_2 == "23" || Caracters_1_2 == "24" || Caracters_1_2 == "27" || Caracters_1_2 == "30" || Caracters_1_2 == "33" || Caracters_1_2 == "34") {
                var Count = inputString.charAt(0) * 5 + inputString.charAt(1) * 4 + inputString.charAt(2) * 3 + inputString.charAt(3) * 2 + inputString.charAt(4) * 7 + inputString.charAt(5) * 6 + inputString.charAt(6) * 5 + inputString.charAt(7) * 4 + inputString.charAt(8) * 3 + inputString.charAt(9) * 2 + inputString.charAt(10) * 1
                Division = Count / 11;
                if (Division == Math.floor(Division)) {
                    flag = true;
                }
            }
        }
        if (!flag && valorE3.length == 11){
            errorMsg2 = errorMsg2 + "\\n" + $(elem1).attr("caption") + " inválido.";
            jq_elem2.addClass(estilo_elem2 + " error");
            ruleServiceInvalidation=true;      

        }else if(valorE3.length < 11){
            errorMsg2= errorMsg2 + "\\n" + $(elem1).attr("caption") + " debe ser un número de 11 dígitos" ;
            jq_elem2.addClass(estilo_elem2 + " error");

        }

    }
      if (numero == "0,00") {
        ruleServiceInvalidation=true;
        errorMsg2 = errorMsg2 + "\\n" + msje2;
        jq_elem1.addClass(estilo_elem1 + " error");

      }

    if ($(check1).prop("checked")) {
     if ((mail== "")) {
            errorMsg2 = errorMsg2 + "\\n" + "E-mail es un campo obligatorio" + "\\n";
        jq_elem33.addClass(estilo_elem33 + " error");
      } 
    }

    if ($(check1).prop("checked")) {
     if ((mail!= "" && esValido==false )) {
            errorMsg2 = errorMsg2 + "\\n" + "E-mail debe ser válido" + "\\n";
        jq_elem33.addClass(estilo_elem33 + " error");
      } 
    }



    if ($(check2).prop("checked")) {

        var opciones= $(select3).find("option");

        if (selectB =="Ninguno"){
               
           
            errorMsg2 = errorMsg2 + "\\n" + $(select3).attr("caption")+ " es un campo obligatorio" + "\\n";
            jq_elem4.addClass(estilo_elem4 + " error");

        } 
            else if (opciones[1].selected) {
                var unicaVez= $(d1).val();
                if ((unicaVez== "")) {
                    errorMsg2 = errorMsg2 + "\\n" + $(d1).attr("caption")+ " es un campo obligatorio" + "\\n";
                    jq_elem5.addClass(estilo_elem5 + " error");
                }
             }else if(opciones[2].selected){

                    var semanal=$(d2).val();
                    var semanal2=$(d3).val();

                if ((semanal== "")) {
                    errorMsg2 = errorMsg2 + "\\n" + $(d2).attr("caption")+ " es un campo obligatorio" + "\\n";
                    jq_elem6.addClass(estilo_elem6 + " error");
                }
                 if ((semanal2== "")) {
                errorMsg2 = errorMsg2 + "\\n" + $(d3).attr("caption")+ " es un campo obligatorio" + "\\n";
                jq_elem7.addClass(estilo_elem7 + " error");

                }
             }else{
                   var mensual=$(d4).val();
                   var mensual2=$(d5).val();

                if ((mensual== "")) {
                    errorMsg2 = errorMsg2 + "\\n" + $(d4).attr("caption")+ " es un campo obligatorio" + "\\n";
                    jq_elem8.addClass(estilo_elem8 + " error");
                }
                if ((mensual2== "")) {
                    errorMsg2 = errorMsg2 + "\\n" + $(d5).attr("caption")+ " es un campo obligatorio" + "\\n";
                    jq_elem11.addClass(estilo_elem11 + " error");
                }
             }

            
        }
           

        if (mail!= "" && esValido==false||numero != "0,00" && a== true || numero == "0,00" || numero == "0,00" && a==true ||numero != "0,00" && !flag && valorE3.length == 11|| numero == "0,00" && !flag && valorE3.length == 11 || valorE3.length < 11)
            if  (errorMsg2!=""){
            ruleServiceInvalidation=true;
            showError(errorMsg2);
            }
        return;
        }
   
}


  
  
function ifOneThenTwo(elem,elem2,msgError){
	if(($(elem).val()!="")&&($(elem2).val()=="")){
		showError(msgError);
		ruleServiceInvalidation=true;		
		return;
	}
	else if(($(elem).val()=="")&&($(elem2).val()!="")){
		showError(msgError);
		ruleServiceInvalidation=true;		
		return;
	}
}
function comparaFecha(date1, date2, message) {

	errorDate1 = $(date1).attr("class").substr(-6);
	if(errorDate1 == " error"){
		sinErrorDate1 = $(date1).attr("class").substr(0,$(date1).attr("class").length-6);
	} else {
		sinErrorDate1 = $(date1).attr("class");
	}
	
	date2 = date2.toString();
	date2Str = date2.substr(6,2)+"/"+date2.substr(4,2)+"/"+date2.substr(0,4);

	$(date1).removeClass();
	$(date1).addClass(sinErrorDate1);

	if(date1.val() != ""){
		var listaReversaDate1 = $(date1).val().split("/");
		var date1Nuevo = listaReversaDate1[2]+"/"+listaReversaDate1[1]+"/"+listaReversaDate1[0];
		date2Nuevo = date2.substr(0,4)+"/"+date2.substr(4,2)+"/"+date2.substr(6,2);
		if(date1Nuevo > date2Nuevo) {
		    showError(message);
		    $(date1).addClass(date1.className+" error");
		    ruleServiceInvalidation=true;
		    return;
		}
	}
}
function esconderHTML(elem){
	a = $($($(tableReport).find("tbody").find("tr").find("td").find("a")[2]).find("img"));
	a.attr("hidden",true);
}
function showElementWhenSelectingCollection(elem,elem2){
	$(elem).attr("onChange","$("+elem2.attr("id")+").show()");
}
function accountJustNumberAndMask(elem) {

$(elem).keypress(function (e) {

if (e.which != 8 && e.which != 0 &&e.which !=45 && (e.which < 47  || e.which > 57)) {
       	return false;
   	}
return true;
});
 

}

function accountMasc(elem) {

	var valor =$(elem).val();
	var valor1;

	if (valor.length==7){
			valor1= valor + "-";
			$(elem).val(valor1);

	}else if (valor.length==11){

			valor1= valor+"/";
			$(elem).val(valor1);
	}



}


function alignSelectField(cant_columnas,elem){
	var lista = $(elem).find("option");
    for (var1=1 ; var1<lista.length ; var1++){
    	var elemento = lista[var1].innerHTML;
        var cadena_paquete="";
        var array_elementos = elemento.split(" "); 
        if (array_elementos.length>cant_columnas){
            var cant_a_concatenar = array_elementos.length-cant_columnas;
        	var lista_concatenada = [];
        	for(var3=0;var3<=cant_a_concatenar;var3++){
        		lista_concatenada.push(array_elementos[var3]);
        	}
            for (var i = 0; i < lista_concatenada.length; i++) {
                cadena_paquete=cadena_paquete+" "+lista_concatenada[i].trim();
                cadena_paquete=cadena_paquete.trim();
                }
            if (cadena_paquete.length<=21){
                        var cant_espacio=21-(cadena_paquete.length);
                        var cont=0;
                        var espacio="";
                        while(cont<cant_espacio){
                            espacio=espacio+"&nbsp;";
                            cont++;
                        }
                        cadena_paquete=cadena_paquete+espacio;
                    }
            var lista_resta = array_elementos.splice(lista_concatenada.length);
            var cadena_final=cadena_paquete;
            for (var y=0;y<lista_resta.length;y++){
            	if (y==1){
            		var moneda = lista_resta[y];
            		if(moneda.length<=3){
            			var cant_espacio_moneda=3-(moneda.length);
            			var cont=0;
            			var espacio="";
            			while(cont<cant_espacio_moneda){
                            espacio=espacio+"&nbsp;";
                            cont++;
                        }
                        moneda=moneda+espacio;
            		}
            	}
            	lista[var1].innerHTML = cadena_paquete+" "+lista_resta[0]+" "+moneda+" "+lista_resta[2];
            	if (y==3){
            		var importe = lista_resta[y];
            		if (importe.length<=18){
            			var cant_espacio_importe=18-(importe.length);
            			var cont=0;
            			var espacio="";
            			while(cont<cant_espacio_importe){
                            espacio=espacio+"&nbsp;";
                            cont++;
                        }
                        importe=espacio+importe;
            		}
            		lista[var1].innerHTML = cadena_paquete+" "+lista_resta[0]+" "+moneda+" "+lista_resta[2]+" "+importe;
            	}
            }   
        }else{
            for(var z=0;z<array_elementos.length;z++){
                if (z==0){
                    var paquete = array_elementos[0];
                    if (paquete.length<=21){
                        var cant_espacio=21-(paquete.length);
                        var cont=0;
                        var espacio="";
                        while(cont<cant_espacio){
                            espacio=espacio+"&nbsp;";
                            cont++;
                        }
                        paquete=paquete+espacio;
                    }
                }
                else if (z==2){
                    var moneda = array_elementos[2];
                    if(moneda.length<=3){
            			var cant_espacio_moneda=3-(moneda.length);
            			var cont=0;
            			var espacio="";
            			while(cont<cant_espacio_moneda){
                            espacio=espacio+"&nbsp;";
                            cont++;
                        }
                        moneda=moneda+espacio;
            		}
                }
                lista[var1].innerHTML = paquete+" "+array_elementos[1]+" "+moneda+" "+array_elementos[3];
                if (z==4){
            		var importe = array_elementos[z];
            		if (importe.length<=18){
            			var cant_espacio_importe=18-(importe.length);
            			var cont=0;
            			var espacio="";
            			while(cont<cant_espacio_importe){
                            espacio=espacio+"&nbsp;";
                            cont++;
                        }
                        importe=espacio+importe;
            		}
            		lista[var1].innerHTML = paquete+" "+array_elementos[1]+" "+moneda+" "+array_elementos[3]+" "+importe;
            	}
            }
        }
        }
    }

function amountNonEmpty3(check1, check2, d1, d2, d3, d4, d5, elem, elem1, elem3, msje2, select1, select3){
    
    var numero= $(elem).val();

    var select = $(select1).val();

    var selectB = $(select3).val();
       
    var valorE3 = $(elem1).val();

    var mail= $(elem3).val();

    var esValido=/^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.([a-z]){2,4})$/.test(mail);
    


    
    var jq_elem1 = $(elem);
    var estilo_elem1 = jq_elem1.attr("class");
    var estilo_con_error_elem1 = estilo_elem1.substr(-6);

    var jq_elem2 = $(elem1);
    var estilo_elem2 = jq_elem2.attr("class");
    var estilo_con_error_elem2 = estilo_elem2.substr(-6);

    var jq_elem9 = $(select1);
    var estilo_elem9 = jq_elem9.attr("class");
    var estilo_con_error_elem9 = estilo_elem9.substr(-6);

      if (selectB!=undefined){

    var jq_elem4 = $(select3);
    var estilo_elem4 = jq_elem4.attr("class");
    var estilo_con_error_elem4 = estilo_elem4.substr(-6);

    }
   

    var jq_elem33 = $(elem3);
    var estilo_elem33 = jq_elem33.attr("class");
    var estilo_con_error_elem33 = estilo_elem33.substr(-6);

    if (d1[0]!=undefined){

    var jq_elem5 = $(d1);
    var estilo_elem5 = jq_elem5.attr("class");
    var estilo_con_error_elem5 = estilo_elem5.substr(-6);
 }
    if (d2[0]!=undefined){
    var jq_elem6 = $(d2);
    var estilo_elem6 = jq_elem6.attr("class");
    var estilo_con_error_elem6 = estilo_elem6.substr(-6);
}
    if (d3[0]!=undefined){
    var jq_elem7 = $(d3);
    var estilo_elem7 = jq_elem7.attr("class");
    var estilo_con_error_elem7 = estilo_elem7.substr(-6);

}
if (d4[0]!=undefined){
    var jq_elem8 = $(d4);
    var estilo_elem8 = jq_elem8.attr("class");
    var estilo_con_error_elem8 = estilo_elem8.substr(-6);
}
if (d5[0]!=undefined){
    var jq_elem10 = $(d5);
    var estilo_elem10 = jq_elem10.attr("class");
    var estilo_con_error_elem10 = estilo_elem10.substr(-6);


}

    if (estilo_con_error_elem1 == " error") {
        var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
        jq_elem1.removeClass();
        jq_elem1.addClass(estilo_dinamico_elem1);
    }

    if (estilo_con_error_elem2 == " error") {
        var estilo_dinamico_elem2 = estilo_elem2.substring(0, estilo_elem2.length - 6);
        jq_elem2.removeClass();
        jq_elem2.addClass(estilo_dinamico_elem2);
    }
    

    if (estilo_con_error_elem4 == " error") {
        var estilo_dinamico_elem4 = estilo_elem4.substring(0, estilo_elem4.length - 6);
        jq_elem4.removeClass();
        jq_elem4.addClass(estilo_dinamico_elem4);
    }

    if (estilo_con_error_elem5 == " error") {
        var estilo_dinamico_elem5 = estilo_elem5.substring(0, estilo_elem5.length - 6);
        jq_elem5.removeClass();
        jq_elem5.addClass(estilo_dinamico_elem5);
    }
    if (estilo_con_error_elem6 == " error") {
        var estilo_dinamico_elem6 = estilo_elem6.substring(0, estilo_elem6.length - 6);
        jq_elem6.removeClass();
        jq_elem6.addClass(estilo_dinamico_elem6);
    }
    if (estilo_con_error_elem7 == " error") {
        var estilo_dinamico_elem7 = estilo_elem7.substring(0, estilo_elem7.length - 6);
        jq_elem7.removeClass();
        jq_elem7.addClass(estilo_dinamico_elem7);
    }

    if (estilo_con_error_elem8 == " error") {
        var estilo_dinamico_elem8 = estilo_elem8.substring(0, estilo_elem8.length - 6);
        jq_elem8.removeClass();
        jq_elem8.addClass(estilo_dinamico_elem8);
    }
    if (estilo_con_error_elem10 == " error") {
        var estilo_dinamico_elem10 = estilo_elem10.substring(0, estilo_elem10.length - 6);
        jq_elem10.removeClass();
        jq_elem10.addClass(estilo_dinamico_elem10);
    }


    
    if (estilo_con_error_elem9 == " error") {
        var estilo_dinamico_elem9 = estilo_elem9.substring(0, estilo_elem9.length - 6);
        jq_elem9.removeClass();
        jq_elem9.addClass(estilo_dinamico_elem9);
    }

    if (estilo_con_error_elem33== " error") {
        var estilo_dinamico_elem33= estilo_elem33.substring(0, estilo_elem33.length - 6);
        jq_elem33.removeClass();
        jq_elem33.addClass(estilo_dinamico_elem33);
    }

    var aux = $(elem1).val().replace("-", "").replace("/", "");
    if (numero == "0,00" || aux.length<11 || aux.length>11 || mail!= "" && esValido==false){
        var errorMsg2="";
      
    

    if ((select == "Ninguno")) {
            jq_elem9.addClass(estilo_elem9 + " error");
        errorMsg2 = $(select1).attr("caption") + " es un campo obligatorio" + "\\n";
    }

     if ((valorE3== "")) {
            errorMsg2 = errorMsg2 + "\\n" + $(elem1).attr("caption") + " es un campo obligatorio" + "\\n";
            jq_elem2.addClass(estilo_elem2 + " error");
    }
    if (valorE3!= ""){
            if (aux.length<11 || aux.length>11){
            ruleServiceInvalidation=true;
            jq_elem2.addClass(estilo_elem2 + " error");
            errorMsg2 = errorMsg2 + "\\n" +(elem1).attr("caption") + " debe ser un número entero de longitud 11 como máximo";
        }
    }
   
    if (numero == "0,00") {
        errorMsg2 = errorMsg2 + "\\n" + msje2;
        jq_elem1.addClass(estilo_elem1 + " error");
        ruleServiceInvalidation=true;

    }

    if ($(check1).prop("checked")) {
     if ((mail== "")) {
            errorMsg2 = errorMsg2 + "\\n" + "E-mail es un campo obligatorio" + "\\n";
        jq_elem33.addClass(estilo_elem33 + " error");
      } 
    }


    if ($(check1).prop("checked")) {
     if (mail!= "" && esValido==false ) {
            errorMsg2 = errorMsg2 + "\\n" + "E-mail debe ser válido" + "\\n";
        jq_elem33.addClass(estilo_elem33 + " error");
        ruleServiceInvalidation=true;
      } 
    }


    if ($(check2).prop("checked")) {

        var opciones= $(select3).find("option");

        if (selectB =="Ninguno"){
               
           
            errorMsg2 = errorMsg2 + "\\n" + $(select3).attr("caption")+ " es un campo obligatorio" + "\\n";
            jq_elem4.addClass(estilo_elem4 + " error");

        } 
            else if (opciones[1].selected) {
                var unicaVez= $(d1).val();
                if ((unicaVez== "")) {
                    errorMsg2 = errorMsg2 + "\\n" + $(d1).attr("caption")+ " es un campo obligatorio" + "\\n";
                    jq_elem5.addClass(estilo_elem5 + " error");
                }
             }else if(opciones[2].selected){

                    var semanal=$(d2).val();
                    var semanal2=$(d3).val();

                if ((semanal== "")) {
                    errorMsg2 = errorMsg2 + "\\n" + $(d2).attr("caption")+ " es un campo obligatorio" + "\\n";
                    jq_elem6.addClass(estilo_elem6 + " error");
                }
                 if ((semanal2== "")) {
                errorMsg2 = errorMsg2 + "\\n" + $(d3).attr("caption")+ " es un campo obligatorio" + "\\n";
                jq_elem7.addClass(estilo_elem7 + " error");

                }
             }else{
                   var mensual=$(d4).val();
                   var mensual2=$(d5).val();

                if ((mensual== "")) {
                    errorMsg2 = errorMsg2 + "\\n" + $(d4).attr("caption")+ " es un campo obligatorio" + "\\n";
                    jq_elem8.addClass(estilo_elem8 + " error");
                }
                if ((mensual2== "")) {
                    errorMsg2 = errorMsg2 + "\\n" + $(d5).attr("caption")+ " es un campo obligatorio" + "\\n";
                    jq_elem10.addClass(estilo_elem10 + " error");
                }
             }

        
    }




    if (ruleServiceInvalidation==true){
    
    
    showError(errorMsg2);
    return;

    }
}



        if ($(elem1).val()==""|| $(check1).prop("checked") && mail=="" ||$(check1).prop("checked")&& esValido== false ||select == "Ninguno" || $(check2).prop("checked") && selectB== "Ninguno" || $(check2).prop("checked") && $(d1).val()==""||$(check2).prop("checked") && $(d2).val()==""|| $(check2).prop("checked") && $(d3).val()==""|| $(check2).prop("checked") && $(d4).val()==""|| $(check2).prop("checked") && $(d5).val()==""){
       
       }else{
        var cuenta=$(elem1).val();
        var aux =  cuenta.replace("-", "").replace("/", "");
        if (aux.length<11 || aux.length>11){
            ruleServiceInvalidation=true;
            jq_elem2.addClass(estilo_elem2 + " error");
            showError($(elem1).attr("caption") + " debe ser un número entero de longitud 11 como máximo");
            return;
        }else{
        $(elem1).val(aux);
        }
    }

}



function validarTransferencia(elem, elem2, elem3, elem4, elem5, elem6, elem7, elem8){

	errorMsg = "";
	error = false;

	errorElem = $(elem).attr("class").substr(-6);
	if(errorElem == " error") {sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6)} else {sinErrorElem = $(elem).attr("class")}

	$(elem).removeClass();
	$(elem).addClass(sinErrorElem);

	errorElem2 = $(elem2).attr("class").substr(-6);
	if(errorElem2 == " error") {sinErrorElem2 = $(elem2).attr("class").substr(0,$(elem2).attr("class").length-6)} else {sinErrorElem2 = $(elem2).attr("class")}

	$(elem2).removeClass();
	$(elem2).addClass(sinErrorElem2);

	errorElem3 = $(elem3).attr("class").substr(-6);
	if(errorElem3 == " error") {sinErrorElem3 = $(elem3).attr("class").substr(0,$(elem3).attr("class").length-6)} else {sinErrorElem3 = $(elem3).attr("class")}

	$(elem3).removeClass();
	$(elem3).addClass(sinErrorElem3);

	

	if($(elem).val()=="Ninguno"){
		errorMsg += "\\n" + $(elem).attr("caption")+ " es un campo obligatorio" + "\\n";
		$(elem).addClass(elem.className + " error");
		error = true;
	}


	if($(elem2).val()=="Ninguno"){
		errorMsg += "\\n" + $(elem2).attr("caption")+ " es un campo obligatorio" + "\\n";
		$(elem2).addClass(elem2.className + " error");
		error = true;
	}

	if($(elem3).val()=="0,00"){
		errorMsg += "\\n" + $(elem3).attr("caption")+ " es un campo obligatorio" + "\\n";
		$(elem3).addClass(elem3.className + " error");
		error = true;
	}

	elem5 = document.getElementById(elem5.attr("id"));

	if($(elem4).val()!=undefined){

		errorElem5 = $(elem5).attr("class").substr(-6);
		if(errorElem5 == " error") {sinErrorElem5 = $(elem5).attr("class").substr(0,$(elem5).attr("class").length-6)} else {sinErrorElem5 = $(elem5).attr("class")}

		$(elem5).removeClass();
		$(elem5).addClass(sinErrorElem5);

		if($(elem4).prop("checked")){
		
			if(elem5.selectedIndex==0){
				errorMsg += "\\n" + $(elem5).attr("caption")+ " es un campo obligatorio" + "\\n";
				$(elem5).addClass(elem5.className + " error");
				error = true;
			}

			else if(elem5.selectedIndex==1){

				errorElem6 = $(elem6).attr("class").substr(-6);
				if(errorElem6 == " error") {sinErrorElem6 = $(elem6).attr("class").substr(0,$(elem6).attr("class").length-6)} else {sinErrorElem6 = $(elem6).attr("class")}

				$(elem6).removeClass();
				$(elem6).addClass(sinErrorElem6);

				if($(elem6).val()==""){
					errorMsg += "\\n" + $(elem6).attr("caption")+ " es un campo obligatorio" + "\\n";
					$(elem6).addClass(elem6.className + " error");
					error = true;
				}
			}

			else if(elem5.selectedIndex==2){

				errorElem8 = $(elem8).attr("class").substr(-6);
				if(errorElem8 == " error") {sinErrorElem8 = $(elem8).attr("class").substr(0,$(elem8).attr("class").length-6)} else {sinErrorElem8 = $(elem8).attr("class")}

				$(elem8).removeClass();
				$(elem8).addClass(sinErrorElem8);	

				if($(elem8).val()==""){
					errorMsg += "\\n" + $(elem8).attr("caption")+ " es un campo obligatorio" + "\\n";
					$(elem8).addClass(elem8.className + " error");
					error = true;
				}
			}

			else if(elem5.selectedIndex==3){

				errorElem7 = $(elem7).attr("class").substr(-6);
				if(errorElem7 == " error") {sinErrorElem7 = $(elem7).attr("class").substr(0,$(elem7).attr("class").length-6)} else {sinErrorElem7 = $(elem7).attr("class")}

				$(elem7).removeClass();
				$(elem7).addClass(sinErrorElem7);

				if($(elem7).val()==""){
					errorMsg += "\\n" + $(elem7).attr("caption")+ " es un campo obligatorio" + "\\n";
					$(elem7).addClass(elem7.className + " error");
					error = true;	
				}
			}
		}

	}

	
	if(error){
		showError(errorMsg);
	    ruleServiceInvalidation=true;
	    return;
	}
}
function callTosaveLastCollectionSelected(elem1){
	var lista_secciones =$(elem1).find("div").find($("div[id^='"+$(elem1).attr("id")+"_repeat']"));
	for (var x=0;x<lista_secciones.length;x++){
		var coleccion = $(lista_secciones[x]).find($("table[class^='collection-table_selectable']"));
		for (var z=0;z<coleccion.length;z++){
			var listaDeTr = $(coleccion[z]).find("tbody").find("tr");
			for( i = 0; i < listaDeTr.length; i++ ){
		   		onclickViejo = $(listaDeTr[i]).attr("onclick");
    			onclickNuevo = "saveLastCollectionSelected("+$(elem1).parent().parent().parent().parent().attr("id")+");"+onclickViejo;
    			$(listaDeTr[i]).attr("onclick",onclickNuevo);
			}
			
		}
	}	
}
function compararIdentificadores(elem,elem2,val){

	errorElem2 = $(elem2).attr("class").substr(-6);
	if(errorElem2 == " error") {sinErrorElem2 = $(elem2).attr("class").substr(0,$(elem2).attr("class").length-6)} else {sinErrorElem2 = $(elem2).attr("class")}

	$(elem2).removeClass();
	$(elem2).addClass(sinErrorElem2);

	if($(elem).val()!=$(elem2).val()){
		$(elem2).addClass(elem2.className+" error");
		errorMsg = "Por favor, ingresá correctamente la reconfirmación de "+$(val).attr("unmasked")
		showError(errorMsg);
		ruleServiceInvalidation=true;		
		return;
	}
}
function readOnlyValidateFieldDependRadioButton(elem0,elem1,msj){
  var nombre = document.getElementById(elem0[0].id);
  var id_opt = nombre.id+"_opt_0";
  var radio = document.getElementById(id_opt);


  var valor_float = document.getElementById(elem1[0].id);
  var float1 =$(valor_float).attr("unmasked");
  var valor_float_entero = parseInt(float1);
  var id_float = $(elem1).attr("id");
  var id_label = "label_"+id_float;
  var label = document.getElementById(id_label);
  var style = $(label).attr("style");
  var sub_style = style.substr(-4)

  if (sub_style == "red;"){
    var style_original = style.substr(0,22);
    $(label).removeAttr("style");
    $(label).attr("style",style_original);
  }

  var jq_elem1 = $(elem1);
  var estilo_elem1 = jq_elem1.attr("class");
  var estilo_con_error_elem1 = estilo_elem1.substr(-6);
  
  if (estilo_con_error_elem1 == " error") {
    var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
    jq_elem1.removeClass();
    jq_elem1.addClass(estilo_dinamico_elem1);
  }

  if (radio.checked==true){
    if (valor_float_entero < 1){
      errorMsg2 = msj + " " + " es inferior al mínimo (1)";
      ruleServiceInvalidation = true;
      showError(errorMsg2);
      jq_elem1.addClass(estilo_elem1 + " error");
      var style_nuevo = style+ " " +"color: red;"
      $(label).attr("style",style_nuevo);
      return;
      }
  }
}
function noOpacityBackgroundModal() {
	$("#modalWindow").jqm({
		onShow: function(hash) {
			hash.o.css("opacity", 0.0);
		}
	});
}
function callToCloseSesion (){
	closeSesion();
}
function validarCodigoBanco(codigo) {
	if (codigo.length != 8) { return false }
	var banco = codigo.substr(0,3)
	var digitoVerificador1 = codigo[3]
	var sucursal = codigo.substr(4,3)
	var digitoVerificador2 = codigo[7]

	var suma = banco[0] * 7 + banco[1] * 1 + banco[2] * 3 + digitoVerificador1 * 9 + sucursal[0] * 7 + sucursal[1] * 1 + sucursal[2] * 3

	var diferencia = 10 - (suma % 10)

	return diferencia == digitoVerificador2
}
function validarCuenta(cuenta) {
	if (cuenta.length != 14) { return false }
	var digitoVerificador = cuenta[13]
	var suma = cuenta[0] * 3 + cuenta[1] * 9 + cuenta[2] * 7 + cuenta[3] * 1 + cuenta[4] * 3 + cuenta[5] * 9 + cuenta[6] * 7 + cuenta[7] * 1 + cuenta[8] * 3 + cuenta[9] * 9 + cuenta[10] * 7 + cuenta[11] * 1 + cuenta[12] * 3
	var diferencia = 10 - (suma % 10)
	return diferencia == digitoVerificador
}
function validarCBU(elem){

	

	errorElem = $(elem).attr("class").substr(-6);
	if(errorElem == " error") {sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6)} else {sinErrorElem = $(elem).attr("class")}
		
	$(elem).removeClass();
	$(elem).addClass(sinErrorElem);

	var valor = $(elem).val();
	
	var codigo = valor.substr(0,8);
	var cuenta = valor.substr(8,14);

	
	if(valor!=""){
		if(valor.length<22){
			$(elem).addClass(elem.className + " error");
			ruleServiceInvalidation = true;
			errorMsg = "CBU debe ser un número de 22 dígitos.";
			showError(errorMsg)
		}
		else if ((validarCodigoBanco(codigo)) && (validarCuenta(cuenta))){
			ruleServiceInvalidation = false;        
			$(errorPanel).hide();
		}
		else{
			$(elem).addClass(elem.className + " error");
			ruleServiceInvalidation = true;
			errorMsg = "El CBU ingresado no es válido";
			showError(errorMsg);
		}
	}
}
function validarCBUValidacionFinal(elem){

    errorElem = $(elem).attr("class").substr(-6);
    if(errorElem == " error") {sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6)} else {sinErrorElem = $(elem).attr("class")}
        
    $(elem).removeClass();
    $(elem).addClass(sinErrorElem);

    var valor = $(elem).val();
    
    var codigo = valor.substr(0,8);
    var cuenta = valor.substr(8,14);

    
    
    if(valor!=""){
        if(valor.length<22){
            $(elem).addClass(elem.className + " error");
            errorMsg = "/n"+"CBU debe ser un número de 22 dígitos.";
        }
        if ((validarCodigoBanco(codigo)) && (validarCuenta(cuenta))){
        }
        else{
            $(elem).addClass(elem.className + " error");
            errorMsg = "/n"+"El CBU ingresado no es válido";
        }
    return errorMsg;
    }
    
}
function deleteNumMasc2(elem, elem2) {
	var val= elem2.val();
	var cuenta=$(elem).val();
	var aux =  cuenta.replace("-", "").replace("/", "");

	if (val !=""){
	$(elem).val(aux);
	}
}
function validarConstitucionPlazoFijo(elem,elem2,elem3,elem4,elem5){
	errorMsg = "";

	errorElem = $(elem).attr("class").substr(-6);
	if(errorElem == " error") {sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6)} else {sinErrorElem = $(elem).attr("class")}

	errorElem2 = $(elem2).attr("class").substr(-6);
	if(errorElem2 == " error") {sinErrorElem2 = $(elem2).attr("class").substr(0,$(elem2).attr("class").length-6)} else {sinErrorElem2 = $(elem2).attr("class")}

	errorElem3 = $(elem3).attr("class").substr(-6);
	if(errorElem3 == " error") {sinErrorElem3 = $(elem3).attr("class").substr(0,$(elem3).attr("class").length-6)} else {sinErrorElem3 = $(elem3).attr("class")}

	errorElem4 = $(elem4).attr("class").substr(-6);
	if(errorElem4 == " error") {sinErrorElem4 = $(elem4).attr("class").substr(0,$(elem4).attr("class").length-6)} else {sinErrorElem4 = $(elem4).attr("class")}
	    
	errorElem5 = $(elem5).attr("class").substr(-6);
	if(errorElem5 == " error") {sinErrorElem5 = $(elem5).attr("class").substr(0,$(elem5).attr("class").length-6)} else {sinErrorElem5 = $(elem5).attr("class")}

	$(elem).removeClass();
	$(elem).addClass(sinErrorElem);
	
	$(elem2).removeClass();
	$(elem2).addClass(sinErrorElem2);

	$(elem3).removeClass();
	$(elem3).addClass(sinErrorElem3);

	$(elem4).removeClass();
	$(elem4).addClass(sinErrorElem4);

	$(elem5).removeClass();
	$(elem5).addClass(sinErrorElem5);

	if(($(elem).val()=="Ninguno")||($(elem5).val()=="Ninguno")||(($(elem2).val()=="")&&($(elem3).val()==""))||(($(elem2).val()!="")&&($(elem3).val()!=""))||($(elem4).val()=="0,00")){

		if($(elem).val()=="Ninguno"){
			$(elem).addClass(elem.className + " error");
			errorMsg += "Tipo de plazo fijo es un campo obligatorio"+"\\n";
		}

		if($(elem5).val()=="Ninguno"){
			$(elem5).addClass(elem5.className + " error");
			errorMsg += "Cuenta es un campo obligatorio"+"\\n";
		}

		if(($(elem2).val()=="")&&($(elem3).val()=="")){
			$(elem2).addClass(elem2.className + " error");
			$(elem3).addClass(elem3.className + " error");
			errorMsg += "Debés completar o Plazo o Fecha de vencimiento"+"\\n";
		}

		else if(($(elem2).val()!="")&&($(elem3).val()!="")){
			$(elem2).addClass(elem2.className + " error");
			$(elem3).addClass(elem3.className + " error");
			errorMsg += "No se puede seleccionar Plazo y Fecha de vencimiento simultaneamente."+"\\n";
		}

		if($(elem4).val()=="0,00"){
			$(elem4).addClass(elem4.className + " error");
			errorMsg += "Monto inicial debe ser mayor a 0,00"+"\\n";
		}

		ruleServiceInvalidation = true;
		showError(errorMsg);
		return;
	}

	else{
		ruleServiceInvalidation = false;        
		$(errorPanel).hide();
	}
}

function completeDate(date1) {

    var fecha1= $(date1).val();


            var d1= $(date1).val().split("/");

            var fechaEval1; 

            var dia1= d1[0];

            var mes1= d1[1];

            var anio1= d1[2];

            var completo;


            if (fecha1.length==0 || mes1==undefined || anio1==undefined|| dia1==undefined|| anio1.length!=4 && dia1<1 && mes1 <1 ){
                completo=false;
                $(date1).val("");

            }else{


                    if (dia1.length == 1 && mes1.length == 1){
                        mes1= "0" + mes1;
                        dia1= "0" + dia1;

                        fechaEval1= dia1+"/"+ mes1 + "/"+anio1;

                    }

                    else if (mes1.length == 1 && dia1.length != 1){
                            mes1= "0" + mes1;
                            fechaEval1= dia1+"/"+ mes1 + "/"+anio1;
                        
                    }

                     else if(mes1.length != 1 && dia1.length == 1){
                            dia1= "0" + dia1;
                            fechaEval1= dia1+"/"+ mes1 + "/"+anio1;
                        
                    }else{
                          fechaEval1= fechaEval1= dia1+"/"+ mes1 + "/"+anio1;
                        
                    }

                    $(date1).val(fechaEval1);
                    completo=true;
                    

            }
            return completo;
}

  

  
function compareChoosenAvatar(avatar1, component) {

	var avatar = avatar1.get(0);

	var selec = avatar.lastChild;

	var comp = $(component);

	var dato = comp.attr("src");

	var valores = dato.split("/");

	var valor = valores[3];

	var idComponente = valor.substr(0, 2);

	var x = selec.getElementsByTagName("input");

	var idAvatar = $(x).attr("value");

	if (idComponente == idAvatar) {
		ruleServiceInvalidation = true;
		errorMsg = "El avatar seleccionado debe ser distinto al existente.";
		showError(errorMsg);
	}

}
function addMaskCUIT(elem){
	if ($(elem).val()!=""){
		valor = $(elem).val();
		valor2 = $(elem).val();
		valor3 = $(elem).val();
		valorFinal = $(elem).val();
		if($(elem).val().length>=2){
			pri = valor.substr(0,2);	
			valorFinal = pri+"-";
		}
		if($(elem).val().length>=9){
			seg = valor2.substr(2,8);
			valorFinal += seg+"-";
		}
		if($(elem).val().length==11){
			ter = valor3.substr(10,10);
			valorFinal += ter;
		}
		$(elem).val(valorFinal);
	}
}
function deleteNumMascCUIT(elem) {
	var cuenta=$(elem).val();
	var aux =  cuenta.replace("-","").replace("-","")
	$(elem).val(aux);
}
function cortarTexto20caracteres(elem){
	var lista = $(elem).find("tbody").find("tr");
	for (var i = 0; i < lista.size(); i++) {
		var fila = lista[i];
		var columna = $(fila).find("td")[2];
		if (columna.innerText.length>20){
			primParte = columna.innerText.substr(0,20);
			segParte = columna.innerText.substr(20);
			columna.innerText=primParte+" "+segParte;
		}
	}
}
function clickButton1(elem) {
      $(elem).click(); 
             
}



function clickOnDateField(button, valor){
    $("#"+valor).attr("onclick", "clickButton1(" + button.attr("id") + ")");
  }



function defineTextEnableDesableButtons(elem,elem2,elem3){
	coleccion = $($(elem).find("tbody").find("tr"));
	botRehabilitar = $(elem2);
	botDeshabilitar = $(elem3);
	for(i = 0; i<coleccion.length; i++){
		filaRadio = $($(coleccion[i]).find("td")[0].firstChild);
		filaEstado = $($(coleccion[i]).find("td")[2]);
		if(filaRadio.attr("checked")=="checked"){
			if(filaEstado.html()=="Deshabilitado"){
				botRehabilitar.show();
				botDeshabilitar.hide();
			}
			else if(filaEstado.html()=="Habilitado"){
				botDeshabilitar.show();
				botRehabilitar.hide();
			}
		}
	}
}
function showElementWhenSelectingCollectionV2(elem,elem2,elem3){
	$(elem).attr("onChange","defineTextEnableDesableButtons($("+elem.attr("id")+"),$("+elem2.attr("id")+"),$("+elem3.attr("id")+"))");
}
function validateRangeDate(elem){
	var bisiesto = false;
	dateField = $(elem).val();

	if(dateField != ""){
		d = dateField.substr(0,2);
	    if(d[1]=="/"){
	    	d = dateField.substr(0,1);
	    }
	    m = dateField.substr(3,2);
	    if(m[1]=="/"){
	    	m = dateField.substr(3,1);
	    }
	    y = dateField.substr(6,4);
	    if((d.length==1)||(m.length==1)){
	    	y = dateField.substr(5,4);
	    }

	    if(d.length==1){
	    	d = "0"+d;
	    }
	    if(m.length==1){
	    	m = "0"+m;
	    }
	    
		//comprobamos si el año es bisiesto
		if(y%4==0 && y%100!=100 || y%400==0){
			bisiesto = true;
		}

		//comprobamos que los datos ingresados esten en un rango valido
		if(d>0 && d<32 && m>0 && m<13 && y>1919 && y<2050){
			if(m==1 || m==3 || m==5 || m==7 || m==8 || m==10 || m==12){
				$(elem).val(d+"/"+m+"/"+y);
			}
			else{
				if(m==2 && d<30 && bisiesto){
					$(elem).val(d+"/"+m+"/"+y);
				}
				else if(m==2 && d<29 && !bisiesto){
					$(elem).val(d+"/"+m+"/"+y);
				}
				else if(m!=2 && d<31){
					$(elem).val(d+"/"+m+"/"+y);
				}
				else{
					$(elem).val("");
				}
			}
		}
		else{
			$(elem).val("");
		}
	}
}
function validarAgendaDeCuentasItau(elem,elem2,elem3){

  cuenta = $(elem).val();
  aux =  cuenta.replace("-", "").replace("/", "");
  descripcion = $(elem2).val();
  errorMsg2 = "";
   var regex = new RegExp("^[a-zA-Z0-9]+([\\._%-][A-Za-z0-9]+)*@[a-zA-Z0-9]+([\\.-][a-zA-Z0-9]+)*(\\.[a-zA-Z]{2,4})");
   var esValido=regex.test($(elem3).val());

  errorElem = $(elem).attr("class").substr(-6);
  if(errorElem == " error") {
    sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6)
  } else {
    sinErrorElem = $(elem).attr("class")}

  errorElem2 = $(elem2).attr("class").substr(-6);
  if(errorElem2 == " error") {
    sinErrorElem2 = $(elem2).attr("class").substr(0,$(elem2).attr("class").length-6)
  } else {
    sinErrorElem2 = $(elem2).attr("class")}

errorElem3 = $(elem3).attr("class").substr(-6);
  if(errorElem3 == " error") {
    sinErrorElem3 = $(elem3).attr("class").substr(0,$(elem3).attr("class").length-6)
  } else {
    sinErrorElem3 = $(elem3).attr("class")}

  $(elem).removeClass();
  $(elem).addClass(sinErrorElem);

  $(elem2).removeClass();
  $(elem2).addClass(sinErrorElem2);

  $(elem3).removeClass();
  $(elem3).addClass(sinErrorElem3);
  

  if(aux==""){
    errorMsg2 += "Cuenta es un campo obligatorio\\n";
    $(elem).addClass(elem.className + " error");
  }

  else if(aux.length!=11){
    errorMsg2 += "Cuenta debe ser un número entero de longitud 11 como máximo\\n";
    $(elem).addClass(elem.className + " error");
  }

  if(descripcion==""){
    errorMsg2 += "Descripción es un campo obligatorio\\n"; 
    $(elem2).addClass(elem2.className + " error");
  }

    if($(elem3).val() !=""&& esValido== false){
    errorMsg2 += "E-mail inválido\\n"; 
    $(elem3).addClass(elem3.className + " error");
  }
  
  if(((aux==""))||(aux.length!=11)||(descripcion==""|| $(elem3).val() !="" && esValido==false)){
    ruleServiceInvalidation = true;
    showError(errorMsg2);
    return;
  }
  else{
    ruleServiceInvalidation = false;        
    $(errorPanel).hide();
    $(elem).val(aux);
  }
}

function validateRangeDateSE(elem,elem2,elem3){
  
  dateField = $(elem).val();
  error = false;
  if(dateField != ""){
  	d = dateField.substr(0,2);
    if(d[1]=="/"){
    	d = dateField.substr(0,1);
    }
    m = dateField.substr(3,2);
    if(m[1]=="/"){
    	m = dateField.substr(3,1);
    }
    y = dateField.substr(6,4);
    if((d.length==1)||(m.length==1)){
    	y = dateField.substr(5,4);
    }

    if(d.length==1){
    	d = "0"+d;
    }
    if(m.length==1){
    	m = "0"+m;
    }

    //comprobamos si el año es bisiesto
    if(y%4==0 && y%100!=100 || y%400==0){
      bisiesto = true;
    }

    //comprobamos que los datos ingresados esten en un rango valido
    if(d>0 && d<32 && m>0 && m<13 && y>1920 && y<2050){
      if(m==1 || m==3 || m==5 || m==7 || m==8 || m==10 || m==12){
        $(elem).val(d+"/"+m+"/"+y);
      }
      else{
        if(m==2 && d<30 && bisiesto){
          $(elem).val(d+"/"+m+"/"+y);
        }
        else if(m==2 && d<29 && !bisiesto){
          $(elem).val(d+"/"+m+"/"+y);
        }
        else if(m!=2 && d<31){
          $(elem).val(d+"/"+m+"/"+y);
        }
        else{
          $(elem).val("");
          $(elem2).val("");
          $(elem3).html("");
        }
      }
    }
    else{
      $(elem).val("");
      $(elem2).val("");
      $(elem3).html("");
    }
  }
  if($(elem).val()!=""){
    validateDayAsDate(elem,elem2,elem3);
  }
}
function selectedTrue(elem) {
	var idCombo = $(elem).attr("id");
	var combo = document.getElementById(idCombo);
	var tamañoCombo = combo.length;
	var valorCombo = combo.value;
	for (x = 0; x < tamañoCombo; x++) {
		if (combo.options[x].value == valorCombo) {
			var optionTrue = combo.options[x];
			optionTrue.setAttribute("selected", true);
		}
	}
}
function disableCheck(elem){
    $(elem).prop("disabled", true);
}
function validateMinLength(elem,estilo,numMin,texto) {
	var text = $(elem);
	var valorText = text.val();
	var jq_text = $(elem);
	var estilo_text = text.attr("class");
	var estilo_con_error_text = estilo_text.substr(-6);
	
	if (estilo_con_error_text == " error") {
		var estilo_dinamico_text = estilo;
		jq_text.removeClass();
		jq_text.addClass(estilo_dinamico_text);
	}

	if (valorText.length < numMin){
		errorMsg2 = texto;
		ruleServiceInvalidation = true;
		showError(errorMsg2);
		jq_text.addClass(estilo_text+" error");
		return;
	}
}
function enableElementNoConditionPrimary(elem)
{
            $(elem).prop("disabled", false);
            $(elem).toggleClass();
            $(elem).addClass("action-button_primary");
            $(elem).prop("style").cursor = "pointer";
        
}
function maskingAmountTransfer2(elem, maxStrippedSize) {
    if (maxStrippedSize == undefined || maxStrippedSize == null) {
        maxStrippedSize = 19;
    }

    var dec = new Number(4);

    var nums = new Array();
    var cont = 0;
    var ceroALaizquierda = true;

    for (m = 0; m < $(elem).val().length && cont < maxStrippedSize; m++) {
        if ($(elem).val().charAt(m) >= "0" && $(elem).val().charAt(m) <= "9") {
            if (($(elem).val().charAt(m) != "0") || !(ceroALaizquierda)) {
                nums[cont] = $(elem).val().charAt(m);
                cont++;
                ceroALaizquierda = false;
            }
        }
    }

    var ctdd = eval(1 + dec);

    var parteEntera = "";
        parteDecimal = "";
        tres = 0;

    if ((nums.length - ctdd) < 0) {
        parteEntera = "0";
    } else {
        for (var k = nums.length - ctdd; k >= 0; k--) {
            parteEntera = nums[k] + parteEntera;
            tres++;
            if ((tres % 3) == 0) {
                if (k != 0) {
                    parteEntera = CB.automask.thousSeparator + parteEntera;
                }
            }
        }
    }

    for (var dd = dec; dd > 0; dd--) {
        if (nums.length < dd) {
            parteDecimal = parteDecimal + "0";
        } else {
            parteDecimal = parteDecimal + nums[nums.length - dd];
        }
    }

    $(elem).val(parteEntera + CB.automask.decSeparator + parteDecimal);

}
function clickDownLoadToEnable(elem0, elem1, elem2){
    localStorage.setItem("clickTerminos1","yes");
    if ((localStorage.getItem("clickTerminos1")=="yes")&&($(elem0).prop("checked"))&&($(elem1).prop("checked"))){
        $(elem2).prop("disabled", false);
        $(elem2).toggleClass();
        $(elem2).addClass("action-button_primary");
        $(elem2).prop("style").cursor = "pointer";
    }else {
        $(elem2).prop("disabled", true);
        $(elem2).toggleClass();
        $(elem2).addClass("action-button_tertiary_disabled");
        $(elem2).prop("style").cursor = "default";
    }

   

}
function selectFirstOnCollectionWhenOneData(elem){
	coleccion = $(elem);
	fila = coleccion.find("tbody");
	fila = fila.find("tr");
	check = $(fila.find("td")[0]);
	check = check.find("input");
	check.attr("checked","checked");	

}
function disableEnableTableAlign(elem0, elem1, elem2){
        var x = $(elem2);
        var a= x.find("tbody").find("tr").find("td").find("a");
        var parametro= a.attr("onclick");
    if ($(elem0).prop("checked") && $(elem1).prop("checked") ){
        x.addClass("table-align_right-buttons_btn-exportar-pdf");
        a.attr("href", "#");
    }else {
        a.removeAttr("href");
        a.removeAttr("onclick", '"'+ parametro +'"')
        x.addClass("table-align_right-buttons_btn-descargar_disabled");
    }

   

}


function clickButtonModal(elem) { 
     elem.click();  
  
}
function enableTableAlign (elem2){
        var x = $(elem2);
        var a= x.find("tbody").find("tr").find("td").find("a");
        x.addClass("table-align_right-buttons_btn-exportar-pdf");
        a.attr("href", "#");


}
function disableAlign(elem2){
        var x = $(elem2);
        var a= x.find("tbody").find("tr").find("td").find("a");
        a.removeAttr("href");
        a.removeAttr("onclick");
        x.addClass("table-align_right-buttons_btn-descargar_disabled");
    

   

}
function maskingAmountTransfer3(elem, maxStrippedSize) {
    if (maxStrippedSize == undefined || maxStrippedSize == null) {
        maxStrippedSize = 20;
    }

    var dec = new Number(5);

    var nums = new Array();
    var cont = 0;
    var ceroALaizquierda = true;

    for (m = 0; m < $(elem).val().length && cont < maxStrippedSize; m++) {
        if ($(elem).val().charAt(m) >= "0" && $(elem).val().charAt(m) <= "9") {
            if (($(elem).val().charAt(m) != "0") || !(ceroALaizquierda)) {
                nums[cont] = $(elem).val().charAt(m);
                cont++;
                ceroALaizquierda = false;
            }
        }
    }

    var ctdd = eval(1 + dec);

    var parteEntera = "";
        parteDecimal = "";
        tres = 0;

    if ((nums.length - ctdd) < 0) {
        parteEntera = "0";
    } else {
        for (var k = nums.length - ctdd; k >= 0; k--) {
            parteEntera = nums[k] + parteEntera;
            tres++;
            if ((tres % 3) == 0) {
                if (k != 0) {
                    parteEntera = CB.automask.thousSeparator + parteEntera;
                }
            }
        }
    }

    for (var dd = dec; dd > 0; dd--) {
        if (nums.length < dd) {
            parteDecimal = parteDecimal + "0";
        } else {
            parteDecimal = parteDecimal + nums[nums.length - dd];
        }
    }

    $(elem).val(parteEntera + CB.automask.decSeparator + parteDecimal);

}
function comparaFechaMenorQue(date1, date2, message) {

	errorDate1 = $(date1).attr("class").substr(-6);
	if(errorDate1 == " error"){
		sinErrorDate1 = $(date1).attr("class").substr(0,$(date1).attr("class").length-6);
	} else {
		sinErrorDate1 = $(date1).attr("class");
	}
	
	date2 = date2.toString();
	date2Str = date2.substr(6,2)+"/"+date2.substr(4,2)+"/"+date2.substr(0,4);

	$(date1).removeClass();
	$(date1).addClass(sinErrorDate1);

	if(date1.val() != ""){
		var listaReversaDate1 = $(date1).val().split("/");
		var date1Nuevo = listaReversaDate1[2]+"/"+listaReversaDate1[1]+"/"+listaReversaDate1[0];
		date2Nuevo = date2.substr(0,4)+"/"+date2.substr(4,2)+"/"+date2.substr(6,2);
		if(date1Nuevo > date2Nuevo) {
		    showError(message);
		    $(date1).addClass(date1.className+" error");
		    ruleServiceInvalidation=true;
		    return;
		}
	}
}

function compareNumbersDays(cantDias,elem,elem2,message){

	errorElem = $(elem).attr("class").substr(-6);
	if(errorElem == " error"){
		sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6);
	} else {
		sinErrorElem = $(elem).attr("class");
	}

	errorElem2 = $(elem2).attr("class").substr(-6);
	if(errorElem2 == " error"){
		sinErrorElem2 = $(elem2).attr("class").substr(0,$(elem2).attr("class").length-6);
	} else {
		sinErrorElem2 = $(elem2).attr("class");
	}

	$(elem).removeClass();
	$(elem).addClass(sinErrorElem);

	$(elem2).removeClass();
	$(elem2).addClass(sinErrorElem2);

	var aFecha1 = $(elem).val().split('/'); 
	var aFecha2 = $(elem2).val().split('/'); 
	var fFecha1 = Date.UTC(aFecha1[2],aFecha1[1]-1,aFecha1[0]); 
	var fFecha2 = Date.UTC(aFecha2[2],aFecha2[1]-1,aFecha2[0]); 
	var dif = fFecha2 - fFecha1;
	var dias = Math.floor(dif / (1000 * 60 * 60 * 24)); 
	if(dias>cantDias){
		showError(message);
	   	$(elem).addClass(elem.className+" error");
	   	$(elem2).addClass(elem2.className+" error");
    	ruleServiceInvalidation=true;
	    return;
	}
}

  function validateCollectionSelectionTitulos(elem, elem2, elem3, errorM, errorMsg, errorMsg2, radioButton, valor, valor2){
        
        var radio= $(radioButton);
        var radios = radio.find("div").find("input");
        var valor1 = valor;
        var longitud= radios.length;
        var numero= $(elem3).val();
        var errorMsg4;
        



        var jq_elem1 = $(elem3);
        var estilo_elem1 = jq_elem1.attr("class");
        var estilo_con_error_elem1 = estilo_elem1.substr(-6);
        
        //if ((elem[0]!=undefined) && (!document.getElementById(elem[0].id)== false)){

        if (estilo_con_error_elem1 == " error") {
        var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
        jq_elem1.removeClass();
        jq_elem1.addClass(estilo_dinamico_elem1);
        }

        for (var i = 0; i < longitud; i++){
        
                if (radios[i].value == valor1 && radios[i].checked == true){
                sessionStorage.removeItem("radioId");


                        var name= "encodedcollection_"+$(elem).attr("id");
                        var isOk = true;
                
                        if ($("input[name="+name+"]").is(":checked")) {
                        
                                var lista = $("input[name="+name+"]");
                                for(var j=0;j<lista.length-1;j++){
                                        if (lista[j].checked==true){
                                                sessionStorage.setItem("radioId", j);
                                        }
                                }
                        isOk=true;
                    }
                    else {
                        isOk=false;
                    }
                        if(!isOk){
                                errorMsg4= errorMsg  + "\\n";
                                 ruleServiceInvalidation=true; 
                                
                        }else{
                        if (numero == "0,00000") {
                                    errorMsg4 =$(elem3).attr("caption") + " es un campo obligatorio" + "\\n";
                                    jq_elem1.addClass(estilo_elem1 + " error");
                                    ruleServiceInvalidation=true;
                                }
                        }
                        if(errorMsg4 != undefined){
                                showError(errorMsg4);    
                        }    
                        return;


                }else if (radios[i].value == valor2 && radios[i].checked == true){
                sessionStorage.removeItem("radioId");



                        var name= "encodedcollection_"+$(elem2).attr("id");
                        var isOk = true;
                

                        if ($("input[name="+name+"]").is(":checked")) {
                                var lista = $("input[name="+name+"]");
                                for(var j=0;j<lista.length-1;j++){
                                        if (lista[j].checked==true){
                                                sessionStorage.setItem("radioId", j);
                                        }
                                }
                        isOk=true;
                    }
                    else {
                        isOk=false;
                    }
                     if(!isOk){
                                errorMsg4= errorMsg2  + "\\n";
                                 ruleServiceInvalidation=true;
                                 
                        }else{
                        if (numero == "0,00000") {
                                    errorMsg4 = $(elem3).attr("caption") + " es un campo obligatorio" + "\\n";
                                    jq_elem1.addClass(estilo_elem1 + " error");
                                    ruleServiceInvalidation=true; 
                                }
                        }
                        if(errorMsg4 != undefined){
                                showError(errorMsg4);    
                        }

                        return;


                }else if (radios[i].checked != true && radios[i+1].checked != true){
                                if (errorM=="null") {
                                        errorM="Debe seleccionar al menos un elemento de la tabla ";
                                }
                                ruleServiceInvalidation=true;   
                                showError(errorM);    
                                        return;
                }

                

        }

       

}
 
function clickCollection(elem){
        var name= "encodedcollection_"+$(elem).attr("id");
        var idRadio= sessionStorage.getItem("radioId");
        $("input[name="+name+"]")[idRadio].checked=true;
}

function validateThreeComponents (elem0, elem1, elem2, elem3) {
  var valElem0 = $(elem0).val();
  var nombre0 = $(elem0).attr("caption");
  var valElem1 = $(elem1).val();
  var nombre1 = $(elem1).attr("caption");
  var valElem2 = $(elem2).val();
  var nombre2 = $(elem2).attr("caption");
  //float-field
  var valElem3 = $(elem3).val();
  var nombre3 = $(elem3).attr("caption");
  var jq_elem1 = $(elem1);
  var jq_elem2 = $(elem2);
  var jq_elem3 = $(elem3);
  var cont =0;

  var errorMsg2="";




  var jq_elem0 = $(elem0);
  var estilo_elem0 = jq_elem0.attr("class");
  var estilo_con_error_elem0 = estilo_elem0.substr(-6);
  
  if (estilo_con_error_elem0 == " error") {
    var estilo_dinamico_elem0 = estilo_elem0.substring(0, estilo_elem0.length - 6);
    jq_elem0.removeClass();
    jq_elem0.addClass(estilo_dinamico_elem0);
  }

  var jq_elem1 = $(elem1);
  var estilo_elem1 = jq_elem1.attr("class");
  var estilo_con_error_elem1 = estilo_elem1.substr(-6);
  
  if (estilo_con_error_elem1 == " error") {
    var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
    jq_elem1.removeClass();
    jq_elem1.addClass(estilo_dinamico_elem1);
  }

  var jq_elem2 = $(elem2);
  var estilo_elem2 = jq_elem2.attr("class");
  var estilo_con_error_elem2 = estilo_elem2.substr(-6);
  
  if (estilo_con_error_elem2 == " error") {
    var estilo_dinamico_elem2 = estilo_elem2.substring(0, estilo_elem2.length - 6);
    jq_elem2.removeClass();
    jq_elem2.addClass(estilo_dinamico_elem2);
  }

  var jq_elem3 = $(elem3);
  var estilo_elem3 = jq_elem3.attr("class");
  var estilo_con_error_elem3 = estilo_elem3.substr(-6);
  
  if (estilo_con_error_elem3 == " error") {
    var estilo_dinamico_elem3 = estilo_elem3.substring(0, estilo_elem3.length - 6);
    jq_elem3.removeClass();
    jq_elem3.addClass(estilo_dinamico_elem3);
  }




  if (valElem1=="Ninguno") {
      errorMsg2 = nombre1+ " es un campo obligatorio" + "\\n";
      ruleServiceInvalidation = true;
      jq_elem1.addClass(estilo_elem1+" error");
      cont = cont+1;
  }



  if (valElem2=="Ninguno"){
      errorMsg2 = errorMsg2 + "\\n" + nombre2 + " es un campo obligatorio" + "\\n";
      ruleServiceInvalidation = true;
      jq_elem2.addClass(estilo_elem2+" error");
      cont = cont+1;

  }

  if (valElem3==""){
      errorMsg2 = errorMsg2 + "\\n" + nombre3 + " es un campo obligatorio" + "\\n";
      ruleServiceInvalidation = true;
      cont = cont+1;
      jq_elem3.addClass(estilo_elem3+" error");
    
    }

    if (valElem0 == "Ninguno"){

      errorMsg2 = errorMsg2 + "\\n" + nombre0 + " es un campo obligatorio" + "\\n";
      ruleServiceInvalidation = true;
      jq_elem0.addClass(estilo_elem0+" error");
      cont = cont+1;
    
    }
    
    if (cont !=0){
      showError(errorMsg2);
      return;
      }

}


function validateElementBonos(elem, select1, select2){
    
    var numero= $(elem).val();

    var select = $(select1).val();
    
    var selectA = $(select2).val();


    var jq_elem1 = $(elem);
    var estilo_elem1 = jq_elem1.attr("class");
    var estilo_con_error_elem1 = estilo_elem1.substr(-6);

    var jq_elem9 = $(select1);
    var estilo_elem9 = jq_elem9.attr("class");
    var estilo_con_error_elem9 = estilo_elem9.substr(-6);
    
    var jq_elem10 = $(select2);
    var estilo_elem10 = jq_elem10.attr("class");
    var estilo_con_error_elem10 = estilo_elem10.substr(-6);



    if (estilo_con_error_elem1 == " error") {
        var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
        jq_elem1.removeClass();
        jq_elem1.addClass(estilo_dinamico_elem1);
    }


       
    if (estilo_con_error_elem9 == " error") {
        var estilo_dinamico_elem9 = estilo_elem9.substring(0, estilo_elem9.length - 6);
        jq_elem9.removeClass();
        jq_elem9.addClass(estilo_dinamico_elem9);
    }

    if (estilo_con_error_elem10 == " error") {
        var estilo_dinamico_elem10 = estilo_elem10.substring(0, estilo_elem10.length - 6);
        jq_elem10.removeClass();
        jq_elem10.addClass(estilo_dinamico_elem10);
    }

   
     if (numero == "0,0000"){
       var errorMsg2="";
       ruleServiceInvalidation=true;
        errorMsg2 = $(elem).attr("caption") + " es un campo obligatorio" + "\\n";
        jq_elem1.addClass(estilo_elem1 + " error");



        if ((select == "Ninguno")) {
            jq_elem9.addClass(estilo_elem9 + " error");
            errorMsg2 = $(select1).attr("caption") + " es un campo obligatorio" + "\\n";
        }

        if ((selectA == "Ninguno")) {
            jq_elem10.addClass(estilo_elem10 + " error");
            errorMsg2 = errorMsg2 + "\\n" + $(select2).attr("caption") + " es un campo obligatorio" + "\\n";
        }

       
        showError(errorMsg2);
        return;
           
        }
       
}
function validateElementAccion(elem, select1){
    
    var numero= $(elem).val();

    var select = $(select1).val();
    
 


    var jq_elem1 = $(elem);
    var estilo_elem1 = jq_elem1.attr("class");
    var estilo_con_error_elem1 = estilo_elem1.substr(-6);

    var jq_elem9 = $(select1);
    var estilo_elem9 = jq_elem9.attr("class");
    var estilo_con_error_elem9 = estilo_elem9.substr(-6);




    if (estilo_con_error_elem1 == " error") {
        var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
        jq_elem1.removeClass();
        jq_elem1.addClass(estilo_dinamico_elem1);
    }


       
    if (estilo_con_error_elem9 == " error") {
        var estilo_dinamico_elem9 = estilo_elem9.substring(0, estilo_elem9.length - 6);
        jq_elem9.removeClass();
        jq_elem9.addClass(estilo_dinamico_elem9);
    }


   
     if (numero == "0,0000"){
       var errorMsg2="";
       ruleServiceInvalidation=true;
        errorMsg2 = $(elem).attr("caption") + " es un campo obligatorio" + "\\n";
        jq_elem1.addClass(estilo_elem1 + " error");



        if ((select == "Ninguno")) {
            jq_elem9.addClass(estilo_elem9 + " error");
            errorMsg2 = $(select1).attr("caption") + " es un campo obligatorio" + "\\n";
        }

       
        showError(errorMsg2);
        return;
           
        }
       
}
function validateRangeTime(elem,elem2){

	val = $(elem).val();
	val2 = $(elem2).val();
	if((val!="")&&(val2!="")){
		errorMsg = "";
		errorElem = $(elem).attr("class").substr(-6);
		if(errorElem == " error") {sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6)} else {sinErrorElem = $(elem).attr("class")}
		errorElem2 = $(elem2).attr("class").substr(-6);
		if(errorElem2 == " error") {sinErrorElem2 = $(elem2).attr("class").substr(0,$(elem2).attr("class").length-6)} else {sinErrorElem2 = $(elem2).attr("class")}
		$(elem).removeClass();
		$(elem).addClass(sinErrorElem);
		$(elem2).removeClass();
		$(elem2).addClass(sinErrorElem2);
		if(parseInt(val)>parseInt(val2)){
			$(elem).addClass(elem.className+" error");
			$(elem2).addClass(elem2.className+" error");
			errorMsg = "Horario llamar desde debe ser menor que horario llamar hasta.";
			ruleServiceInvalidation = true;
			showError(errorMsg);
		}
		else{
			$(elem).removeClass();
			$(elem).addClass(sinErrorElem);
			$(elem2).removeClass();
			$(elem2).addClass(sinErrorElem2);
			ruleServiceInvalidation = false;        
			$(errorPanel).hide();
		}
	}
	
}
function verifyCheckBoxSelectAll3(elem){


var tableALign = $(elem);
var chequeados=0;

var secciones=  $(tableALign).find("tbody").find("tr").find("td").find("table");

	for (var i =0; i <= secciones.length-1; i++) {

		var d=secciones[i];

		var checks= $(d).find("tbody").find("tr").find("td").find("input");

		for (var x =0; x <= checks.length-1; x++) {

			var check=checks[x];
			var input= $(check);

			if (input.is(":checked")){
				var chequeados=chequeados + 1;
			}
		}

		if (chequeados == checks.length){

			var chequeados=0;

			var s=  $(d).find("thead").find("tr").find("th").find("input");

			$(s).attr("checked",true);
		}
		else{
			var chequeados=0;
		}
		

	}

}
function disableButtonDependElement4(button, select, textField){
    var elem0 = $(textField);
    var elem0Val = elem0.val();
    var elem1= $(button);
    var select1= $(select).val();

    if (elem0Val == undefined && select1!="Ninguno"){
        $(elem1).prop("disabled", true);
            $(elem1).toggleClass();
            $(elem1).addClass("action-button_tertiary_disabled");
            $(elem1).prop("style").cursor = "default";
    }
    else{
        $(elem1).prop("disabled", false);
        $(elem1).toggleClass();
        $(elem1).addClass("action-button_tertiary");
        $(elem1).prop("style").cursor = "pointer";  
    }
}
function modifySpanInCollection (clase,coleccion,columna,texto){
	var coleccion = $(coleccion);
	var listaTr = coleccion.find("thead").find("tr");
	var listaTh = $(listaTr).find("th");
	var th = listaTh[columna];
	var strHTML = th.innerHTML;
	var arrayTexto = strHTML.split("<");
	//tengo que concatenar todo el texto para que quede bien
	var htmlFinal = arrayTexto[0]+"<span class='"+clase+"'>"+texto+"</span>";
	th.innerHTML = htmlFinal;
}
function alignSelectFieldTwoColumns (cant_columnas,elem){
	var lista = $(elem).find("option");
    for (var1=1 ; var1<lista.length ; var1++){
    	var elemento = lista[var1].innerHTML;
        var cadena_paquete="";
        var array_elementos = elemento.split(" "); 
        if (array_elementos.length>=cant_columnas){
            var cant_a_concatenar = array_elementos.length-cant_columnas;
        	var lista_concatenada = [];
        	for(var3=0;var3<=cant_a_concatenar;var3++){
        		lista_concatenada.push(array_elementos[var3]);
        	}
            for (var i = 0; i < lista_concatenada.length; i++) {
                cadena_paquete=cadena_paquete+" "+lista_concatenada[i].trim();
                cadena_paquete=cadena_paquete.trim();
                }
            if (cadena_paquete.length<=21){
                        var cant_espacio=21-(cadena_paquete.length);
                        var cont=0;
                        var espacio="";
                        while(cont<cant_espacio){
                            espacio=espacio+"&nbsp;";
                            cont++;
                        }
                        cadena_paquete=cadena_paquete+espacio;
                    }
            var lista_resta = array_elementos.splice(lista_concatenada.length);
            var cadena_final=cadena_paquete+lista_resta[0];
            lista[var1].innerHTML = cadena_final;
}
}
}
function setEvent (componente,evento,funcion){
	$(componente).attr(evento,funcion);
}
function setScrollTop(valor){
  scrollTo(0,valor);
}
function setZeroIncolum (elem){
	var coleccion = $(elem).find("tbody").find("tr");
	for (i = 0; i < coleccion.length; i++){
			var tr = $(coleccion[i]);
			var listaTd = tr.find("td");
			if ($(listaTd[6]).attr("sortvalue")=="0.00"){
				listaTd[6].innerHTML = "0,00"
			}
			if ($(listaTd[7]).attr("sortvalue")=="0.00"){
				listaTd[7].innerHTML = "0,00"
			}
	}
}
function validateCollectionSelectionCompra(elem,elem1,errorMsg){
    
    var idRadio= "encodedcollection_"+$(elem).attr("id");
    var isOk = true;
    var numero= $(elem1).val();

    var jq_elem1 = $(elem1);
    var estilo_elem1 = jq_elem1.attr("class");
    var estilo_con_error_elem1 = estilo_elem1.substr(-6);
        

    if (estilo_con_error_elem1 == " error") {
    var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
    jq_elem1.removeClass();
    jq_elem1.addClass(estilo_dinamico_elem1);
    }


    if ($("input[name="+idRadio+"]").is(":checked")) {
        isOk=true;
    }
    else {
        isOk=false;
    }
    if(!isOk){
        if (errorMsg==="null") {
            errorMsg="Debés seleccionar al menos un elemento de la tabla " + elem.attr("caption");
        }
        ruleServiceInvalidation=true;   
        showError(errorMsg);    
        return;
    }

    if (numero < "1,00000") {
        errorMsg4 = $(elem1).attr("caption") + " es un campo obligatorio" + "\\n";
        jq_elem1.addClass(estilo_elem1 + " error");
        ruleServiceInvalidation=true;
        showError(errorMsg4); 
    }
    return;
}
function noSpecialCharacters(elem) {
	$(elem).keypress(function (e) {

	if ((e.which < 48 || e.which > 57) && (e.which < 65 || e.which > 90) && (e.which < 97 || e.which > 122)) {
		return false;
   	}
	return true;
	});
}
function amountEstimated(elem,elem1,elem3,elem4Oc){
       var valElem = $(elem).attr("unmasked");
       var valElem1 =  $(elem1).val();

       var aux2 =  valElem1.replace(",", ".");

       var multiplicacion= parseFloat(String(valElem)) * parseFloat(String(aux2));
       var punto=false;
       var valor=String(multiplicacion);


       for (var i=0; i<= String(multiplicacion).length-1; i++){
        if (String(multiplicacion)[i]=="."){
             punto=true;

        }
       }

       if (punto==true){
            var aux3 = valor.replace("." , ",");
            var array1=aux3.split(",");
            var valor1= array1[0];
            var valor2= array1[1];

            if (String (valor2).length>5){
                var decimales= valor2.substr(0,5);
                var num2= valor1.toString().split("").reverse().join("").replace(/(?=\\d*\\.?)(\\d{3})/g,"$1.");
                var entero=num2.split("").reverse().join("").replace(/^[\\.]/,"");



                var resultado= "$ "+ entero+","+decimales;
                $(elem3).html(resultado);
                $(elem4Oc).val(resultado);
                $(elem4Oc).attr("value", resultado); 



            }else if(String (valor2).length<=5){
                var num2= valor1.toString().split("").reverse().join("").replace(/(?=\\d*\\.?)(\\d{3})/g,"$1.");
                var entero=num2.split("").reverse().join("").replace(/^[\\.]/,"");
                var dato= "$ "+entero+","+valor2;
                $(elem3).html(dato);
                $(elem4Oc).val(dato);
                $(elem4Oc).attr("value", dato);




            }

       }
       if (punto==false){
        var resultado= valor;
        var resultado2=String(resultado);
        $(elem3).html(resultado2);
        $(elem4Oc).val(resultado2);
        $(elem4Oc).attr("value", resultado2);
    

        }
      
}

function maximoLengthFromEntity(elem,valor){
	$(elem).attr("maxLength",valor);
	}
function disabledActionLinkInCollection(section, valor){    
    iteraciones = document.getElementById(section.attr("id")+"_repeats");
    seccion = $(document.getElementById(section.attr("id")+"_repeat0_collectionTable0"));
    var filas = seccion.find("tbody").find("tr");
    var columnas = filas.find("td");
    for (var i=0; i<=filas.length-1; i++){
        var filaActual = filas[i];
        var columna2 = $(filaActual).find("td")[1];
        var dato = $(columna2.firstChild);
        if((valor == "0")||(valor == null)){
            dato.removeAttr("href");
            dato.removeAttr("onclick");
            $(section0_repeat0_constantLabel1).html("Total");
        }
    }
}
function enableButton(elem){
	var elem = $(elem);
	elem.removeClass();
	if((elem!=null)&&(elem.attr("disabled")=="disabled")){
		elem.removeAttr("disabled");
		elem.addClass("action-button_primary");
		elem.prop("style").cursor = "pointer";
		}
	else if((elem!=null)&&(elem.attr("disabled")==undefined)){
		elem.attr("disabled","disabled");
		elem.addClass("action-button_primary");
		elem.addClass("action-button_tertiary_disabled");
		elem.prop("style").cursor = "default";
		}
	}
function noSpecialCharactersConEspacio(elem) {
  $(elem).keypress(function (e) {

  if ((e.which < 32 || e.which > 33) && (e.which < 48 || e.which > 57) && (e.which < 65 || e.which > 90) && (e.which < 97 || e.which > 122)) {
    return false;
    }
  return true;
  });
}
function validarFechaCentroDeRecibos(elem){
	var fecha = new Date;
	var anio = fecha.getFullYear().toString();
	var mes = fecha.getMonth()+1;
	mes = mes.toString();
	if(mes.length==1){mes = "0"+mes}
	var dia = fecha.getDate().toString();
	if(dia.length==1){dia = "0"+dia}
	dateField = $(elem).val();
	error = false;
	if(dateField != ""){
		diaCampo = dateField.substr(0,2);
		mesCampo = dateField.substr(3,2);
		anioCampo = dateField.substr(6,4);
		if(dia<diaCampo){
			error = true;
		}
		if(mes<mesCampo){
			error = true;
		}
		if(anio<anioCampo){
			error = true;
		}
	}
	if(error){
		$(elem).val("");
	}
}
function autocompleteCUIT(elem){
	var j = $(elem).val();
	while (j.search("-")>0)
	j = j.replace("-","");
	if (j.length>2)
	cuit=j.substring(0,2)+"-";
	else
	cuit = j;
	if (j>1&&j.length<10)
	cuit+=j.substring(2,j.length);
	if (j.length>=10)
	cuit=cuit+j.substring(2,10);
	if (j.length>=11)
	cuit=cuit+"-"+j.substring(10,11); 
	$(elem).val(cuit);
}
function replaceAllEnter(elem,elem2){
	texto=$(elem).val()
	for (i=0;i<=texto.length;i++){
		texto = texto.replace("\\n","<br>");
	}
	$(elem2).val(texto);
}
function filtrar10anios(elem){
	$(elem).datepicker({ minDate: -3650, maxDate: "+0D" });
}
function disableRowEmpty(collection){
var a = $(collection);
var filas = a.find("tbody").find("tr");
for (var i=0; i<=filas.length-1; i++){
   	var columna = $(filas[i]).find("td")[5];
    var c =columna.innerHTML;
 		if (c!="&nbsp;"){
 			$(filas[i]).addClass("hoverRowFile");
 		}
 		else{
 			$(filas[i]).removeAttr("onclick");
 		}
    } 
}
function setRestrictionsDatePicker(componentId,dFrom,dTo){
    var disabledDates = {};
    //armo fecha de hoy 
    var dt = new Date();
    var dia = String(dt.getDate());
    var mes = String(dt.getMonth()+1);
    var anio = String(dt.getFullYear());
    //valido formato
    if(dia.length == 1){
        dia = "0"+dia;
    }
    if(mes.length == 1){
        mes = "0"+mes;
    }
    var fechaHoy = anio+mes+dia;
    //fecha para dFrom
    var fechaInicial = "******01"
    //fecha para dTo
    var fechaFinal = "99991231";
    //calculo fechas a partir de dfrom y dto
    //dFrom
    if(dFrom != "null"){
        if(dFrom.indexOf("D") != -1){
        var dateFrom = new Date();
        var intDFrom = parseInt(dFrom);
        dateFrom.setDate(dateFrom.getDate()+intDFrom);
        }
        else if(dFrom.indexOf("M") != -1){
            var dateFrom = new Date();
            var intDFrom = parseInt(dFrom);
            dateFrom.setMonth(dateFrom.getMonth()+intDFrom);
        }
        else if(dFrom.indexOf("Y") != -1){
            var dateFrom = new Date();
            var intDFrom = parseInt(dFrom);
            dateFrom.setFullYear(dateFrom.getFullYear()+intDFrom);
        }
        var diaDateFrom = String(dateFrom.getDate()-1);
        var mesDateFrom = String(dateFrom.getMonth()+1);
        var anioDateFrom = String(dateFrom.getFullYear());
        //valido formato
        if(diaDateFrom.length == 1){
            diaDateFrom = "0"+diaDateFrom;
        }
        if(mesDateFrom.length == 1){
            mesDateFrom = "0"+mesDateFrom;
        }
        if(diaDateFrom!="00"){
            dateFrom = anioDateFrom+mesDateFrom+diaDateFrom;
        }else{
            var dateFromAux = anioDateFrom+"/"+mesDateFrom+"/01";
            var newDate = new Date(dateFromAux);
            newDate.setDate(newDate.getDate() + -1);
            var diaDateFromAux = String(newDate.getDate());
            var mesDateFromAux = String(newDate.getMonth()+1);
            var anioDateFromAux = String(newDate.getFullYear());
            //valido formato
            if(diaDateFromAux.length == 1){
                diaDateFromAux = "0"+diaDateFromAux;
            }
            if(mesDateFromAux.length == 1){
                mesDateFromAux = "0"+mesDateFromAux;
            }
            dateFrom = anioDateFromAux+mesDateFromAux+diaDateFromAux;
        }

        
        disabledDates[fechaInicial] = dateFrom;
    }

    if(dTo != "null"){
        if(dTo.indexOf("D") != -1){
        var dateDTo = new Date();
        var intDTo = parseInt(dTo);
        dateDTo.setDate(dateDTo.getDate()+intDTo);
        }
        else if(dTo.indexOf("M") != -1){
            var dateDTo = new Date();
            var intDTo = parseInt(dTo);
            dateDTo.setMonth(dateDTo.getMonth()+intDTo);
        }
        else if(dTo.indexOf("Y") != -1){
            var dateDTo = new Date();
            var intDTo = parseInt(dTo);
            dateDTo.setFullYear(dateDTo.getFullYear()+intDTo);
        }

        var diaDateTo = String(dateDTo.getDate()+1);
        var mesDateTo = String(dateDTo.getMonth()+1);
        var anioDateTo = String(dateDTo.getFullYear());
        //valido formato
        if(diaDateTo.length == 1){
            diaDateTo = "0"+diaDateTo;
        }
        if(mesDateTo.length == 1){
            mesDateTo = "0"+mesDateTo;
        }
        dateTo = anioDateTo+mesDateTo+diaDateTo;
        disabledDates[dateTo] = fechaFinal;
    }
    if (typeof datePickerProperties == 'undefined') {
        datePickerProperties = {};
    }
    datePickerProperties[componentId.attr("id")] = disabledDates;
}
function validateDateRangeByDays(dFrom,dTo, dateStr,initDateStr, mensaje) {
		var initDate = parseDate(initDateStr.val());
		var date = parseDate(dateStr.val());
		if(dFrom!=''){
			var startDate = new Date();
			startDate.setTime(initDate.getTime() - dFrom * 86400000);
			if (date <= startDate) {
				showError(mensaje);
				return false;
			}
		}
		 
		if(dTo!=''){
			var endDate = new Date();
			endDate.setTime(initDate.getTime() + dTo * 86400000);
			if (date >= endDate) {
				showError(mensaje);
				return false;
			}
		}
		return true;
	}
function addDate(component,days,months,years,zResult) { 
	var date="";
	if(component.val()!=""){
		 date = parseDate(component.val());  
	}else{
		date = parseDate(component.text());  
		}
	
	var result = new Date();  
	result.setFullYear(date.getFullYear()+parseInt(years), date.getMonth() + parseInt(months),date.getDate()+parseInt(days)); 
	day=result.getDate();
	day = day.toString();
	month=result.getMonth()+1;
	month = month.toString();
	year=result.getFullYear();
	if(day.length==1){
		day = "0"+day;
		}
	if(month.length==1){
		month = "0"+month;
		}
		
	$(zResult).text(day+"/"+month+"/"+year);
	$(zResult).val(day+"/"+month+"/"+year);

}

function validateFieldDependRadioButton(elem0,elem1,msj){
  var nombre = document.getElementById(elem0[0].id);
  var id_opt = nombre.id+"_opt_0";
  var radio = document.getElementById(id_opt);

  var jq_elem1 = $(elem1);
  var estilo_elem1 = jq_elem1.attr("class");
  var estilo_con_error_elem1 = estilo_elem1.substr(-6);
  
  if (estilo_con_error_elem1 == " error") {
    var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
    jq_elem1.removeClass();
    jq_elem1.addClass(estilo_dinamico_elem1);
  }

  if (radio.checked==true){
    var valor_float = document.getElementById(elem1[0].id);
    if (valor_float.value == ""){
      errorMsg2 = msj + " " + "es obligatorio";
      ruleServiceInvalidation = true;
      showError(errorMsg2);
      jq_elem1.addClass(estilo_elem1 + " error");
      return;
    }
    else {
      var valor_float_entero = parseInt(valor_float.value);
      if (valor_float_entero < 1){
      errorMsg2 = msj + " " + " es inferior al mínimo (1)";
      ruleServiceInvalidation = true;
      showError(errorMsg2);
      jq_elem1.addClass(estilo_elem1 + " error");
      return;
      }
    }
  }
}
function decodeHint(elem) {
	if (elem != null) {
		var hintHtml = $("#hint_" + elem.attr("id") + "_div").html();
		if (hintHtml != null) {
			var htmlAsText = $("<textarea/>").html(hintHtml).text();
			$("#hint_" + elem.attr("id") + "_div").html(htmlAsText);
		}
	}
}
function addCompareChoosenAvatarToClick(actualAvatar, avatarSelectionComponent, elem) {
	var onclick_previo = elem.attr("onclick");
	elem.attr("onclick",  "compareChoosenAvatar($(\"#" + avatarSelectionComponent.attr("id") + "\"), $(\"#" + actualAvatar.attr("id") + "\"));" + onclick_previo);
}
function moveoutSecondFactorErrorPanelCollection() {
	var errorPanelCollection = $("#secondFactorContainer #main_form_modal #errorPanelCollection");
	if (errorPanelCollection.length != 0) {
		if ($("#container #main_form #errorPanelCollection").length > 0) {
			$("#container #main_form #errorPanelCollection").remove();
		}
		var container = $("#container");
		var errorPanel = container.find("#errorPanel").first();
		errorPanel.after(errorPanelCollection);
		errorPanelCollection.show();
	}
}

function addDisableElementNoConditionToSecondFactorOnError(elem) {

	if (CyberBank.callbacks.secondFactor.onError == undefined) {
		CyberBank.callbacks.secondFactor.onError =  new Array();
	}
	CyberBank.callbacks.secondFactor.onError.push(function() { DisableElementNoCondition(elem) });

}
function doSecondFactorOnError() {
	if (CyberBank.callbacks.secondFactor.onError != undefined) {
		for (i = 0; i < CyberBank.callbacks.secondFactor.onError.length; i++) {
			CyberBank.callbacks.secondFactor.onError[i]();
		}
	}
}
function addMoveoutSecondFactorErrorPanelCollectionToSecondFactorOnError() {

	if (CyberBank.callbacks.secondFactor.onError == undefined) {
		CyberBank.callbacks.secondFactor.onError =  new Array();
	}
	CyberBank.callbacks.secondFactor.onError.push(function() { moveoutSecondFactorErrorPanelCollection() });

}
function showOrHideAndCleanElement(elem, elem2,elem3){
  if (elem.is(":visible")){
    $(elem2).val("");
    $(elem3).val("");
    hideElement(elem);
  }else{
    showElement(elem);
  } 
}
function changeDivAndFrontTooltip(id,valor){
  document.getElementById(id).style.width= valor;
  document.getElementById(id).style.zIndex=9999;

}
function changeDivTooltip(id,valor){
  document.getElementById(id).style.width= valor;

}
  function changeCotizaciones(tabla){
  
  var coleccion = $(tabla);
  var filas = coleccion.find("tbody").find("tr");
  var columnas = filas.find("td");
  var f=4;
  for (var i = 3; i >= 0; i--) {

      filaActual= filas[f];
      var columna = $(filaActual).find("td")[1];
      var a =$(columna).attr("sortValue");
      var b = a.substr(0,5);
      var aux =  b.replace(".", ",");
      aux="$ "+ aux;
      $(columna).html(aux);

      var columna2 = $(filaActual).find("td")[2];
      var a2 =$(columna2).attr("sortValue");
      var b2 = a2.substr(0,5);
      var aux2 =  b2.replace(".", ",");
      aux2="$ "+ aux2;
      $(columna2).html(aux2);
      f=f+1;
  }
}
 
 
function executeActionOnBlurIfNotNullAndTransicion(button,campo,event){

	var e = event;
	try{ pararPropagacionEvento(e);}catch(e){}
    setTimeout(function(){
					
		var coordenada = $(campo);
		var valor = coordenada.val();
		var buttonOculto=$(button);
		
		if (valor !=""){
			buttonOculto.trigger( "click");	
								
			try{ pararPropagacionEvento(e);}catch(e){}
								
			var botonVisble = $(document.activeElement);
								
			if ( botonVisble.is(":button")){
				botonVisble.trigger( "click");
			}
		}
	},0);
	
}

function hideErrorAndCleanErrorsInputNoInmediata(check1, check2, d1, d2, d3, d4, d5, elem, elem1, elem2, elem3, radioButton ,select1, select2, select3, valor){

  var radio= $(radioButton);

  var radios = radio.find("div").find("input");

  var longitud= radios.length;

  var numero= $(elem).val();

    var select = $(select1).val();

    var selectA = $(select2).val();
    
    var selectB = $(select3).val();
       
    var valorE3 = $(elem1).val();

    var valorE4 = $(elem2).val();
    
    var mail= $(elem3).val();

    var codigo = valorE4.substr(0,8);

    var cuenta = valorE4.substr(8,14);


    var inmediata=false;

    var arroba=false;
    ruleServiceInvalidation=false;

        for (var i=0; i<= mail.length-1; i++){
        if (mail[i]=="@"){
             arroba=true; 

        }
       }

            if (arroba==true){

             var esValido=/^\\w+([\\.]?\\w+)*@\\w+([\\.]\\w{3,4})([\\.]\\w{2})?$/.test(mail);
            }

            for (var i = 0; i < longitud; i++){
            if (radios[i].value == valor && radios[i].checked == true){
              inmediata=true;
            }
            }


    if (inmediata==true){
            
          
                var jq_elem10 = $(select2);
                var estilo_elem10 = jq_elem10.attr("class");
                var estilo_con_error_elem10 = estilo_elem10.substr(-6);

                var jq_elem1 = $(elem);
                var estilo_elem1 = jq_elem1.attr("class");
                var estilo_con_error_elem1 = estilo_elem1.substr(-6);

                var jq_elem2 = $(elem1);
                var estilo_elem2 = jq_elem2.attr("class");
                var estilo_con_error_elem2 = estilo_elem2.substr(-6);

                var jq_elem9 = $(select1);
                var estilo_elem9 = jq_elem9.attr("class");
                var estilo_con_error_elem9 = estilo_elem9.substr(-6);

                  if (selectB!=undefined){

                var jq_elem4 = $(select3);
                var estilo_elem4 = jq_elem4.attr("class");
                var estilo_con_error_elem4 = estilo_elem4.substr(-6);

                }
                var jq_elem3 = $(elem2);
                var estilo_elem3 = jq_elem3.attr("class");
                var estilo_con_error_elem3 = estilo_elem3.substr(-6);

                var jq_elem33 = $(elem3);
                var estilo_elem33 = jq_elem33.attr("class");
                var estilo_con_error_elem33 = estilo_elem33.substr(-6);

                if (d1[0]!=undefined){

                var jq_elem5 = $(d1);
                var estilo_elem5 = jq_elem5.attr("class");
                var estilo_con_error_elem5 = estilo_elem5.substr(-6);
             }
                if (d2[0]!=undefined){
                var jq_elem6 = $(d2);
                var estilo_elem6 = jq_elem6.attr("class");
                var estilo_con_error_elem6 = estilo_elem6.substr(-6);
            }
                if (d3[0]!=undefined){
                var jq_elem7 = $(d3);
                var estilo_elem7 = jq_elem7.attr("class");
                var estilo_con_error_elem7 = estilo_elem7.substr(-6);

            }
            if (d4[0]!=undefined){
                var jq_elem8 = $(d4);
                var estilo_elem8 = jq_elem8.attr("class");
                var estilo_con_error_elem8 = estilo_elem8.substr(-6);
            }
            if (d5[0]!=undefined){
                var jq_elem11 = $(d5);
                var estilo_elem11 = jq_elem11.attr("class");
                var estilo_con_error_elem11 = estilo_elem11.substr(-6);


            }

                if (estilo_con_error_elem1 == " error") {
                    var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
                    jq_elem1.removeClass();
                    jq_elem1.addClass(estilo_dinamico_elem1);
                }

                if (estilo_con_error_elem2 == " error") {
                    var estilo_dinamico_elem2 = estilo_elem2.substring(0, estilo_elem2.length - 6);
                    jq_elem2.removeClass();
                    jq_elem2.addClass(estilo_dinamico_elem2);
                }
                
                if (estilo_con_error_elem3 == " error") {
                    var estilo_dinamico_elem3 = estilo_elem3.substring(0, estilo_elem3.length - 6);
                    jq_elem3.removeClass();
                    jq_elem3.addClass(estilo_dinamico_elem3);
                }

                if (estilo_con_error_elem4 == " error") {
                    var estilo_dinamico_elem4 = estilo_elem4.substring(0, estilo_elem4.length - 6);
                    jq_elem4.removeClass();
                    jq_elem4.addClass(estilo_dinamico_elem4);
                }

                if (estilo_con_error_elem5 == " error") {
                    var estilo_dinamico_elem5 = estilo_elem5.substring(0, estilo_elem5.length - 6);
                    jq_elem5.removeClass();
                    jq_elem5.addClass(estilo_dinamico_elem5);
                }
                if (estilo_con_error_elem6 == " error") {
                    var estilo_dinamico_elem6 = estilo_elem6.substring(0, estilo_elem6.length - 6);
                    jq_elem6.removeClass();
                    jq_elem6.addClass(estilo_dinamico_elem6);
                }
                if (estilo_con_error_elem7 == " error") {
                    var estilo_dinamico_elem7 = estilo_elem7.substring(0, estilo_elem7.length - 6);
                    jq_elem7.removeClass();
                    jq_elem7.addClass(estilo_dinamico_elem7);
                }

                if (estilo_con_error_elem8 == " error") {
                    var estilo_dinamico_elem8 = estilo_elem8.substring(0, estilo_elem8.length - 6);
                    jq_elem8.removeClass();
                    jq_elem8.addClass(estilo_dinamico_elem8);
                }
                if (estilo_con_error_elem10 == " error") {
                    var estilo_dinamico_elem10 = estilo_elem10.substring(0, estilo_elem10.length - 6);
                    jq_elem10.removeClass();
                    jq_elem10.addClass(estilo_dinamico_elem10);
                }


                
                if (estilo_con_error_elem9 == " error") {
                    var estilo_dinamico_elem9 = estilo_elem9.substring(0, estilo_elem9.length - 6);
                    jq_elem9.removeClass();
                    jq_elem9.addClass(estilo_dinamico_elem9);
                }

                if (estilo_con_error_elem11 == " error") {
                    var estilo_dinamico_elem11 = estilo_elem11.substring(0, estilo_elem11.length - 6);
                    jq_elem11.removeClass();
                    jq_elem11.addClass(estilo_dinamico_elem10);
                }

                if (estilo_con_error_elem33 == " error") {
                    var estilo_dinamico_elem33 = estilo_elem33.substring(0, estilo_elem33.length - 6);
                    jq_elem33.removeClass();
                    jq_elem33.addClass(estilo_dinamico_elem3);
                }


         hideErrorPanelWrapper();

    }







}
  



function hideErrorAndCleanErrorsInputInmediata(check1, elem, elem1, elem3, radioButton, select1,select2,valor){
    
    var radio= $(radioButton);

    var numero= $(elem).val();

    var select = $(select1).val();
    
    var selectA = $(select2).val();
    
    var valorE3 = $(elem1).val();

    var mail= $(elem3).val();

    var codigo = valorE3.substr(0,8);

    var cuenta = valorE3.substr(8,14);

    var radios = radio.find("div").find("input");

    var longitud= radios.length;
    noInmediata=false;


    var esValido=/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/.test(mail);

      for (var i = 0; i < longitud; i++){
          if (radios[i].value == valor && radios[i].checked == true){
              noInmediata=true;
          }
            }

if(noInmediata==true){

    var jq_elem1 = $(elem);
    var estilo_elem1 = jq_elem1.attr("class");
    var estilo_con_error_elem1 = estilo_elem1.substr(-6);

    var jq_elem2 = $(elem1);
    var estilo_elem2 = jq_elem2.attr("class");
    var estilo_con_error_elem2 = estilo_elem2.substr(-6);

    var jq_elem9 = $(select1);
    var estilo_elem9 = jq_elem9.attr("class");
    var estilo_con_error_elem9 = estilo_elem9.substr(-6);
    
    var jq_elem10 = $(select2);
    var estilo_elem10 = jq_elem10.attr("class");
    var estilo_con_error_elem10 = estilo_elem10.substr(-6);

    var jq_elem3 = $(elem3);
    var estilo_elem3 = jq_elem3.attr("class");
    var estilo_con_error_elem3 = estilo_elem3.substr(-6);


    if (estilo_con_error_elem1 == " error") {
        var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
        jq_elem1.removeClass();
        jq_elem1.addClass(estilo_dinamico_elem1);
    }


    if (estilo_con_error_elem3 == " error") {
        var estilo_dinamico_elem3 = estilo_elem3.substring(0, estilo_elem3.length - 6);
        jq_elem3.removeClass();
        jq_elem3.addClass(estilo_dinamico_elem3);
    }

    if (estilo_con_error_elem2 == " error") {
        var estilo_dinamico_elem2 = estilo_elem2.substring(0, estilo_elem2.length - 6);
        jq_elem2.removeClass();
        jq_elem2.addClass(estilo_dinamico_elem2);
    }
    
    
    if (estilo_con_error_elem9 == " error") {
        var estilo_dinamico_elem9 = estilo_elem9.substring(0, estilo_elem9.length - 6);
        jq_elem9.removeClass();
        jq_elem9.addClass(estilo_dinamico_elem9);
    }

    if (estilo_con_error_elem10 == " error") {
        var estilo_dinamico_elem10 = estilo_elem10.substring(0, estilo_elem10.length - 6);
        jq_elem10.removeClass();
        jq_elem10.addClass(estilo_dinamico_elem10);
    }

 hideErrorPanelWrapper();

}

}






function hideErrorPanelWrapper(){
  hideErrorPanel();
  return true;
}



function esFechaInValida(date1) {
    var invalido=false;
    var bisiesto = false;
    dateField = $(date1).val();

    if(dateField != ""){
        d = dateField.substr(0,2);
        m = dateField.substr(3,2);
        y = dateField.substr(6,4);

        //comprobamos si el año es bisiesto
        if(y%4==0 && y%100!=100 || y%400==0){
            bisiesto = true;
        }

        //comprobamos que los datos ingresados esten en un rango valido
        if(d>0 && d<32 && m>0 && m<13 && y>1919 && y<2050){
            
            if(m==1 || m==3 || m==5 || m==7 || m==8 || m==10 || m==12){
                //fecha valida
            }else{
                if(m==2 && d<30 && bisiesto){
                    //fecha valida
                }else if(m==2 && d<29 && !bisiesto){
                    //fecha valida
                }else if(m!=2 && d<31){
                    //fecha valida
                }else{
                    $(date1).val("");
                    invalido=true;
                }
            }
        }else{
            $(date1).val("");
            invalido=true;
        }
    }

    return invalido;
}





function estiloSinError(elem1) {
    var jq_elem1 = $(elem1);
    var estilo_elem1 = jq_elem1.attr("class");
    var estilo_con_error_elem1 = estilo_elem1.substr(-6);


        if (estilo_con_error_elem1 == " error") {
        var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
        jq_elem1.removeClass();
        jq_elem1.addClass(estilo_dinamico_elem1);
    }

}




function recargar(){
       window.location.reload(); 
}

function disableKeyboard(check, elem) {
	if (document.getElementById(check[0].id).checked) {
		document.getElementById(elem[0].id).readOnly = true;
	}
	return false;
}
function hideErrorPanelAndTransicion(event) {

	var e = event;
	try {
		pararPropagacionEvento(e);
	} catch (ex) {
	}
	setTimeout(function() {

		hideErrorPanel();

		try {
			pararPropagacionEvento(e);
		} catch (ex) {
		}

		var botonVisble = $(document.activeElement);

		if (botonVisble.is(":button")) {
			botonVisble.trigger("click");
		}
	}, 0);

}
function disableActionButtonDependCollections(actionButton, collection1,radioButton,valor){
  var radio= $(radioButton);
  var radios = radio.find("div").find("input");
  var longitud= radios.length;

for (var i = 0; i < longitud; i++){
  if (radios[i].value == valor && radios[i].checked == true){

    if (collection1[0]==undefined){

        $(actionButton).prop("disabled", true);
        $(actionButton).toggleClass();
        $(actionButton).addClass("action-button_tertiary_disabled");
        $(actionButton).prop("style").cursor = "default";
        var idRadio1= "encodedcollection_"+$(collection1).attr("id");
      if ($("input[name="+idRadio1+"]").is(":checked")) {
        $("input[name="+idRadio1+"]").attr("checked",false);
      }


        }else{

      $(actionButton).prop("disabled", false);
            $(actionButton).toggleClass();
            $(actionButton).addClass("action-button_primary");
            $(actionButton).prop("style").cursor = "pointer";
      var idRadio1= "encodedcollection_"+$(collection1).attr("id");
      
    if ($("input[name="+idRadio1+"]").is(":checked")) {
      $("input[name="+idRadio1+"]").attr("checked",false);
      }
        }


    }
     }

}
 

function toggleEnablePropertyByEmailCheck(button,textField){
  var elem0 = $(textField);
  var elem0Val = elem0.val();
  var elem1= $(button);
 



  var esValido=/^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.([a-z]){2,4})$/.test(elem0Val);

  if (elem0Val != "" && esValido==false||elem0Val=="" ){
    $(elem1).prop("disabled", true);
          $(elem1).toggleClass();
          $(elem1).addClass("action-button_tertiary_disabled");
          $(elem1).prop("style").cursor = "default";
  }
  else{
    $(elem1).prop("disabled", false);
    $(elem1).toggleClass();
    $(elem1).addClass("action-button_primary");
    $(elem1).prop("style").cursor = "pointer";  
  }

}
  
function disableOnClickAttr(collectionTable, paginationComplete) {
    try{

            $(collectionTable).find("tbody tr").each(function (index) 
            {
                if ($(this).find('td :last-child').html() == null){

                    $(this).find('td').each(function () {
                        $(this).removeAttr("onclick");
                    })

                }
            })

    } catch (err){
        if ( window.console && window.console.log ) {
            console.error(err,"Error en servicio --disableOnClickAttr--");
        }
    }
}
function cleanFieldIfCompareIsNotEmpty(elementToClean, elementToCompare) {	
	try{
		if ($(elementToClean).is("select")){
			var tamano = document.getElementById(element[0].id).length;
			var sel = document.getElementById(element[0].id);
			for(var i = 0; i < tamano; i++){
					var t = sel.options[i].value;
					if (t == "Ninguno"){
						if (typeof elementToCompare.value != 'undefined') {
							elementToClean.val("Ninguno");
						}
						return;
					}
			}
		}else if($(elementToClean).is("input")) {
			if (typeof elementToCompare.value != 'undefined') {
				elementToClean.val("");
			}
		}
	}catch(err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --cleanField--");
		}
	}
}
function updateContextFromWidget(widgetId){
	try{
		updateWidgetContext(widgetId.attr('id'));
	}catch(err){
		if ( window.console && window.console.log ) {
			console.error(err,'Error en servicio --updateContextFromWidget--');
         }
   }
   }
function updateColectionFromContext(elem){
		
		try {
		
			if ($(elem).length<1){
				return;
			}
		
			var noLeidasGlobal=0;
			
			//veo si el elemento es una colección
			if($(elem).attr('selectionmode')){
				noLeidasGlobal = noLeidasGlobal + updateCollection(elem);	
			}
			else{
				//recorro todas las colecciones dentro del contenedor las cuales tengan el atributo 
				//"selectionmode", es algo generico para identificar una coleccion
				$(elem).find("table[selectionmode]").each(function () {
					noLeidasGlobal = noLeidasGlobal + updateCollection(this);	
				});	
			}
			
			if (noLeidasGlobal <= 0){
				noLeidasGlobal = 0;  
				$('.widget_alert_badge2').css("display","none");
			}else{
				$('.widget_alert_badge2').css("display","inline-block");
				$('.widget_alert_badge2').text(noLeidasGlobal);
			}
		
		}
		catch(err) {
			if ( window.console && window.console.log ) {
				console.error(err,'Error en servicio --updateColectionFromCookie--');
			}
		}

}

function reloadAlertsAndInitWorkflow(idMenu) {
		try{
			reloadParametrizable(false);
			
			$('#'+idMenu).click();
		}catch(err) {
			if ( window.console && window.console.log ) {
				console.error(err,'Error en servicio --reloadAlertsAndInitWorkflow--');
			}
		}
}
function reloadAlerts() {

		try{
		
			reloadParametrizable(true);

		}catch(err) {
			if ( window.console && window.console.log ) {
				console.error(err,'Error en servicio --updateCookieValue--');
			}
		}

		
}

function filterListByValue(element){
	$("select").change(function() {
		var seleccionada =this.options[this.selectedIndex].text;
		var previous = $(this).attr("title");
		if (previous != "") {
			$('select option').filter(function () { return $(this).html() == previous; }).prop("disabled",false);
		}
		if (seleccionada != "") {
			$('select option').filter(function () { return $(this).html() == seleccionada; }).attr("disabled","disabled");
		}
		$(this).attr("title",seleccionada) ;
	    });	

}
function bindDependentSelectField(elem){
  
	var dependentFields = new Array($(elem).prop("id"));
	clearField(dependentFields);
	updateDependentFields(dependentFields);
	return true;

}
function hideAllElementInSectionRepetible(elem_to_hide_id,section_id){

try { 

$("#"+section_id).find("div[id$="+elem_to_hide_id+"]").each(function(){                     

var elem = $(this);

hideElement(elem);

});

   } catch (e) {
       console.log("Rule hideAllElementInSectionRepetible Fail");
   }
}
function showOrHideElementWithFadeAndUpdateImage(elem,img,img_open,img_close){

	try { 
		if (elem.is(":visible")){
			hideElementWithFade(elem);
			img.attr("src","images/"+img_open);
		}else{
			showElementWithFade(elem);
			img.attr("src","images/"+img_close);
		} 
    } catch (e) {
        console.log("Rule showOrHideElementWithFadeAndUpdateImage Fail");
    }
}
function concatenateIdentifiers(cuitPrincipal,cuitSecundario) {
      var resp = cuitPrincipal.toString()+(cuitSecundario.toString()).slice(2,10);
      console.log(resp);
      return resp;
    }
function totalColumnaImporte(collTable, columnName, currency, domElement){
	var posColImporte = $(collTable).find(" thead th:contains('"+columnName+"')")[0].cellIndex + 1;
	var importeTotal = 0.00;

	$(collTable).find(" tbody tr td:nth-child("+ posColImporte +")").each(function(){
		importeTotal+= convert2Float($(this).text());
	});

	$(domElement).text(convert2CurrencyAR(currency, importeTotal));
}

function convert2Float(valor){
	return parseFloat(valor.replace(/[.]+/g,"").replace(/[,]+/g,".").replace(/[^0-9\.]+/g,""));
}

function convert2CurrencyAR(tipoMoneda, valor){
	var moneda = valor.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
	return tipoMoneda + moneda.replace(/[,]+/g,"C").replace(/[.]+/g,",").replace(/[C]+/g,".");
}
function validateEitherField(elem1, elem2, msg) {

	errorElem = $(elem1).attr("class").substr(-6);
	if(errorElem == " error") {sinErrorElem1 = $(elem1).attr("class").substr(0,$(elem1).attr("class").length-6)} else {sinErrorElem1 = $(elem1).attr("class")}
    
	$(elem1).removeClass();
	$(elem1).addClass(sinErrorElem1);

	var elemValue1;
	if("checkbox"==elem1.attr("type")){
		elemValue1=elem1.is(':checked');
	} else {
		elemValue1 = elem1.val();
		if (elemValue1==undefined){
			elemValue1= elem1.options[elem1.selectedIndex].value;
		}
	}
    /*
	elemValue1 = elemValue1.trim();
	$(elem1).val(elemValue1);
    */

	errorElem2 = $(elem2).attr("class").substr(-6);
	if(errorElem2 == " error") {
        sinErrorElem2 = $(elem2).attr("class").substr(0,$(elem2).attr("class").length-6)
    } else {
        sinErrorElem2 = $(elem2).attr("class")
    }

	$(elem2).removeClass();
	$(elem2).addClass(sinErrorElem2);

	var elemValue2;
	if("checkbox"==elem2.attr("type")){
		elemValue2=elem2.is(':checked');
	} else {
		elemValue2 = elem2.val();
		if (elemValue2==undefined){
			elemValue2= elem2.options[elem2.selectedIndex].value;
		}
	}
    
	var isReadOnly= elem1.prop("readonly") || elem2.prop("readonly");
    var isntValid1 = !isReadOnly && (elemValue1=="Ninguno" || elemValue1=="" || elemValue1=="false" || elemValue1==undefined || elemValue1==null);
    var isntValid2 = !isReadOnly && (elemValue2=="Ninguno" || elemValue2=="" || elemValue2=="false" || elemValue2==undefined || elemValue2==null);

	if(msg == undefined){
		msg="";
	}

	if(isntValid1 && isntValid2){
		if(isntValid1) {
            $(elem1).addClass(elem1.className+" error");
            showError(elem1.attr("caption") +  msg);
        }
        if(isntValid2) {
            $(elem2).addClass(elem2.className+" error");
    		showError(elem2.attr("caption") +  msg);
        }
		ruleServiceInvalidation=true;		
		return ;
	}
}
function formatPeriodOfTime() {
    var hoy = new Date();
    var dd = hoy.getDate();
    var mm = hoy.getMonth()+1; //hoy es 0!
    var yyyy = hoy.getFullYear();
    

    if(dd<10) {
        dd="0"+dd
    }
    if(mm<10) {
        mm="0"+mm
    }

    hoy = yyyy+"/"+mm+"/"+dd;
    var f1 = hoy;
    var aFecha1 = f1.split("/");
    var fFecha1 = Date.UTC(aFecha1[0],aFecha1[1]-1,aFecha1[2]);
    
    $( ".quantity-days" ).each(function() {
        var f2 = $(this).html();
        var aFecha2 = f2.toString().split(" ");
        aFecha2 = aFecha2[0].split("/");
        var fFecha2 = Date.UTC(aFecha2[2],aFecha2[1]-1,aFecha2[0]);
    
        var dif = fFecha2 - fFecha1;
        var dias = Math.floor(dif / (1000 * 60 * 60 * 24));
        if(dias < 0)
            dias = dias* -1;
        if(dias == 0) {
            $(this).html("Hoy");
        } else if(dias == 1) {
            $(this).html("Ayer");
        } else {
            $(this).html("Hace "+dias+ " días");
        }
    });
    
  }
function sumSelectedsColumnaImporte(collTable, columnName, currency, domElement, hiddenElement){
    posColImporte = $(collTable).find(" thead th:contains(\""+columnName+"\")")[0].cellIndex + 1;
    posColCuotas = $(collTable).find(" thead th:contains(\"Cuota\")")[0].cellIndex;
    $(collTable).find(" tbody tr td:nth-child("+ posColImporte +")").each(function(){
            var checkbox = $(this).parent().find("input[type=checkbox]");

            checkbox.click(function(){
                var importeTotal = 0.00;
                var cuota = $(this).parent().parent().children().eq(posColCuotas).text();
                cuota = cuota.substring(0,cuota.indexOf(" /"));
                var checkboxChecked = $(this).is(":checked");
                $(collTable).find(" tbody tr td:nth-child("+ posColImporte +")").each(function(){
                    var thisCheckbox = $(this).parent().find("input[type=checkbox]");
                    var thisCuota = $(this).parent().children().eq(posColCuotas).text();
                    thisCuota = thisCuota.substring(0,thisCuota.indexOf(" /"));
                    if(parseInt(thisCuota)<parseInt(cuota)){
                        $(thisCheckbox).prop('checked', true);
                    }else if(parseInt(thisCuota)>parseInt(cuota)){
                        $(thisCheckbox).prop('checked', false);
                    }
                    if(thisCheckbox.is(":checked")){
                        importeTotal+= parseFloat($(this).text().replace(/[.]+/g,"").replace(/[,]+/g,".").replace(/[^0-9\.]+/g,""));
                    }
                });
                var moneda = importeTotal.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                $(hiddenElement).attr("unmasked",importeTotal);
                $(hiddenElement).attr("value",importeTotal);
                $(domElement).text(currency +" "+ moneda.replace(/[,]+/g,"C").replace(/[.]+/g,",").replace(/[C]+/g,"."));
            });
    });

    var importeTotal = 0.00;
    $(collTable).find(" tbody tr td:nth-child("+ posColImporte +")").each(function(){
        var thisCheckbox = $(this).parent().find("input[type=checkbox]");
        if(thisCheckbox.is(":checked")){
            importeTotal+= parseFloat($(this).text().replace(/[.]+/g,"").replace(/[,]+/g,".").replace(/[^0-9\.]+/g,""));
        }
    });
    var moneda = importeTotal.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
    $(hiddenElement).attr("unmasked",importeTotal);
    $(hiddenElement).attr("value",importeTotal);
    $(domElement).text(currency +" "+ moneda.replace(/[,]+/g,"C").replace(/[.]+/g,",").replace(/[C]+/g,"."));


    
}
function genericPrintElem(elem) {
     var printContents = $(elem).parent().html();
     var originalContents = document.body.innerHTML;
     document.body.innerHTML = printContents;
     window.print();
     document.body.innerHTML = originalContents;
}
function setSelectableRowCollection(collTable){
    $(collTable).find("tbody tr td:nth-last-child(1)").each(function(){
        var aDetalle = $(this).children();
        if(aDetalle.length > 0){
            $(this).parent().css("cursor","pointer");
            $(this).parent().click(function(){
                $(aDetalle).click();
            });
            $(this).parent().hover(function() {
              $(this).addClass("selectable-row");
            },function() {
              $(this).removeClass("selectable-row");
            });
        }
    });
}
function createAndSubmitForm(p0formName, p1action, p1paramName, p1paramValue, p2paramName, p2paramValue, p3paramName, p3paramValue, p4paramName, p4paramValue, p5paramName, p5paramValue, p6paramName, p6paramValue){
	var paramValue3= $(p3paramValue).val();
	var paramValue2=$(p2paramValue).html();
    var arrNames= [p1paramName, p2paramName, p3paramName, p4paramName, p5paramName, p6paramName];
    var arrValues= [p1paramValue, paramValue2, paramValue3, p4paramValue, p5paramValue, p6paramValue];

    var container = $("#main_form").parent().get(0);
    $(container).append("<form id='" + p0formName + "' name='" + p0formName + "' method='POST' action='" + TODOPagoURL + "' target='_blank'></form>");

    for (i = 0; i < arrNames.length; i++) {
        if (arrNames[i] === undefined || arrNames[i] === null || arrNames[i] === '' || arrNames[i] === 'NaN' || arrNames[i] == 'null') continue;

        $("#" + p0formName).append("<input type='hidden' name='" + arrNames[i] + "' value= '" + arrValues[i] + "'>");
    }
    //$("#" + p0formName).append("<input type='submit' name='enviar' value='enviar fake'>");
    $("#"+p0formName).submit();
}

 
function setSelectableRowNumberCollection(collTable,columna){
    var padre = $(collTable).parent();
    $(padre).find("table tfoot tr td a").each(function(){
        $(this).click(function(){
            setSelectableRowNumberCollection($(padre).children(),columna);
        });
    });  
    //nth-child(X) con 'X' la posicion de la columna a ocultar
    $(padre).find("table tbody tr td:nth-child("+columna+")").each(function(){
        var aDetalle = $(this).children();
        if(aDetalle.length > 0){
            $(this).parent().css("cursor","pointer");
            $(this).parent().click(function(){
                $(aDetalle).click();
            });
            $(this).parent().hover(function() {
              $(this).addClass("selectable-row");
            },function() {
              $(this).removeClass("selectable-row");
            });
        }
    });
}
function enableDisableElementOnValue(elem,valor) {
    if(isNaN(valor) || valor===undefined || valor === '' || valor === 'null')
      valor = true;
        $(elem).prop("disabled", !valor);
    }
function executeActionWhenDigitsQuantityTransicion(button,campo,quantity,event){

	var e = event;
	try{ pararPropagacionEvento(e);}catch(e){}
    setTimeout(function(){
					
		var coordenada = $(campo);
		var valor = coordenada.val();
		var buttonOculto=$(button);
		
		if (valor.length == quantity){
			buttonOculto.trigger( "click");	
								
			try{ pararPropagacionEvento(e);}catch(e){}
								
			var botonVisble = $(document.activeElement);
								
			if ( botonVisble.is(":button")){
				botonVisble.trigger( "click");
			}
		}
	},0);
	
}
function concatValues(outElem,val1,val2,val3,val4,val5){
    arr = [val1,val2,val3,val4,val5];
    concatResult = "";
    for (i = 0; i < arr.length; i++) { 
        if(arr[i]===undefined || arr[i] === null || arr[i]==='' ||
            arr[i] === 'NaN' || arr[i] == 'null') continue;
        if(arr[i].substr(0,1)=="%" && arr[i].substr(-1)=="%")
          concatResult+=getElemValue(arr[i]);
        else
          concatResult+=arr[i];
    }
    $(outElem).val(concatResult);
  
    function getElemValue(elem){
      elemId = '#'+elem.substring(1,elem.length-1);
      if($(elemId).is('input'))
        return $(elemId).val();
      else
        return $(elemId).text();
    }
}
function downloadPdfHtmlElement(elem, resizeFactor){ 
  
    mostrarEnEjecucion();
    var crop = function(can, a, b,w,h) {
      var ctx = can.getContext('2d');
      var imageData = ctx.getImageData(a.x, a.y, b.x, b.y);
      var newCan = document.createElement('canvas');
      newCan.width = b.x-a.x;
      newCan.height = b.y-a.y;
      var newCtx = newCan.getContext('2d');
      newCtx.putImageData(imageData, 0, 0);
      return newCan;    
    };

    var addImageToPdf = function(canvas, pageNumber,pdfDoc, finalWidth, maxHeight){
        var croppedCan = crop(canvas, {x: 0, y: (maxHeight*pageNumber)}, {x: canvas.width, y: maxHeight*(pageNumber+1)},canvas.width, canvas.height);
                  
        //Create an image for the new canvas.
        var imgData2 = new Image();
        imgData2.src = croppedCan.toDataURL('image/jpg');
        if(pageNumber!=0){
            pdfDoc.addPage();    
        }
        
        pdfDoc.addImage(imgData2,"JPG",10,10,finalWidth,0,undefined,'FAST');
        return pdfDoc;
    };

    var uA = window.navigator.userAgent,
      isIE = /msie\s|trident\/|edge\//i.test(uA) && !!(document.uniqueID || document.documentMode || window.ActiveXObject || window.MSInputMethodContext);
    // Se modifica temporalmente el ancho del contenedor para eliminar el scroll horizontal
    var restoreWidth = $(elem).width();
    var temporalWidth = document.getElementById($(elem).attr('id')).scrollWidth;
    $(elem).width(temporalWidth+5);

    var oHeight = elem.height();
    var element = elem.clone();
    
    $(elem).width(restoreWidth);
    
    var div = $("<div>");
    $(div).css({
        top:0,
        left:0,
        position: 'fixed',
        opacity: 0
    });
    $(div).append(element);
    $("body").append(div);
    if($("#htmlCode_Comprobante").length && $("#htmlCode_Comprobante").attr('id')===$(element).attr('id'))
    $("[src='https://www.macro.com.ar/imagen/logo-macrobansud-ch.jpg']").attr("src",'images/logo-macrobansud-ch.jpg');
    $("[src='https://www.macro.com.ar/imagen/IsologotipoSSN.PNG']").attr("src",'images/logoSSN.svg').css("height","100");
      var x;
  
    html2canvas(element).then(function(canvasOriginal) {
        $(div).remove();

        var originalWidth = canvasOriginal.width;
        var originalHeight = canvasOriginal.height;
        var canvas = document.createElement("canvas");
        canvas.setAttribute('width',(originalWidth).toFixed());
        canvas.setAttribute('height',(originalHeight).toFixed());
        var ctx = canvas.getContext('2d');

        ctx.drawImage(canvasOriginal,0,0,originalWidth, originalHeight,0,0,(originalWidth).toFixed(),(originalHeight).toFixed());
        ctx.mozImageSmoothingEnabled = false;
        ctx.oImageSmoothingEnabled = false;
        ctx.webkitImageSmoothingEnabled = false;
        ctx.imageSmoothingEnabled = false;
        var doc = new jsPDF('p', 'pt','a4',true);    

        var maxWidth = 580;
        var maxHeight =  800;
        var finalWidth = originalWidth;
        var finalHeight = originalHeight;

         
        var factor=1;
 
        if(resizeFactor<=0){
            factor = originalWidth/maxWidth;
            finalHeight = originalHeight*factor;
            finalWidth = maxWidth;
        }else{
            factor = resizeFactor;
            finalHeight = originalHeight*factor;
            finalWidth = originalWidth*factor;
        }
        maxHeight=maxHeight*factor;
        console.log("resizeFactor: "+ factor);
        console.log("originalWidth: "+ originalWidth);
        console.log("maxHeight: "+ maxHeight);
        
        var camvasHeight = canvas.height
        
        var pages = camvasHeight/maxHeight;
        var i=0;
        while(i<pages){
            doc = addImageToPdf(canvas, i, doc, finalWidth, maxHeight);
            i++;
        }
  
        
        var es_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;
        if(!isIE){
            if(es_chrome){
            var viewer = false;
            for (var x = 0; x < navigator.plugins.length; x++) {
               if(navigator.plugins[x].name=="Chrome PDF Viewer"){
                      viewer = true;
                }
            }
            if(viewer==false){
               doc.save('a4_comprobante.pdf');
            }else{
                 var y = "<HTML>"
                  +"<HEAD>"
                    +"<link rel='shortcut icon' href='images/general/favicon.ico'>"
                    +"<link rel='icon' href='images/general/favicon.ico' type='image/icon'>"
                    +"<meta http-equiv='X-UA-Compatible' content='IE=EmulateIE10'/>"
                  +"</HEAD>"
                  +"<BODY>"
                    +"<iframe id='PDFplugin' style='height: 100%; width: 100%' name='plugin' id='plugin' src='"+doc.output('datauristring')+"' > </iframe>"
                  +"</BODY>"
                +"<HTML>";
              var x = window.open('./pages/descarga.html');
            
            x.document.body.onload = function() {
            setTimeout(function(){ x.document.write(y)}, 2000);}
            }
        }else{
          var y = "<HTML>"
                  +"<HEAD>"
                    +"<link rel='shortcut icon' href='images/general/favicon.ico'>"
                    +"<link rel='icon' href='images/general/favicon.ico' type='image/icon'>"
                    +"<meta http-equiv='X-UA-Compatible' content='IE=EmulateIE10'/>"
                  +"</HEAD>"
                  +"<BODY>"
                    +"<iframe id='PDFplugin' style='height: 100%; width: 100%' name='plugin' id='plugin' src='"+doc.output('datauristring')+"' > </iframe>"
                  +"</BODY>"
                +"<HTML>";
          var x = window.open('./pages/descarga.html');
        
        x.document.body.onload = function() {
        setTimeout(function(){ x.document.write(y)}, 200);}
          
        }
      }else{
          doc.save('a4_comprobante.pdf');
      }
      $.hideprogress();
    });

  }
function validateCBU(elem,msg) {

	errorElem = $(elem).attr("class").substr(-6);
	if(errorElem == " error") {
	sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6)
	} else {
	sinErrorElem = $(elem).attr("class")
	}
	$(elem).removeClass();
	$(elem).addClass(sinErrorElem);
	
var cbu = $(elem).val();
var retorno = false;
var VEC1 = new Array(7, 1, 3, 9, 7, 1, 3);
var VEC2 = new Array(3, 9, 7, 1, 3, 9, 7, 1, 3, 9, 7, 1, 3);
var valido = false;
var bloque1 = cbu.substring(0, 7);
var digitoValidador1 = cbu.substring(7, 8);
var bloque2 = cbu.substring(8, 21);
var digitoValidador2 = cbu.substring(21);
var acum = 0;
if(cbu.length != 22){
		$(elem).addClass(elem.className+" error");
		showError(elem.attr("caption") + ": " + msg);
		ruleServiceInvalidation=true;		
}
for (var i = 0; i < 7; i++) {
acum += bloque1.substring(i, i + 1) * VEC1[i];
}
var strAcum = (acum + '');
var digitoVCalculado1 = 10 - strAcum.substring(strAcum.length - 1);
valido = (digitoVCalculado1 == digitoValidador1); 
acum = 0;
for (var i = 0; i < 13; i++) {
acum += bloque2.substring(i, i + 1) * VEC2[i];
}
strAcum = (acum + '');
var digitoVCalculado2 = 10 - strAcum.substring(strAcum.length - 1);
if (digitoVCalculado2 == 10){ 
digitoVCalculado2 = 0;
}
if (digitoVCalculado2 == 1){ 
digitoVCalculado2 = 1;
}
if (valido = (digitoVCalculado2 == digitoValidador2) /*&& valido*/){ 
retorno = true;
}
else{
		$(elem).addClass(elem.className+" error");
		showError(elem.attr("caption") + ": " + msg);
		ruleServiceInvalidation=true;		
}
}
function validateMultipleMails(elem, msg) {
  function validateEmail (value) {
    var regex = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
    return (regex.test(value)) ? true : false;
  }

  function validateEmails(string) {
    //Los mails se separan por coma o punto y coma
    var result = string.replace(/\s/g, "").split(/,|;/);

    for(var i = 0;i < result.length;i++) {
      if(!validateEmail(result[i])) {
        return false;
      }
    }

    return true;
  }

	errorElem = $(elem).attr("class").substr(-6);
	if(errorElem == " error") {sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6)} else {sinErrorElem = $(elem).attr("class")}

	$(elem).removeClass();
	$(elem).addClass(sinErrorElem);

	
	var elemValue;
	if("checkbox"==elem.attr("type")){
		elemValue=elem.is(':checked') ;
	} else {
		elemValue = elem.val();
		if (elemValue==undefined){
			elemValue= elem.options[elem.selectedIndex].value;
		}
	
	}
	var isReadOnly= elem.prop("readonly")	
	var isntValid = !isReadOnly && (!validateEmails(elemValue))

	if(msg == undefined){
		msg="";
	}

	if(isntValid){
		$(elem).addClass(elem.className+" error");
		showError(elem.attr("caption") + ": " + msg);
		ruleServiceInvalidation=true;		
		return ;
	}
}
function validarCuotas(elem, msg) {

	errorElem = $(elem).attr("class").substr(-6);
	if(errorElem == " error") {sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6)} else {sinErrorElem = $(elem).attr("class")}

	$(elem).removeClass();
	$(elem).addClass(sinErrorElem);

	
	var elemValue;
	if("checkbox"==elem.attr("type")){
		elemValue=elem.is(':checked') ;
	} else {
		elemValue = elem.val();
		if (elemValue==undefined){
			elemValue= elem.options[elem.selectedIndex].value;
		}
	
	}
	var isReadOnly= elem.prop("readonly")	
	var isntValid = !isReadOnly && (elemValue=="Ninguno" || elemValue=="" || elemValue=="false" || elemValue==="$0,00" || elemValue==="$ 0,00" || elemValue==="0" || elemValue==="0.0" )

	if(msg == undefined){
		msg="";
	}

	if(isntValid){
		$(elem).addClass(elem.className+" error");
		showError(elem.attr("caption") + ": " + msg);
		ruleServiceInvalidation=true;		
		return ;
	}
}
function maskOnlyLastFourNumbers(elem){
    val = $(elem).text();
    $(elem).text("..."+val.substring(val.length-4, val.length));
}
function filterCommentary(elem) {
    try{
        var regex = /^[0-9a-zA-Z\sñÑáÁéÉíÍóÓúÚüÜ\.,;:]{0,256}$/;

        
        /*$(elem).keyup(function (e) {
                if (e.keyCode == 219 || e.keyCode == 222){
                    var texto = $(elem).val();
                    var textoNuevo = texto.replace(/['´]/gi,'');
                    $(elem).val(textoNuevo);
                }
            });
*/
        $(elem).keypress(function (e) {
                if (e.keyCode == 60 || e.keyCode == 62){
                    return false;
                }
            });

        /*$(elem).keydown(function (e) {
                if (e.keyCode == 229){
                    var texto = $(elem).val();
                    var textoNuevo = texto.replace(/[´']/gi,'');
                    $(elem).val(textoNuevo);
                }

            });*/
        
        $(elem).on('input',function(e) {
            if (e.keyCode == 60 || e.keyCode == 62){
                    return false;
                }
        });

        $(elem).bind("paste", function(e){

            var pastedData = e.originalEvent.clipboardData.getData("text");
            if ((pastedData.indexOf("<") != -1) || (pastedData.indexOf(">") != -1)){
            	return false;
            }

        });
            

    }catch (err){
        if ( window.console && window.console.log ) {
            console.error(err,"Error en servicio --filtrarComentario--");
        }

    }
}
function keepPrevSelected(elem,valor)
{
    var index = $(elem + ' option').filter(function () { return $(this).html() == valor.toString(); }).val();
    $(elem).find("option[value=" + index + "]").prop('selected',true);
}

function disabledElementThrowRadioButton(elem1,elem2,radio){
  var nombre=document.getElementById(radio[0].id);
  var id_opt1=nombre.id+"_opt_0";
  var id_opt2=nombre.id+"_opt_1";
  var radio_op1=document.getElementById(id_opt1);
  var radio_op2=document.getElementById(id_opt2);


  if(radio_op1.checked==true){
    $(elem1).prop("disabled",false);
    $(elem2).prop("disabled",true);
    clearError(null,$(elem2));
    $(elem2).val("");
    var unmasked = $(elem2).attr('unmasked');
    if (typeof unmasked !== typeof undefined && unmasked !== false) {
      $(elem2).attr("unmasked","");
    }
  }else{
    $(elem1).prop("disabled",true);
    $(elem2).prop("disabled",false);
    clearError(null,$(elem1));
    $(elem1).val("");
    var unmasked = $(elem1).attr('unmasked');
    if (typeof unmasked !== typeof undefined && unmasked !== false) {
      $(elem1).attr("unmasked","");
    }
    }

} 
function validateCBUdependRadioButton(elem,msg,radio) {

	var nombre=document.getElementById(radio[0].id);
	var id_opt1=nombre.id+"_opt_0";
	var radio_op1=document.getElementById(id_opt1);

	if(radio_op1.checked==true){

		errorElem = $(elem).attr("class").substr(-6);
		if(errorElem == " error") {
		sinErrorElem = $(elem).attr("class").substr(0,$(elem).attr("class").length-6)
		}else {
		sinErrorElem = $(elem).attr("class")
		}
		$(elem).removeClass();
		$(elem).addClass(sinErrorElem);
		
		var cbu = $(elem).val();
		var retorno = false;
		var VEC1 = new Array(7, 1, 3, 9, 7, 1, 3);
		var VEC2 = new Array(3, 9, 7, 1, 3, 9, 7, 1, 3, 9, 7, 1, 3);
		var valido = false;
		var bloque1 = cbu.substring(0, 7);
		var digitoValidador1 = cbu.substring(7, 8);
		var bloque2 = cbu.substring(8, 21);
		var digitoValidador2 = cbu.substring(21);
		var acum = 0;
		if(cbu.length != 22){
				$(elem).addClass(elem.className+" error");
				showError(elem.attr("caption") + ": " + msg);
				ruleServiceInvalidation=true;		
		}
		for (var i = 0; i < 7; i++) {
		acum += bloque1.substring(i, i + 1) * VEC1[i];
		}
		var strAcum = (acum + '');
		var digitoVCalculado1 = 10 - strAcum.substring(strAcum.length - 1);
		valido = (digitoVCalculado1 == digitoValidador1); 
		acum = 0;
		for (var i = 0; i < 13; i++) {
		acum += bloque2.substring(i, i + 1) * VEC2[i];
		}
		strAcum = (acum + '');
		var digitoVCalculado2 = 10 - strAcum.substring(strAcum.length - 1);
		if (digitoVCalculado2 == 10){ 
		digitoVCalculado2 = 0;
		}
		if (digitoVCalculado2 == 1){ 
		digitoVCalculado2 = 1;
		}
		if (valido = (digitoVCalculado2 == digitoValidador2) /*&& valido*/){ 
		retorno = true;
		}
		else{
				$(elem).addClass(elem.className+" error");
				showError(elem.attr("caption") + ": " + msg);
				ruleServiceInvalidation=true;		
		}


	}
	
}

function clickRadioToDisabledEnabledButtonForCC(elemRadios,elemBoton){
	
	var idRadio= 'encodedcollection_'+$(elemRadios).attr('id');
	if ($('input[name='+idRadio+']').is(':checked')) {
		isOk=true;
	}
	else {
		isOk=false;
		$(elemBoton).prop("disabled", true);
	} 
	if (isOk == true){
		$(elemBoton).prop("disabled", false);
	} 
}
function concatenateIdentifiersAFIP (outElem,valCuit1,valCuit2) {
    cuit1 = $(valCuit1).val();
    cuit2 = $(valCuit2).val();
    resultado = cuit1 + cuit2.substring(2,10);
    return $(outElem).val(resultado);

}
function getAmountForDomestico (codigo, outElem) {
    try
    {
        codString = String(codigo);
        valor = codString.substring( 1, codString.length);
        monto = parseFloat( valor);
        return $( outElem).val( monto);
    }
    catch(err)
    {
        if ( window.console && window.console.log ) 
        {
            console.error(err,'Error en servicio --getAmountForDomestico--');
        }
    }
}
function markAlertAsReaded(secElem){
    if($('#'+$(secElem).text()).length){
        $("#notificationQyt").html($("#notificationQyt").html()-1);
        $("#notificationCounterQty").html($("#notificationCounterQty").html()-1);
        $('#'+$(secElem).text()).parents(".notification_list_item").remove();
    }
};
function enableDisableCollectionSelection(elem,elem2){
    var idRadio = "encodedcollection_" + $(elem).attr("id");
    var isOk = true;

    if($("input[name=" + idRadio +"]").is(":checked")) {
        isOk = true;
    } else {
        isOk = false;
    }

    if(!isOk) {
        $(elem2).prop("disabled", true);
    } else {
        $(elem2).prop("disabled", false);
    }

    return;
}
function showOrHideElementIfEmpty(elem1,elem2) {

    if( $(elem1).children('option').length > 1) {
        $('#label_' + $(elem2).attr('id')).show();
        $(elem2).show();
    } else {
        $("#label_"+$(elem2).attr('id')).hide();
        $(elem2).hide();
    }
}
function closeSesionBackground(){

     	var uuID = $("#uuid").val();
   	var parameters = 'uuid='+uuID;
   	var dataToSend="";
	if (CyberBank.encryption.enable) {
		var p_temp = getRandomPassword();
		parameters = JSON.stringify(createSecureRequest(parameters, p_temp));
		dataToSend = {parameters : parameters}
	}else{
		dataToSend = parameters;
	}
   	$.ajax({
		  data: dataToSend,
		  url: "logout",
		  type: "POST",
  		  async:false,
		  success: function(data) {
			return true;
		  }
		});    

}
function isNumberInputInRadio(elem,index){
  var idRadio = $(elem).attr("id");
  var idInput = "#extraField_"+idRadio+"_opt_"+index;
  var input = $(idInput);
  input.attr("checkfloat","doCheck")
  try {
        
        var regex = /^[0-9]{0,256}$/;

        input.keypress(function(e) {
            if(((e.key == ",") || (e.keyCode == 44)) && isFinite(input.val())){
                return true;
            }
            if ( (event.keyCode == 9) || (event.keyCode == 36) || (event.key == "Home") ||
                (event.key == "End") || (event.keyCode == 35)|| (event.keyCode == 8) || (event.keyCode == 13) || 
                (event.keyCode == 17) || (event.key == "ArrowLeft") || (event.keyCode == 37) || (event.key == "ArrowRight") ||
                (event.keyCode == 39) || (event.key == "ArrowDown") || (event.keyCode == 40) || (event.key == "ArrowUp") || (event.keyCode == 38) || 
                (event.key == "Delete") || (event.keyCode == 46) ){
                    return true;
            }
        if (((event.ctrlKey) && ((event.key == "x") || (event.keyCode == 46))) || 
            ((event.ctrlKey) && ((event.key == "v") || (event.keyCode == 86))) || 
            ((event.ctrlKey) && ((event.key == "c") || (event.keyCode == 67))) || ((event.keyCode == 45) || 
            (event.key == "Insert"))) {
                    return true;
        }else {
                return regex.test(getCharacterPressed(event));
            }

        });

        input.bind("paste", function(e) {
            var pastedData = e.originalEvent.clipboardData.getData("text");
            return regex.test(pastedData);
        });

        input.on("keydown", function(e){
            if (e.keyCode == 190 || e.keyCode == 110 || e.keyCode == 188 || (e.key == ",")) {
                if (isFinite(input.val())) {
                    input.val(input.val()+',');
                } 
            }

        });
        
        input.on("keyup", function(){
            var val = input.val().replace(/[^0-9,.]+/g, '');
            input.val(val);
        });

    } catch (err) {
        if (window.console && window.console.log) {
            console.error(err, "Error en servicio --filtrarComentario--");
        }

    }
}
function filtrarComentario(elem) {
    try{
        var regex = /^[0-9a-zA-Z\sñÑáÁéÉíÍóÓúÚüÜ\.,;:]{0,256}$/;

        $(elem).keypress(function (e) {

            if ((event.keyCode == 9) || (event.keyCode == 36) || (event.key == "Home") ||
                (event.key == "End") || (event.keyCode == 35)|| (event.keyCode == 8) || (event.keyCode == 13) || 
                (event.keyCode == 17) || (event.key == "ArrowLeft") || (event.keyCode == 37) || (event.key == "ArrowRight") ||
                (event.keyCode == 39) || (event.key == "ArrowDown") || (event.keyCode == 40) || (event.key == "ArrowUp") || (event.keyCode == 38) || 
                (event.key == "Delete") || (event.keyCode == 46) ){
                    return true;
            }
            if (((event.ctrlKey) && ((event.key == "x") || (event.keyCode == 46))) || 
                ((event.ctrlKey) && ((event.key == "v") || (event.keyCode == 86))) || 
                ((event.ctrlKey) && ((event.key == "c") || (event.keyCode == 67))) || ((event.keyCode == 45) || 
                (event.key == "Insert"))) {
                    return true;
            }
            if ((e.keyCode == 42) || (e.keyCode == 43) || (e.keyCode == 45) || (e.keyCode == 47)) {
                return false;
            } else {
                return regex.test(getCharacterPressed(event));
            }

        });

        $(elem).on('input',function(e) {
            if ((event.keyCode == 9) || (event.keyCode == 36) || (event.key == "Home") ||
                (event.key == "End") || (event.keyCode == 35)|| (event.keyCode == 8) || (event.keyCode == 13) || 
                (event.keyCode == 17) || (event.key == "ArrowLeft") || (event.keyCode == 37) || (event.key == "ArrowRight") ||
                (event.keyCode == 39) || (event.key == "ArrowDown") || (event.keyCode == 40) || (event.key == "ArrowUp") || (event.keyCode == 38) || 
                (event.key == "Delete") || (event.keyCode == 46) ){
                    return true;
            }
            if (((event.ctrlKey) && ((event.key == "x") || (event.keyCode == 46))) || 
                ((event.ctrlKey) && ((event.key == "v") || (event.keyCode == 86))) || 
                ((event.ctrlKey) && ((event.key == "c") || (event.keyCode == 67))) || ((event.keyCode == 45) || 
                (event.key == "Insert"))) {
                    return true;
            }
            if ((e.keyCode == 42) || (e.keyCode == 43) || (e.keyCode == 45) || (e.keyCode == 47)) {
                return false;
            } else {
                return regex.test(getCharacterPressed(event));
            }

        });

        $(elem).bind("paste", function(e){

            var pastedData = e.originalEvent.clipboardData.getData("text");
            return regex.test(pastedData);

        });

    }catch (err){
        if ( window.console && window.console.log ) {
            console.error(err,"Error en servicio --filtrarComentario--");
        }

    }
}
function isNumberInTextField(elem) {
    try {
        
        var regex = /^[0-9]{0,256}$/;

        $(elem).keypress(function(e) {
            if ((event.keyCode == 9) || (event.keyCode == 36) || (event.key == "Home") ||
                (event.key == "End") || (event.keyCode == 35)|| (event.keyCode == 8) || (event.keyCode == 13) || 
                (event.keyCode == 17) || (event.key == "ArrowLeft") || (event.keyCode == 37) || (event.key == "ArrowRight") ||
                (event.keyCode == 39) || (event.key == "ArrowDown") || (event.keyCode == 40) || (event.key == "ArrowUp") || (event.keyCode == 38) || 
                (event.key == "Delete") || (event.keyCode == 46) ){
                    return true;
            }
            if (((event.ctrlKey) && ((event.key == "x") || (event.keyCode == 46))) || 
                ((event.ctrlKey) && ((event.key == "v") || (event.keyCode == 86))) || 
                ((event.ctrlKey) && ((event.key == "c") || (event.keyCode == 67))) || ((event.keyCode == 45) || 
                (event.key == "Insert"))) {
                    return true;
            } else {
                return regex.test(getCharacterPressed(event));
            }

        });

        $(elem).on("keyup", function(){
            var val = $(elem).val().replace(/[^0-9.]+/g, '');
            $(elem).val(val);
        });

        $(elem).bind("paste", function(e) {
            var pastedData = e.originalEvent.clipboardData.getData("text");
            return regex.test(pastedData);
        });

    } catch (err) {
        if (window.console && window.console.log) {
            console.error(err, "Error en servicio --filtrarComentario--");
        }

    }

}
function filtrarMail(elem) {
    try{
        var regex = /^[0-9a-zA-Z\sñÑáÁéÉíÍóÓúÚüÜ\.]{0,256}$/;

        $(elem).keypress(function (e) {
            if((getCharacterPressed(event) == "@") || (getCharacterPressed(event) == "_") || (getCharacterPressed(event) == "-") || (getCharacterPressed(event) == ".") || (getCharacterPressed(event) == ",") || (e.keyCode == 45) || (e.keyCode == 44) || (e.keyCode == 46) || (e.keyCode == 64) || (e.keyCode == 95)){
                return true;
            }
            if ( (event.keyCode == 9) || (event.keyCode == 36) || (event.key == "Home") ||
                (event.key == "End") || (event.keyCode == 35)|| (event.keyCode == 8) || (event.keyCode == 13) || 
                (event.keyCode == 17) || (event.key == "ArrowLeft") || (event.keyCode == 37) || (event.key == "ArrowRight") ||
                (event.keyCode == 39) || (event.key == "ArrowDown") || (event.keyCode == 40) || (event.key == "ArrowUp") || (event.keyCode == 38) || 
                (event.key == "Delete") || (event.keyCode == 46) ){
                    return true;
            }
            if (((event.ctrlKey) && ((event.key == "x") || (event.keyCode == 46))) || 
                ((event.ctrlKey) && ((event.key == "v") || (event.keyCode == 86))) || 
                ((event.ctrlKey) && ((event.key == "c") || (event.keyCode == 67))) || ((event.keyCode == 45) || 
                (event.key == "Insert"))) {
                return true;
            }
            if ((e.keyCode == 42) || (e.keyCode == 43) || (e.keyCode == 45) || (e.keyCode == 47)) {
                return false;
            } else {
                return regex.test(getCharacterPressed(event));
            }

        });

        $(elem).on('input',function(e) {
            if((getCharacterPressed(event) == "@") || (getCharacterPressed(event) == "_") || (getCharacterPressed(event) == "-") || (getCharacterPressed(event) == ".") || (getCharacterPressed(event) == ",") || (e.keyCode == 45) || (e.keyCode == 44) || (e.keyCode == 46) || (e.keyCode == 64) || (e.keyCode == 95)){
                return true;
            }
            if ( (event.keyCode == 9) || (event.keyCode == 36) || (event.key == "Home") ||
                (event.key == "End") || (event.keyCode == 35)|| (event.keyCode == 8) || (event.keyCode == 13) || 
                (event.keyCode == 17) || (event.key == "ArrowLeft") || (event.keyCode == 37) || (event.key == "ArrowRight") ||
                (event.keyCode == 39) || (event.key == "ArrowDown") || (event.keyCode == 40) || (event.key == "ArrowUp") || (event.keyCode == 38) || 
                (event.key == "Delete") || (event.keyCode == 46) ){
                    return true;
            }
            if (((event.ctrlKey) && ((event.key == "x") || (event.keyCode == 46))) || 
                ((event.ctrlKey) && ((event.key == "v") || (event.keyCode == 86))) || 
                ((event.ctrlKey) && ((event.key == "c") || (event.keyCode == 67))) || ((event.keyCode == 45) || 
                (event.key == "Insert"))) {
                return true;
            }
            if ((e.keyCode == 42) || (e.keyCode == 43) || (e.keyCode == 45) || (e.keyCode == 47)) {
                return false;
            } else {
                return regex.test(getCharacterPressed(event));
            }

        });

        $(elem).bind("paste", function(e){

            var pastedData = e.originalEvent.clipboardData.getData("text");
            return regex.test(pastedData);

        });

        $(elem).on("keyup", function(){
            var val = $(elem).val().replace(/[^0-9a-zA-Z@_.\-.]+/g, '');
            $(elem).val(val);
        });

    }catch (err){
        if ( window.console && window.console.log ) {
            console.error(err,"Error en servicio --filtrarComentario--");
        }

    }
}

function filtrarMailMultiple(elem) {
	try{
		var regex = /^[0-9a-zA-Z\sñÑáÁéÉíÍóÓúÚüÜ\.,]{0,256}$/;

		$(elem).keypress(function (e) {

			if((getCharacterPressed(event) == "@") || (getCharacterPressed(event) == "_") || (getCharacterPressed(event) == "-") || (getCharacterPressed(event) == ".") || (getCharacterPressed(event) == ",") || (e.keyCode == 45) || (e.keyCode == 44) || (e.keyCode == 46) || (e.keyCode == 64) || (e.keyCode == 95)){
                return true;
            }
            if ( (event.keyCode == 9) || (event.keyCode == 36) || (event.key == "Home") ||
                (event.key == "End") || (event.keyCode == 35)|| (event.keyCode == 8) || (event.keyCode == 13) || 
                (event.keyCode == 17) || (event.key == "ArrowLeft") || (event.keyCode == 37) || (event.key == "ArrowRight") ||
                (event.keyCode == 39) || (event.key == "ArrowDown") || (event.keyCode == 40) || (event.key == "ArrowUp") || (event.keyCode == 38) || 
                (event.key == "Delete") || (event.keyCode == 46) ){
                    return true;
            }
            if (((event.ctrlKey) && ((event.key == "x") || (event.keyCode == 46))) || 
                ((event.ctrlKey) && ((event.key == "v") || (event.keyCode == 86))) || 
                ((event.ctrlKey) && ((event.key == "c") || (event.keyCode == 67))) || ((event.keyCode == 45) || 
                (event.key == "Insert"))) {
                return true;
            }
            if ((e.keyCode == 42) || (e.keyCode == 43) || (e.keyCode == 45) || (e.keyCode == 47)) {
                return false;
            } else {
                return regex.test(getCharacterPressed(event));
            }

		});

		$(elem).on('input',function(e) {
            if((getCharacterPressed(event) == "@") || (getCharacterPressed(event) == "_") || (getCharacterPressed(event) == "-") || (getCharacterPressed(event) == ".") || (getCharacterPressed(event) == ",") || (e.keyCode == 45) || (e.keyCode == 44) || (e.keyCode == 46) || (e.keyCode == 64) || (e.keyCode == 95)){
                return true;
            }
            if ( (event.keyCode == 9) || (event.keyCode == 36) || (event.key == "Home") ||
                (event.key == "End") || (event.keyCode == 35)|| (event.keyCode == 8) || (event.keyCode == 13) || 
                (event.keyCode == 17) || (event.key == "ArrowLeft") || (event.keyCode == 37) || (event.key == "ArrowRight") ||
                (event.keyCode == 39) || (event.key == "ArrowDown") || (event.keyCode == 40) || (event.key == "ArrowUp") || (event.keyCode == 38) || 
                (event.key == "Delete") || (event.keyCode == 46) ){
                    return true;
            }
            if (((event.ctrlKey) && ((event.key == "x") || (event.keyCode == 46))) || 
                ((event.ctrlKey) && ((event.key == "v") || (event.keyCode == 86))) || 
                ((event.ctrlKey) && ((event.key == "c") || (event.keyCode == 67))) || ((event.keyCode == 45) || 
                (event.key == "Insert"))) {
                return true;
            }
            if ((e.keyCode == 42) || (e.keyCode == 43) || (e.keyCode == 45) || (e.keyCode == 47)) {
                return false;
            } else {
                return regex.test(getCharacterPressed(event));
            }

        });

		$(elem).bind("paste", function(e){

			var pastedData = e.originalEvent.clipboardData.getData("text");
			return regex.test(pastedData);

		});

        $(elem).on("keyup", function(){
            var val = $(elem).val().replace(/[^0-9a-zA-Z@_,.\-.]+/g, '');

	        var start = elem[0].selectionStart,
	        	end = elem[0].selectionEnd;
	        var dif =  $(elem).val().length - val.length;
	    	$(elem).val(val);
	    	elem[0].setSelectionRange(start-dif,end-dif);
        });

	}catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --filtrarComentario--");
		}

	}
}
function clearSelectedInRadioCollection(elem) {
    $(elem).find('input:radio').prop('checked',false);
}
function blankTabSelectedHidden(){
    $('#tab').val('');
}
function isFloatWithinMaxRange(elem,maxVal) {
    $(elem).bind('paste', function () {
        var self = this;
        setTimeout(function () {
            if (!/^\d*(\.\d{1,2})+$/.test($(self).val())) $(self).val('');
        }, 0);
    });
    
    $(elem).keypress(function (e) {
        var character = String.fromCharCode(e.keyCode)
        var newValue = this.value + character;
        if (isNaN(newValue) || hasDecimalPlace(newValue, 3) || newValue > parseFloat(maxVal)) {
            e.preventDefault();
            return false;
        }
    });
    
    function hasDecimalPlace(value, x) {
        var pointIndex = value.indexOf('.');
        return  pointIndex >= 0 && pointIndex < value.length - x;
    }

}
function clickButtonDependInput(elem,elem1) {
	if ($(elem1).val() != ""){
		$(elem).click(); 
	}
}
function validateKeyChange(apellido,claveActual,claveNueva,dni,elem,fecha,nombre,nombreusuario,reingresoClaveNueva,setInvalidation){
  errorMsg = "";
  ruleServiceInvalidation = false;
  var caption1 = $(claveNueva).attr("caption"); 
  var valorclaveActual = $(claveNueva).val();
  var caption2 = $(claveNueva).attr("caption"); 
  var valorclave = $(claveActual).val();
  var caption3 = $(claveActual).attr("caption");  
  var ValorReingresoClaveNueva = $(reingresoClaveNueva).val();
  var apellido = $(apellido).text();
  var nombre = $(nombre).text();
  var nombreusuario = $(nombreusuario).text();
  var fecha = $(fecha).text();
  var dni = $(dni).text();


  errorClaveNueva = $(claveNueva).attr("class").substr(-6);
    if (errorClaveNueva == " error") {
      sinErrorClaveNueva = $(claveNueva).attr("class").substr(0, $(claveNueva).attr("class").length - 6);
    } else {
      sinErrorClaveNueva = $(claveNueva).attr("class");
    }

    errorReingresoClaveNueva = $(reingresoClaveNueva).attr("class").substr(-6);
    if (errorReingresoClaveNueva == " error") {
      sinErrorReingresoClaveNueva = $(reingresoClaveNueva).attr("class").substr(0, $(reingresoClaveNueva).attr("class").length - 6);
    } else {
      sinErrorReingresoClaveNueva = $(reingresoClaveNueva).attr("class");
    }

    errorClaveActual = $(claveActual).attr("class").substr(-6);
    if (errorClaveActual == " error") {
      sinErrorClaveActual = $(claveActual).attr("class").substr(0, $(claveActual).attr("class").length - 6);
    } else {
      sinErrorClaveActual = $(claveActual).attr("class");
    }

    //asigno clase por default
    $(claveNueva).removeClass();
    $(claveNueva).addClass(sinErrorClaveNueva);
    $(reingresoClaveNueva).removeClass();
    $(reingresoClaveNueva).addClass(sinErrorReingresoClaveNueva);
    $(claveActual).removeClass();
    $(claveActual).addClass(sinErrorClaveActual);

    //validacion clave nueva tiene que ser diferente a clave actual
      if((($(claveActual).val() != "") && ($(claveNueva).val() != "")) && ($(claveActual).val() == $(claveNueva).val())){
        errorMsg += "La clave ingresada no puede ser igual a la clave actual" + "\n";
        ruleServiceInvalidation = true;
        $(claveNueva).addClass($(claveNueva).attr("class") + " error");
        $(claveActual).addClass($(claveActual).attr("class") + " error");
      }


        if( $(claveActual).val().length ==0){
      errorMsg += $(claveActual).attr("caption") +" "+"es un campo obligatorio" + "\n";
      ruleServiceInvalidation = true;
      $(claveActual).addClass($(claveActual).attr("class") + " error");
  }

      if(elem[0]!==claveActual[0] && claveNueva.val().length ==0){
      errorMsg += $(claveNueva).attr("caption") +" "+"es un campo obligatorio" + "\n";
      ruleServiceInvalidation = true;
      $(claveNueva).addClass($(claveNueva).attr("class") + " error");
  }

      if(elem[0]!==claveActual[0] && elem[0]!==claveNueva[0] && $(reingresoClaveNueva).val().length ==0){
      errorMsg += $(reingresoClaveNueva).attr("caption") +" "+"es un campo obligatorio" + "\n";
      ruleServiceInvalidation = true;
      $(reingresoClaveNueva).addClass($(reingresoClaveNueva).attr("class")  + " error");
  }


    //valida que la clave ingresada tenga de 8 a 16 caracteres
    if(!new RegExp(/^[\w?\W?]{8,16}$/).test(claveNueva.val()) && claveNueva.val().length !=0){
    errorMsg += "Nueva clave debe tener entre 8 y 16 caracteres" + "\n";
      ruleServiceInvalidation = true;
      $(claveNueva).addClass($(claveNueva).attr("class") + " error");
  }

    //validacion clave nueva tiene que ser igual al reingreso
    if((($(reingresoClaveNueva).val() != "") && ($(claveNueva).val() != "")) && ($(reingresoClaveNueva).val() != $(claveNueva).val())){
      errorMsg += "El reingreso de la nueva clave debe ser igual a la nueva clave" + "\n";
      ruleServiceInvalidation = true;
      $(claveNueva).addClass($(claveNueva).attr("class")  + " error");
      $(reingresoClaveNueva).addClass($(reingresoClaveNueva).attr("class")  + " error");
    }

    //validacion si contiene nombre o apellido
    var nombres = (nombre.toLowerCase() + " " + apellido.toLowerCase()).split(" ");
  var valorclaveActualLower = valorclaveActual.toLowerCase();
    for (name in nombres){
      if((nombres[name].length > 3) && ((valorclaveActualLower.indexOf(nombres[name])) >= 0)){
        errorMsg += "La clave ingresada no debe contener tu Nombre o Apellido" + "\n";
          ruleServiceInvalidation = true;
          $(claveNueva).addClass($(claveNueva).attr("class")  + " error");
      }
    }

  //vaidacion que la clave no contenga el dni
  if((dni != "") && (valorclaveActual.search(dni) >= 0)){
    errorMsg += "La clave ingresada no debe contener datos personales" + "\n";
      ruleServiceInvalidation = true;
      $(claveNueva).addClass($(claveNueva).attr("class")+ " error");
  }
    //validacion 3 numeros consecutivos descendentes o ascendentes
  if(new RegExp(/012{1,}|123{1,}|234{1,}|345{1,}|456{1,}|567{1,}|678{1,}|789{1,}|987{1,}|876{1,}|765{1,}|654{1,}|543{1,}|432{1,}|321{1,}/).test(valorclaveActual)){
      errorMsg += "La clave ingresada no debe poseer 3 o más números consecutivos ascendentes o descendentes" + "\n";
      ruleServiceInvalidation = true;
      $(claveNueva).addClass($(claveNueva).attr("class") + " error");
  }
  //validacion no debe poseer 3 o más caracteres repetidos consecutivos
  if(new RegExp(/0{3,}|1{3,}|2{3,}|3{3,}|4{3,}|3{3,}|6{3,}|7{3,}|8{3,}|9{3,}|A{3,}|B{3,}|C{3,}|D{3,}|E{3,}|F{3,}|G{3,}|H{3,}|I{3,}|J{3,}|K{3,}|L{3,}|M{3,}|N{3,}|O{3,}|P{3,}|Q{3,}|R{3,}|S{3,}|T{3,}|U{3,}|V{3,}|W{3,}|X{3,}|Y{3,}|Z{3,}|a{3,}|b{3,}|c{3,}|d{3,}|e{3,}|f{3,}|g{3,}|h{3,}|i{3,}|j{3,}|k{3,}|l{3,}|m{3,}|n{3,}|o{3,}|p{3,}|q{3,}|r{3,}|s{3,}|t{3,}|u{3,}|v{3,}|w{3,}|x{3,}|y{3,}|z{3,}|!{3,}|"{3,}|#{3,}|\${3,}|%{3,}|\&{3,}|\({3,}|\){3,}|\*{3,}|\+{3,}|,{3,}|-{3,}|\.{3,}|\/{3,}|:{3,}|;{3,}|<{3,}|={3,}|>{3,}|\?{3,}|@{3,}|\{{3,}|\|{3,}|\}{3,}|~{3,}|\[{3,}|\]{3,}|\^{3,}|\_{3,}|\'{3,}|`{3,}/).test(valorclaveActual)){
    errorMsg += "La clave ingresada no debe poseer 3 o más caracteres repetidos consecutivos" + "\n";
      ruleServiceInvalidation = true;
      $(claveNueva).addClass($(claveNueva).attr("class") + " error");
  }
  //validacion al menos un número y una letra
  if((valorclaveActual != "") && !(new RegExp(/^(?=.*[0-9])(?=.*[a-zA-Z ñÑ])([\S]+)$/).test(valorclaveActual))){
    errorMsg += "La clave debe tener al menos un número y una letra" + "\n";
      ruleServiceInvalidation = true;
      $(claveNueva).addClass($(claveNueva).attr("class") + " error");
  }
  //valida que no contenga el usuario
  if((nombreusuario != "") && (valorclaveActual.search(nombreusuario) >= 0)){
      errorMsg += "La clave ingresada no debe contener el usuario" + "\n";
      ruleServiceInvalidation = true;
      $(claveNueva).addClass($(claveNueva).attr("class") + " error");
    }
    //validacion datos personales
    var Exp = new RegExp(/^(\d{1,2})\/(\d{1,2})\/(\d{4})$/); // fecha dd/mm/yyyy
  if(valorclaveActual != "" && fecha != "" && Exp.test(fecha)){
    var dd = fecha.split('/')[0];
    var mm = fecha.split('/')[1];
    var aaaa = fecha.split('/')[2];
    var aa = fecha.split('/')[2].substring(2,4);

    if (valorclaveActual.search(aaaa+mm+dd) >= 0 ||
      valorclaveActual.search(aaaa+dd+mm) >= 0 ||
      valorclaveActual.search(dd+mm+aa) >= 0 ||
      valorclaveActual.search(dd+aa+mm) >= 0 ||
      valorclaveActual.search(mm+dd+aa) >= 0 ||
      valorclaveActual.search(mm+aa+dd) >= 0 ||
      valorclaveActual.search(aa+dd+mm) >= 0 ||
      valorclaveActual.search(aa+mm+dd) >= 0 ||
      valorclaveActual.search(dd+mm+aaaa) >= 0 ||
      valorclaveActual.search(dd+aaaa+mm) >= 0 ||
      valorclaveActual.search(mm+dd+aaaa) >= 0 ||
      valorclaveActual.search(mm+aaaa+dd) >= 0){
        errorMsg += "La clave ingresada no debe contener datos personales" + "\n";
          ruleServiceInvalidation = true;
          $(claveNueva).addClass($(claveNueva).attr("class") + " error");
    }
  } 

  if (ruleServiceInvalidation) {
      showError(errorMsg);
    }else{
      ruleServiceInvalidation = false;
      $(claveNueva).removeClass();
      $(claveNueva).addClass(sinErrorClaveNueva);
      $(claveActual).removeClass();
      $(claveActual).addClass(sinErrorClaveActual);
      $(reingresoClaveNueva).removeClass();
      $(reingresoClaveNueva).addClass(sinErrorReingresoClaveNueva);
      $(errorPanel).hide();
  }
  if(setInvalidation != undefined && setInvalidation != null  && setInvalidation == 'false'){
      ruleServiceInvalidation = false;
  }
}


function disabledCurrentAvatar(avatar1, component) {
var actual= $(avatar1);
var a=actual.attr("src");
var imagenAct=a.substr(2,a.length);
var partes1=imagenAct.split("/");
var lon1=partes1.length;
var nombreImg1=partes1[lon1-1];
var partesNombre1=nombreImg1.split(".");
var descripcion1=partesNombre1[0];
$(avatar1).attr("alt", descripcion1);
var grilla= $(component).find("div.avatarList").find("img");

for (var i = grilla.length - 1; i >= 0; i--) {
	var ruta=$(grilla[i]).attr("src");
	var partes=ruta.split("/");
	var lon=partes.length;
	var nombreImg=partes[lon-1];
	var partesNombre=nombreImg.split(".");
	var descripcion=partesNombre[0];
	$(grilla[i]).attr("alt",descripcion);
  if($(grilla[i]).attr("src")==imagenAct){;
  	setTabIndex($(grilla[i]),"-1");
    $(grilla[i]).prop("onclick",false);
    $(grilla[i]).css("cursor", "default");
    $(grilla[i]).css("transform", "inherit");
    $(grilla[i]).css("box-shadow","inherit");
    $(grilla[i]).css("opacity", "0.5");
  }
};

}

 
function avatarRequired(avatar1, component){
   var avatarSelected = $(component).find("div.actualAvatar").find("img");
  if (avatarSelected.attr("src")=="images/avatar/default.png"){
    ruleServiceInvalidation = true;
    errorMsg = "Es obligatorio seleccionar un avatar.";
    showError(errorMsg);
  }
}
 

function addAvatarRequiredToClick(actualAvatar,avatarSelectionComponent,elem,elemMsg) {
  var onclick_previo = elem.attr("onclick");
  $(elemMsg).hide();
  elem.attr("onclick",  "avatarRequired($(\"#" + actualAvatar.attr("id") + "\"), $(\"#" + avatarSelectionComponent.attr("id") + "\"), $(\"#" + elemMsg.attr("id") + "\"));" + onclick_previo);
}

 
function noSpaceCharacter(elem) {
  
  $(elem).keypress(function (e) {
  
    if (e.which == 32|| e.keyCode==38){
      return false;
    
    }

    });
}
function filterDateTo(elem){
	$(elem).datepicker({ maxDate: 0});
	$(elem).blur(function (){
		var endDate = parseDate($(this).val());
	    var today = new Date();
	    if ((endDate > today) || (endDate == null)) {
	    	$(this).val("");
	    }
	})
}

function datosDefault(canal, fechaDesde, fechaHasta, operaciones){


var desde=$(fechaDesde);
var hasta=$(fechaHasta);
var c=$(canal);
var canales=$(c).find("option");

var op=$(operaciones).find("option");
var q=op[0];
$(operaciones).empty();
$(operaciones).append(q);
var d = new Date();
var options = {month:'2-digit', year:'numeric', day:'numeric'}
hasta.val(d.toLocaleDateString("es-AR",options));
d.setMonth(d.getMonth() - 6);
desde.val(d.toLocaleDateString("es-AR",options));

  for (var i = canales.length - 1; i >= 0; i--) {
    if (canales[i].selected==true){
       canales[i].selected=false;
    }

  };

}

function disabledExtraField(elem,radioNumero){
  
   var opciones = $(elem).find("div.radioButtonDiv");
   var radio =$(opciones[radioNumero-1]).find("input");
   if ($(radio[0]).is(':checked')==false){
   $(radio[1]).attr("class", "radio-button-extrafield_default");
    $(radio[1]).val("");
    $(radio[1]).attr("unmasked","");
    $(radio[1]).prop("disabled",true);
   }else{
    $(radio[1]).prop("disabled",false);
    
   }

}

 
function validateValueInputInRadio(elem,index,min){
	var idRadio = $(elem).attr('id');
    var idInput = "#extraField_"+idRadio+"_opt_"+index;
    var input = $(idInput);
    var caption = input.attr("caption");
    var radio = idRadio+"_opt_"+index;

    errorInput = input.attr("class").substr(-6);
  	if (errorInput == " error") {
    	sinErrorInput = input.attr("class").substr(0, input.attr("class").length - 6);
  	} else {
    	sinErrorInput = input.attr("class");
  	}

  	input.removeClass();
  	input.addClass(sinErrorInput);

  	if(document.getElementById(radio).checked){
  		if(parseInt(input.val()) <= min){
	    	errorMsg = caption + " " + "debe ser mayor a " + min ;
		    ruleServiceInvalidation = true;
		    input.addClass(idInput.className + " error");
		    showError(errorMsg);
    	}

  	}
}
function validateSpecialCharacters(caracteres,elem,tipo){
    try{
        var regexAlfanumerico = /^[0-9a-zA-Z\sñÑáÁéÉíÍóÓúÚüÜ]{0,10000}$/;
        var regexNum = /^[\d]{0,1000000}$/;
        var regexAlfabetico = /^[a-zA-Z]{0,100000}$/;

        $(elem).keypress(function (e){
            var listaCaracteres = caracteres.split(" ");

            if ( (event.keyCode == 9) || (event.keyCode == 36) || (event.key == "Home") ||
                (event.key == "End") || (event.keyCode == 35)|| (event.keyCode == 8) || (event.keyCode == 13) || 
                (event.keyCode == 17) || (event.key == "ArrowLeft") || (event.keyCode == 37) || (event.key == "ArrowRight") ||
                (event.keyCode == 39) || (event.key == "ArrowDown") || (event.keyCode == 40) || (event.key == "ArrowUp") || (event.keyCode == 38) || 
                (event.key == "Delete") || (event.keyCode == 46) ){
                    return true;
            }

            if(getCharacterPressed(event) == " " && listaCaracteres.indexOf("\\s")){
                return true;
            }

            var index = listaCaracteres.indexOf(getCharacterPressed(event));

            if (index >= 0){
                return true;
            }else{
                if(tipo == "numerico"){
                    return regexNum.test(getCharacterPressed(event));
                }
                else if(tipo == "alfabetico"){
                    return regexAlfabetico.test(getCharacterPressed(event));
                }else{
                    return regexAlfanumerico.test(getCharacterPressed(event));
                }
                
            }

        });

        $(elem).on('input',function(e) {
            var listaCaracteres = caracteres.split(" ");

            if ( (event.keyCode == 9) || (event.keyCode == 36) || (event.key == "Home") ||
                (event.key == "End") || (event.keyCode == 35)|| (event.keyCode == 8) || (event.keyCode == 13) || 
                (event.keyCode == 17) || (event.key == "ArrowLeft") || (event.keyCode == 37) || (event.key == "ArrowRight") ||
                (event.keyCode == 39) || (event.key == "ArrowDown") || (event.keyCode == 40) || (event.key == "ArrowUp") || (event.keyCode == 38) || 
                (event.key == "Delete") || (event.keyCode == 46) ){
                    return true;
            }

            if(getCharacterPressed(event) == " " && listaCaracteres.indexOf("\\s")){
                return true;
            }

            var index = listaCaracteres.indexOf(getCharacterPressed(event));

            if (index >= 0){
                return true;
            }else{
                if(tipo == "numerico"){
                    return regexNum.test(getCharacterPressed(event));
                }
                else if(tipo == "alfabetico"){
                    return regexAlfabetico.test(getCharacterPressed(event));
                }else{
                    return regexAlfanumerico.test(getCharacterPressed(event));
                }
                
            }

        });

        $(elem).bind("paste", function(e){

            var pastedData = e.originalEvent.clipboardData.getData("text");
            return regexAlfanumerico.test(pastedData);

        });

        $(elem).on("keyup", function(){
            //var caracteresConcat = caracteres.replace(/\s/g,"");
            var listaCaracteres = caracteres.split(" ");
            var caracteresConcat = ""
            for (i = 0; i < listaCaracteres.length; i++) {
                if (listaCaracteres[i] == ""){
                    caracteresConcat += "\\s";
                }else{
                    caracteresConcat += "\\"+listaCaracteres[i];
                }
                
            }
            //var ex = "[^0-9a-zA-Z\\sñÑáÁéÉíÍóÓúÚüÜ"+caracteresConcat+".]";
            if(tipo == "numerico"){
                var ex = "[^\\d"+caracteresConcat+".]";
            }
            else if(tipo == "alfabetico"){
                var ex = "[^a-zA-Z"+caracteresConcat+".]";
            }else{
                var ex = "[^0-9a-zA-Z\\sñÑáÁéÉíÍóÓúÚüÜ"+caracteresConcat+".]";
            }
            var regexAux = new RegExp(ex,"g");
            var val = $(elem).val().replace(regexAux, '');
            $(elem).val(val);

        });

    }catch (err){
        if ( window.console && window.console.log ) {
            console.error(err,"Error en servicio --filtrarComentario--");
        }

    }
}
function setFocusInNewTextArea(elem){
    var texto = $(elem).text();
    $("#textFieldError").append("<textarea id=\"textoError\" autofocus tabindex=\"10\" rows=\"4\" cols=\"50\"></textarea>");
    $("#textoError").val(texto);
    $("#textoError").focus();
    $("#textoError").hide();
}
function showProgressLoading(){
    $.showprogress();
}
function filterDates(desde, hasta, valor){

var desdeFecha = parseDate($(desde).val());
var fechaHasta = parseDate($(hasta).val());

if (valor =="d"){
  $(hasta).datepicker({ minDate: desdeFecha, maxDate: 0});
  }else{
  $(desde).datepicker({ maxDate: fechaHasta, minDate: +1})
}


}



function formatHsMs(elem){
var valor=$(elem).val();
$(elem).attr("value",valor);
$(elem).attr("type","time");
}

 
function doGetCaretPosition(oField) {

  var iCaretPos = 0;

  // IE Support
  if (document.selection) {

    // Set focus on the element
    oField.focus();

    // To get cursor position, get empty selection range
    var oSel = document.selection.createRange();

    // Move selection start to 0 position
    oSel.moveStart('character', -oField.value.length);

    // The caret position is selection length
    iCaretPos = oSel.text.length;
  }

  // Firefox support
  else if (oField.selectionStart || oField.selectionStart == '0')
    iCaretPos = oField.selectionStart;

  // Return results
  return iCaretPos;

  }



 


 function validateComponents(captch, elem, select){

    var lista =$(select).find("option");

    var jq_elem1 = $(elem);
    var estilo_elem1 = jq_elem1.attr("class");
    var estilo_con_error_elem1 = estilo_elem1.substr(-6);

    var jq_elem2 = $(captch);
    var estilo_elem2 = jq_elem2.attr("class");
    var estilo_con_error_elem2 = estilo_elem2.substr(-6);

    var jq_elem3 = $(select);
    var estilo_elem3 = jq_elem3.attr("class");
    var estilo_con_error_elem3 = estilo_elem3.substr(-6);

    if (estilo_con_error_elem3 == " error") {
      var estilo_dinamico_elem3 = estilo_elem3.substring(0, estilo_elem3.length - 6);
      jq_elem3.removeClass();
      jq_elem3.addClass(estilo_dinamico_elem3);
    }

    if (estilo_con_error_elem1 == " error") {
        var estilo_dinamico_elem1 = estilo_elem1.substring(0, estilo_elem1.length - 6);
        jq_elem1.removeClass();
        jq_elem1.addClass(estilo_dinamico_elem1);
    }

    if (estilo_con_error_elem2 == " error") {
        var estilo_dinamico_elem2 = estilo_elem2.substring(0, estilo_elem2.length - 6);
        jq_elem2.removeClass();
        jq_elem2.addClass(estilo_dinamico_elem2);
    }


ruleServiceInvalidation = false;
var errorMsg="";



    if (lista[0].selected==true && lista[0].text== "Ninguno"){

        errorMsg=$(select).attr("caption")+ " " + ("es un campo obligatorio")+ "\n";
        jq_elem3.addClass(estilo_elem3 + " error");
        ruleServiceInvalidation = true;                

    }





    if ($(elem).val()==""){

        errorMsg = errorMsg + "\n" + elem.attr("caption") + " " + ("es un campo obligatorio") + "\n";
        jq_elem1.addClass(estilo_elem1 + " error");
        ruleServiceInvalidation = true;

    }



if ($(elem).val()!=""){

     for (i = 0; i < lista.length; i++){
        var seleccionado=lista[i].selected;


            if (seleccionado==true && lista[i].text!= "Pasaporte" && $(elem).val().length<5 || seleccionado==true && lista[i].text!= "Pasaporte" && $(elem).val().length>8){


            errorMsg =errorMsg + "\n" + elem.attr("caption") + " " + ("debe ser un número entero de longitud 5 como mínimo y 8 como máximo") + "\n";
            jq_elem1.addClass(estilo_elem1 + " error");
            ruleServiceInvalidation = true;                
                                   
            }else if (seleccionado==true && lista[i].text== "Pasaporte" && $(elem).val().length<5){

            errorMsg = errorMsg + "\n" + elem.attr("caption") + " " + ("debe ser un número entero de longitud 5 como mínimo y 10 como máximo") + "\n";
            jq_elem1.addClass(estilo_elem1 + " error");
            ruleServiceInvalidation = true;                

            }
                            
        }
}

    if ($(captch).val()==""){

        errorMsg =errorMsg + "\n" + captch.attr("caption") + " " + ("es un campo obligatorio") + "\n";
        jq_elem2.addClass(estilo_elem2 + " error");
        ruleServiceInvalidation = true;

    }


     if (ruleServiceInvalidation == true) {
        showError(errorMsg);
        return;
    }

}

function vtValidateMail(elem, msg, target) {
  earlyValidation.call(target,msg,function() {
    var elemValue = getElementValue(elem);
      var regex =/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.([a-z]){2,4})$/;
      if(!regex.test(elemValue)) {
        return 0;
      }else{
    
    	return -1;
    	}
  });
}
function vtValidateCuit(inputValor,msg,target) {
 
 var inputAux = $(inputValor);

 earlyValidation.call(target,msg,function() {
  var inputString = getElementValue(inputAux);
  if(inputString=="")
    return -1;

  if (inputString.length == 11) {
    var flag = false;
        var Caracters_1_2 = inputString.charAt(0) + inputString.charAt(1);
        if (Caracters_1_2 == "20" || Caracters_1_2 == "23" || Caracters_1_2 == "24" || Caracters_1_2 == "27" || Caracters_1_2 == "30" || Caracters_1_2 == "33" || Caracters_1_2 == "34") {
          var Count = inputString.charAt(0) * 5 + inputString.charAt(1) * 4 + inputString.charAt(2) * 3 + inputString.charAt(3) * 2 + inputString.charAt(4) * 7 + inputString.charAt(5) * 6 + inputString.charAt(6) * 5 + inputString.charAt(7) * 4 + inputString.charAt(8) * 3 + inputString.charAt(9) * 2 + inputString.charAt(10) * 1;
          Division = Count / 11;
          if (Division == Math.floor(Division)) {
            flag = true;
          }
        }
      return flag ? -1 : 0; 
  } 
  return 0;
 }); 

}
function vtValidateHsMs(elemDesde,elemHasta, msg,target) {
	  var myFunction = function() {
	  	var es_ie = navigator.userAgent.indexOf("MSIE") > -1 ;
	  	var es_firefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;
		if(es_ie || es_firefox){
			if ($(elemDesde).val()!="" && $(elemHasta).val()!=""){
				var arHora1 = $(elemDesde).val().split(":"); 
			    var arHora2 = $(elemHasta).val().split(":"); 
			     
			    // Obtener horas y minutos (hora 1) 
			    var hh1 = parseInt(arHora1[0],10); 
			    var mm1 = parseInt(arHora1[1],10); 

			    // Obtener horas y minutos (hora 2) 
			    var hh2 = parseInt(arHora2[0],10); 
			    var mm2 = parseInt(arHora2[1],10); 

			    // Comparar 
			    if (hh1<hh2 || (hh1==hh2 && mm1<mm2)){
			    	return -1;
			    }
		      	return 0;
		  		}
			return -1;

		}else{
			if ($(elemDesde).val()!="" && $(elemHasta).val()!=""){
		      if ($(elemDesde).val() < $(elemHasta).val()){
		          return -1;
		      }
		      return 0;
		  	}
			return -1;
		}
	  };
    if($(target)[0]==$(elemHasta)[0])
    	earlyValidation.call(elemHasta,msg,myFunction,elemDesde);
    else
    	earlyValidation.call(elemDesde,msg,myFunction,elemHasta);
}
function vtValidateClaveNueva(apellido,bool,claveActual,claveNueva,dni,fecha,msg,nombre,nombreusuario,target) {
  var valida=$(bool).val();
  var apellido = $(apellido).text();
  var nombre = $(nombre).text();
  var nombreusuario = $(nombreusuario).text();
  var fecha = $(fecha).text();
  var dni = $(dni).text();
  var claveActualAux=$(claveActual);
  var claveNuevaAux=$(claveNueva);


  earlyValidation.call(target,msg,function() {

  claveActualVal = $(claveActualAux).val();
  claveNuevaVal = $(claveNuevaAux).val();

  //validacion clave nueva tiene que ser diferente a clave actual
    if(((claveActualVal != "") && (claveNuevaVal != "")) && (claveActualVal == claveNuevaVal)){
      return 0;
    }

  //validacion si contiene nombre o apellido
  if (valida=="true"){
  var nombres = (nombre.toLowerCase() + " " + apellido.toLowerCase()).split(" ");
    var valorclaveLower = claveNuevaVal.toLowerCase();
  for (name in nombres){
    if((nombres[name].length > 3) && ((valorclaveLower.indexOf(nombres[name])) >= 0)){
      return 1;
    }
  }
  }
  //vaidacion que la clave no contenga el dni
  if((dni != "") && (claveNuevaVal.search(dni) >= 0)){
      return 2;
  }

    //validacion 3 numeros consecutivos descendentes o ascendentes
  if(new RegExp(/012{1,}|123{1,}|234{1,}|345{1,}|456{1,}|567{1,}|678{1,}|789{1,}|987{1,}|876{1,}|765{1,}|654{1,}|543{1,}|432{1,}|321{1,}/).test(claveNuevaVal)){
      return 3;
  }

  //validacion no debe poseer 3 o más caracteres repetidos consecutivos
  if(new RegExp(/0{3,}|1{3,}|2{3,}|3{3,}|4{3,}|3{3,}|6{3,}|7{3,}|8{3,}|9{3,}|A{3,}|B{3,}|C{3,}|D{3,}|E{3,}|F{3,}|G{3,}|H{3,}|I{3,}|J{3,}|K{3,}|L{3,}|M{3,}|N{3,}|O{3,}|P{3,}|Q{3,}|R{3,}|S{3,}|T{3,}|U{3,}|V{3,}|W{3,}|X{3,}|Y{3,}|Z{3,}|a{3,}|b{3,}|c{3,}|d{3,}|e{3,}|f{3,}|g{3,}|h{3,}|i{3,}|j{3,}|k{3,}|l{3,}|m{3,}|n{3,}|o{3,}|p{3,}|q{3,}|r{3,}|s{3,}|t{3,}|u{3,}|v{3,}|w{3,}|x{3,}|y{3,}|z{3,}|!{3,}|"{3,}|#{3,}|\${3,}|%{3,}|\&{3,}|\({3,}|\){3,}|\*{3,}|\+{3,}|,{3,}|-{3,}|\.{3,}|\/{3,}|:{3,}|;{3,}|<{3,}|={3,}|>{3,}|\?{3,}|@{3,}|\{{3,}|\|{3,}|\}{3,}|~{3,}|\[{3,}|\]{3,}|\^{3,}|\_{3,}|\'{3,}|`{3,}/).test(claveNuevaVal)){

      return 4;
  }

  //validacion al menos un número y una letra
  if((claveNuevaVal != "") && !(new RegExp(/^(?=.*[0-9])(?=.*[a-zA-Z ñÑ])([\S]+)$/).test(claveNuevaVal))){

      return 5;
  }
  //valida que no contenga el usuario
  if((nombreusuario != "") && (claveNuevaVal.search(nombreusuario) >= 0)){

      return 6;
    }

    //validacion datos personales
    var Exp = new RegExp(/^(\d{1,2})\/(\d{1,2})\/(\d{4})$/); // fecha dd/mm/yyyy
  if(claveNuevaVal != "" && fecha != "" && Exp.test(fecha)){
    var dd = fecha.split('/')[0];
    var mm = fecha.split('/')[1];
    var aaaa = fecha.split('/')[2];
    var aa = fecha.split('/')[2].substring(2,4);

    var valorclaveActual = claveNuevaVal;
    if (valorclaveActual.search(aaaa+mm+dd) >= 0 ||
      valorclaveActual.search(aaaa+dd+mm) >= 0 ||
      valorclaveActual.search(dd+mm+aa) >= 0 ||
      valorclaveActual.search(dd+aa+mm) >= 0 ||
      valorclaveActual.search(mm+dd+aa) >= 0 ||
      valorclaveActual.search(mm+aa+dd) >= 0 ||
      valorclaveActual.search(aa+dd+mm) >= 0 ||
      valorclaveActual.search(aa+mm+dd) >= 0 ||
      valorclaveActual.search(dd+mm+aaaa) >= 0 ||
      valorclaveActual.search(dd+aaaa+mm) >= 0 ||
      valorclaveActual.search(mm+dd+aaaa) >= 0 ||
      valorclaveActual.search(mm+aaaa+dd) >= 0){
        return 7;
    }
  } 
  return -1;

  });
  }
function vtValidateRangeMin(elem,msg,target) {

	var elemAux = $(elem);
  earlyValidation.call(target,msg,function() {
  if($(elemAux).val() == "")
  	return -1;
  if((parseFloat($(elemAux).val().replace("\.","").replace(",",".")) < parseFloat($(elemAux).attr("rangemin")))){
      return 0;
      }
      return -1;
  });
  }
function vtValidateMultipleMails(elem, msg) {
  earlyValidation.call(elem,msg,function() {
    var elemValue = getElementValue(elem);
    //Los mails se separan por coma o punto y coma
    if (elemValue==""){
      return -1;
    }
    var result = elemValue.split(/,|;/);
    for(var i = 0;i < result.length;i++) {
      	var regex =/^[._a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.([a-z]){2,4})$/;
      	var regex2 = /\.\.{1,}/;
      	var cadena=result[i].toLowerCase();
      	var long= cadena.length;
      	var cadena1=cadena;
	    var cont1 = 1;
		for(var x=0;x<cadena1.length;x++){
	  		if (cadena1[x]==" "){
	      		cont1++;
	      	}	
			else{
	           cont1--	
	           break;
	      	}
	  	} 
	  var mail1=cadena1.substr(cont1,cadena1.length);

	  	var long = mail1.length-1
	    var cont=long;
	  	for(var x=0;x<mail1.length;x++){
	  		if (mail1[long-x]==" "){
	      		cont--;
	      	}
	      	else{
	           cont++	
	           break;
	      	}
	  	} 
		var mail=mail1.substr(0,cont)

      if((!regex.test(mail)) || (regex2.test(mail))) {
        return 0;
      }
    }
    return -1;
  });
}
function addCurrencyInRadioButton(indice,label,moneda,radio){
	var idRadio = $(radio).attr("id");
  	var idOpcion = "#extraField_"+idRadio+"_opt_"+indice;
  	var opcion = $(idOpcion);
  	if(opcion.attr("readonly") == undefined){
  		var listaDiv = $("div.radioButtonDiv");
  		htmlDiv = $(listaDiv[indice]).html();
  		listaHtml = String(htmlDiv).split("Otro importe");
  		var htmlNuevo = listaHtml[0] + label + " " + moneda + listaHtml[1] + label + listaHtml[2];
  		$(listaDiv[indice]).html(htmlNuevo);
  	}else{
  		opcion.val(moneda+" "+opcion.val());
  	}
}
function openMacroPremiaTokenIfExist(){
	if($('#textFieldToken').text()!=''){
		var win = window.open($('#textFieldToken').text(), '_blank');
		if (win) {
	 	   win.focus();
		} else {
		}
		$('#textFieldToken').text('');
	}
}
function blockCopyPaste(elems){
	elems = elems.split('|');
	for (i in elems){
		if(elems[i]!=undefined && $('#'+elems[i]).length){
			$('#'+elems[i]).bind("cut copy paste",function(e) {
			  e.preventDefault();
		   });
		}
	}
}
function vtCompareElements(elem1,elem2,msg,operator,target){
  var auxElem1 = $(elem1);
  var auxElem2 = $(elem2);
  var myFunction = function() {
    if($(auxElem1).is("span")){
        var val1 = $(auxElem1).text();
    } else {
        var val1 = getElementValue(auxElem1);
      }

    if($(auxElem2).is("span")){
        var val2 = $(auxElem2).text();
    } else {
        var val2 = getElementValue(auxElem2);
      }
      if(val1=="" || val2=="")
        return -1;

      if(operator=='='){
        return (val1 == val2) ? 0: -1;
      } else if(operator == '!=' || operator == '<>' ){
        return (val1 != val2) ? 0: -1;
      } else if(operator == '<'){
        return (val1 < val2) ? 0: -1;
      } else if(operator == '>'){
        return (val1 > val2) ? 0: -1;
      } else if(operator == '<='){
        return (val1 <= val2) ? 0: -1;
      } else if(operator == '>='){
        return (val1 >= val2) ? 0: -1;
      } else if(operator == 'contains'){
        return val1.indexOf(val2)!=-1 ? 0:-1;
      } else {
        return -1;
      } 
    };
  if($(target)[0]==$(elem2)[0]){
      earlyValidation.call(elem2,msg,myFunction,elem1);
  }else{
      earlyValidation.call(elem1,msg,myFunction,elem2);
  }
}


function mascAmountColl(collection,d){

  var tabla=$(collection);
  var b=tabla.find("tbody");
  var g= b.find("tr");

  for (var i = g.length - 1; i >= 0; i--) {
    var valores=$(g[i]).find("td");
    var s=$(valores[2]).text();
  

   if(typeof s !== "number" || s === null) s = parseFloat(s);
   if(typeof d === "undefined" || d<0) d = 2;
   if(s === s){ //check for NaN
   var enmascarado = s.toFixed(d).toString().replace(".",",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
   $(valores[2]).text("$ "+ enmascarado);
   }else{
   $(valores[2]).text("$ 0,00");
    }
 };
}

function mascAmount(d,s){
    var dato=$(s).text();
   if(typeof dato !== "number" || dato === null) dato = parseFloat(dato);
   if(typeof d === "undefined" || d<0) d = 2;
   if(dato === dato){ //check for NaN
   var enmascarado = dato.toFixed(d).toString().replace(".",",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
    $(s).text("$ "+ enmascarado);
   }else{
    $(s).text("$ 0,00");
  }
}

function addMaskAmountInRadioButtonInput(indice,radio){
    var idRadio = $(radio).attr("id");
    var idOpcion = "#extraField_"+idRadio+"_opt_"+indice;
    var elem = $(idOpcion);
    var onblur = $(elem).attr('onblur');
    var value = $(elem).val();
    if(value!=undefined && value!=''){
        $(elem).attr("unmasked",value);
        CB.automask.applyMask(document.getElementById($(elem).attr("id")),'2',',','.', '$ #,##0.00');
    }
    if (!(typeof onblur !== typeof undefined && onblur !== false)) {
        onblur = "";
    }
    $(elem).attr('onblur',onblur+"copyToUnmasked(this); CB.automask.applyMask( this,'2',',','.', '$ #,##0.00');" );
    var onfocus = $(elem).attr('onfocus');
    if (!(typeof onfocus !== typeof undefined && onfocus !== false)) {
        onfocus = "";
    }
    $(elem).attr('onfocus',onfocus+"CB.automask.decSeparator=',';CB.automask.thousSeparator='.';copyFromUnmasked(this);");
    var onkeydown = $(elem).attr('onkeydown');
    if (!(typeof onkeydown !== typeof undefined && onkeydown !== false)) {
        onkeydown = "";
    }
    $(elem).attr('onkeydown',onkeydown+"checkFloat(this, event);");

    $(elem).attr('checkfloat','doCheck');
    $(elem).attr('datatype','float');
}
function vtValidateRangeMinRadio(elem,index,msg) {

  var idRadio = $(elem).attr('id');
  var idInput = "#extraField_"+idRadio+"_opt_"+index;
  var radio = idRadio+"_opt_"+index;
  earlyValidation.call($(idInput),msg,function() {
    if($('#'+radio).is(":checked")==true){
      var dato=$(idInput).val();
      if(dato == ""){
        return -1;
      }
      if(parseFloat(dato.replace("$","").replace(/\./g,"").replace(",","."))  < parseFloat($(idInput).attr("rangemin"))){
        return 0;
      }
    }
    return -1;
  });
}
function vtValidateValueInputInRadio(elem,index,min){
    var idRadio = $(elem).attr('id');
    var idInput = "#extraField_"+idRadio+"_opt_"+index;
    var input = $(idInput);
    var caption = input.attr("caption");
    var radio = idRadio+"_opt_"+index;
    earlyValidation.call(input,caption + " " + "debe ser mayor a " + min,function() {
    	if(document.getElementById(radio).checked){
    		if(parseInt(input.val()) <= min){
          return 0;
      	}
    	}
      return -1;
    }); 
}
function updateDependentSelectFieldByInputIfApply(selectFieldReload, idInput){
    /*console.log("elemento Activo ---> "+document.activeElement.id)
    console.log("combo a actualizar ---> "+selectFieldReload)*/
    if(document.activeElement.id === idInput){
       /* console.log("RECARGA por DOWN");*/
        mostrarEnEjecucion();
        updateDependentSelectFieldByInput(document.getElementById(idInput),document.getElementById(selectFieldReload));
    }/*else{
        console.log("No hay recarga por DOWN");
    }*/
}

function bindDependentSelectFieldOnBlur(idElementToShow,selectField,trigger){

	$(trigger).attr("lastValue",$(trigger).val());
  	var es_ie = navigator.userAgent.indexOf("MSIE") > -1 || navigator.userAgent.indexOf("Edge") > -1 ;
    
     if(es_ie){
	    var mousedown = $(selectField).attr('onmousedown');
	    if(mousedown == undefined){
		    mousedown = "";
    	}

    	$(selectField).attr('onmousedown',"updateDependentSelectFieldByInputIfApply('"+$(selectField).attr('id')+"', '"+$(trigger).attr("id")+"');"+mousedown);
        
        $(trigger).keydown(function(e) {
        var tabKeyPressed = false;
        tabKeyPressed = e.keyCode == 9;
        if (tabKeyPressed) {
	        mostrarEnEjecucion();
	        updateDependentSelectFieldByInput($(trigger),$(selectField));
	        }
	    });    
    }    

    $(trigger).on("blur",function(){
         if(document.activeElement.id !== $(selectField).attr('id')){
            /* console.log("RECARGA por BLUR");*/
	         mostrarEnEjecucion();
	         updateDependentSelectFieldByInput($(trigger),$(selectField));
	         }/*else{
                 console.log("No hay recarga por BLUR");
                }*/
     });

    if(idElementToShow!='null'){
	    $(selectField).on('selectFilled',function(event){
		    var elem = this;
			    if(getElementValue(trigger)!="" && (elem.options==null ||
			    (elem.options.length==1 && elem.options[0].value == 'Ninguno'))){
				    if($('#'+idElementToShow).css("display")=="none"){
					    $('#'+idElementToShow).css("display","block");
					    window.scrollBy(0, document.getElementById(idElementToShow).offsetHeight);
				    }
			    }else if($('#'+idElementToShow).css("display")=="block"){
				    window.scrollBy(0, -1*document.getElementById(idElementToShow).offsetHeight);
				    $('#'+idElementToShow).css("display","none");
			    }

	    });
    }

}
function bindDependentSelectFieldOnBlurOfRadioButton(auxElement,idElementToShow,selectField,trigger){
	$(selectField).on('mousedown',function(){
		var value = $(auxElement).val();
		var newValue = "";
		$(trigger).find("input[type='radio']").each(function(i,elem){
			if(elem.checked){
			    if($(elem).hasClass('rad-restyled')){
				    $(auxElement).val($(elem).parent().siblings("input").val().replace("$","").replace(/\./g,"").trim());
			    }else{
			        $(auxElement).val($(elem).siblings("input").val().replace("$","").replace(/\./g,"").trim());
			    }
				newValue = $(auxElement).val();
			}
		});
		if(value!=newValue){
			updateDependentSelectFieldByInput(auxElement,selectField);
		}
	});

	$(trigger).find("input[type='radio']").on('change', function() {
		if(this.checked){
			var value = $(auxElement).val();
			var newValue = 0;
			if($(this).hasClass('rad-restyled')){
			    newValue = $(this).parent().siblings("input").val().replace("$","").replace(/\./g,"").trim();
			}else{
                newValue = $(this).siblings("input").val().replace("$","").replace(/\./g,"").trim();
			}
			if(value!=newValue){
				$(auxElement).val(newValue);
				updateDependentSelectFieldByInput(auxElement,selectField);
			}
		}
	});
	$(trigger).find("input[type='text']").each(function (){
		$(this).on('blur',function(){
			if(getElementValue($(this))=="")
				return;
				
			var value = $(auxElement).val();
			copyToUnmasked(document.getElementById($(this).attr('id')));
			var newValue = $("#importeAPagar_opt_2").siblings("input").val();
			if(value!=newValue){
				$(auxElement).val(newValue);
				updateDependentSelectFieldByInput(auxElement,selectField);
			}
		});
	});
	if(idElementToShow!='null'){
		$(selectField).on('selectFilled',function(){
			var elem = this;
				if(Number($(auxElement).val().replace(",","."))>0&&(elem.options==null ||
				(elem.options.length==1 && elem.options[0].value == 'Ninguno'))){
					if($('#'+idElementToShow).css("display")=="none"){
						$('#'+idElementToShow).css("display","block");
						window.scrollBy(0, document.getElementById(idElementToShow).offsetHeight-39);
					}
				}else if($('#'+idElementToShow).css("display")=="block"){
					window.scrollBy(0, -1*document.getElementById(idElementToShow).offsetHeight+39);
					$('#'+idElementToShow).css("display","none");
				}
		});
	}
}
function vtCompareElementAndEntity(currency, elem, entity, operator){
    var msg = "El importe no puede superar los "+$(currency).text()+entity+".";
    earlyValidation.call(elem,msg,function(){
        var compare = {
            "=": function (x, y) { return x == y },
            "<": function (x, y) { return x < y },
            ">": function (x, y) { return x > y },
            ">=": function (x, y) { return x >= y },
            "<=": function (x, y) { return x <= y },
            "<>": function (x, y) { return x != y }
        };
        if(getElementValue(elem)==""){
        return -1;
        }
        if(compare[operator](getElementValue(elem),entity)){
            return -1;
        } else{
            return 0;
        }
    });
}
function compareElementAndEntity(currency, elem, entity, isRuleInvalidation, operator){
    if(!($(elem).length>0) || getElementValue($(elem))=="")
        return;
        
        if(operator==">"){
            var msg = "El importe no puede superar los "+$(currency).text()+entity+".";    
        }else if(operator=="<"){
            var msg = "El importe ingresado es menor al mínimo permitido";  
        }
        
        clearError(msg,elem);
            var compare = {
                "=": function (x, y) { return x == y },
                "<": function (x, y) { return x < y },
                ">": function (x, y) { return x > y },
                ">=": function (x, y) { return x >= y },
                "<=": function (x, y) { return x <= y },
                "<>": function (x, y) { return x != y }
            };
            
        var isntValid =compare[operator](Number($(elem).attr("unmasked")),entity);

        if(isntValid){
            showError(msg,elem);

            if(isRuleInvalidation=='true')
                ruleServiceInvalidation=true; 
        }
}
function validateEitherFieldAndOblig(elem1, elem2, elem3, elem4, msg) {

  var bol=false; 

  var errorElem = $(elem1).attr("class").substr(-6);
  if(errorElem == " error") {
    var sinErrorElem1 = $(elem1).attr("class").substr(0,$(elem1).attr("class").length-6);
  } else {
   var sinErrorElem1 = $(elem1).attr("class");
  }
    
  $(elem1).removeClass();
  $(elem1).addClass(sinErrorElem1);

  var elemValue1;
  if("checkbox"==elem1.attr("type")){
    var elemValue1=elem1.is(':checked');
  } else {
   var  elemValue1 = elem1.val();
    if (elemValue1==undefined){
     var elemValue1= elem1.options[elem1.selectedIndex].value;
    }
  }
    /*
  elemValue1 = elemValue1.trim();
  $(elem1).val(elemValue1);
    */
  var errorElem3 = $(elem3).attr("class").substr(-6);
  if(errorElem3 == " error") {
       var sinErrorElem3 = $(elem3).attr("class").substr(0,$(elem3).attr("class").length-6)
    } else {
       var sinErrorElem3 = $(elem3).attr("class")
    }

  $(elem3).removeClass();
  $(elem3).addClass(sinErrorElem3);


   var errorElem4 = $(elem4).attr("class").substr(-6);
  if(errorElem4 == " error") {
     var sinErrorElem4 = $(elem4).attr("class").substr(0,$(elem4).attr("class").length-6);
    } else {
      var sinErrorElem4 = $(elem4).attr("class");
    }

  $(elem4).removeClass();
  $(elem4).addClass(sinErrorElem4);



 var errorElem2 = $(elem2).attr("class").substr(-6);
  if(errorElem2 == " error") {
       var sinErrorElem2 = $(elem2).attr("class").substr(0,$(elem2).attr("class").length-6);
    } else {
        var sinErrorElem2 = $(elem2).attr("class");
    }

  $(elem2).removeClass();
  $(elem2).addClass(sinErrorElem2);

  var elemValue2;
  if("checkbox"==elem2.attr("type")){
    elemValue2=elem2.is(':checked');
  } else {
    elemValue2 = elem2.val();
    if (elemValue2==undefined){
      elemValue2= elem2.options[elem2.selectedIndex].value;
    }
  }
    
  var isReadOnly= elem1.prop("readonly") || elem2.prop("readonly");
    var isntValid1 = !isReadOnly && (elemValue1=="Ninguno" || elemValue1=="" || elemValue1=="false" || elemValue1==undefined || elemValue1==null);
    var isntValid2 = !isReadOnly && (elemValue2=="Ninguno" || elemValue2=="" || elemValue2=="false" || elemValue2==undefined || elemValue2==null);

  if(msg == undefined){
    msg="";
  }

  var errorMsj="";


  if ($(elem3).val()=="Ninguno"){
    $(elem3).addClass(elem3.className+" error");
    errorMsj = $(elem3).attr("caption") + " es un campo obligatorio" + "\n";
    bol=true;   
  }

    if ($(elem4).val()==""){
    $(elem4).addClass(elem4.className+" error");
    errorMsj = errorMsj + "\n" +$(elem4).attr("caption") + " es un campo obligatorio" + "\n";
    bol=true;   
  }


  if(isntValid1 && isntValid2){
    if(isntValid1) {
            $(elem1).addClass(elem1.className+" error");
            bol=true;   
        }
        if(isntValid2) {
          $(elem2).addClass(elem2.className+" error");
            bol=true;   
        }
     errorMsj = errorMsj + "\n" + msg;   

  }


    if (bol==true){
    ruleServiceInvalidation=true; 
    showError(errorMsj);
    }

}

function applyValToUnmasked(flo){
  var valor=$(flo).val();
  $(flo).attr("unmasked",valor);
}

function noPaste(elem){
	$(elem).attr("onpaste", "return false");
}
function enableDisableElementOnValue2(booleano,elem) {

    var bol=$(booleano).text();
    if(bol=="false" || bol==""){
      var valor=false;
    }else{
      var valor=true;
    }
    $(elem).prop("disabled", !valor);
}
 
 
function alwaysSimulatePF(buttonToDisable,elemToRemove,elemToWatch){
    if($(elemToRemove).length){
        var value = $(elemToWatch).val();
        
        if($(elemToWatch).is('input')){
	        $(elemToWatch).on('change paste keyup',function(){
	            var newValue = $(elemToWatch).val();
	
	            if(value != newValue){
	                $(elemToRemove).remove();
	                $(buttonToDisable).prop("disabled", true);
	
	                value == newValue;
	            }
	        });
	        $(elemToWatch).on('dateset',function(){
	
	                $(elemToRemove).remove();
	                $(buttonToDisable).prop("disabled", true);
	
	                value == $(elemToWatch).val();
	        })
        }else if($(elemToWatch).is('select')){
        	$(elemToWatch).change(function(){
	            var newValue = $(elemToWatch).val();
	
	            if(value != newValue){
	                $(elemToRemove).remove();
	                $(buttonToDisable).prop("disabled", true);
	
	                value == newValue;
	            }
	        })
        }
    }
}
function buildToken(inputOrigin, inputDest, docType, docNumber) {    var origin = $(inputOrigin);    var dest = $(inputDest);        var docType = docType;        var docNro = docNumber;     var result = docType+";"+docNumber+";"+origin.val();    dest.val(result);}
function ordenarComboAlfabeticamente(combo){
	var myFunction = function(comboStr){
		var sel = $('#'+comboStr);
		var selected = sel.val();
		var opts_list = sel.find('option');
		opts_list.sort(function(a, b) { return a.innerHTML > b.innerHTML ? 1 : -1; });
		sel.empty().append(opts_list);
		var optionNinguna = $("#"+comboStr +" option").filter(function(i, e) { return $(e).val() == "Ninguno"});
		if (optionNinguna) {
			var newTag = "<option value="+optionNinguna.val()+">"+optionNinguna.text()+"</option>";
			optionNinguna.remove();
			$("#"+comboStr).prepend(newTag);
		}
		var optionTodas = $("#"+comboStr +" option").filter(function(i, e) { return e.innerHTML == "Todas"});
		if (optionTodas) {
			var newTag = "<option value="+optionTodas.val()+">Todas</option>";
			optionTodas.remove();
			$("#"+comboStr).append(newTag);
		}
		sel.val(selected);
	}
	$('#'+combo).on('selectFilled',function(event) {
		myFunction($("#"+combo).attr("id"));
	});
	myFunction(combo);
}
function setValueOfSelectToOtherSelectUNOOnLoad(selectFieldFrom,selectFieldTo){
	var onchange = $(selectFieldFrom).attr("onchange");
	if (!(typeof onchange !== typeof undefined && onchange !== false)) {
		onchange = "";
	}
	$(selectFieldFrom).attr("onchange", "setValueOfSelectToOtherSelectUNO(this,document.getElementById('"+$(selectFieldTo).attr("id")+"'));" + onchange);
}
function setValueOfSelectToOtherSelectUNO(selectFieldFrom,selectFieldTo){
	var selectedText = $(selectFieldFrom).find("option:selected").text();
	if(selectedText.toUpperCase()=='TODAS' || selectedText.toUpperCase() == 'TODOS'){
		$(selectFieldTo)[0].value = $(selectFieldTo).find("option:contains('UNO')")[0].value;
	}else{
		$(selectFieldTo)[0].value = $(selectFieldTo).find("option:contains('"+selectedText+"')")[0].value;
	}
}
function getCharacterPressed(event){
	//retorna el caracter presionado
	var keyunicode = !event.charCode ? event.which : event.charCode;
	var str = String.fromCharCode(keyunicode);
	return str;
}
function enmascararRadioButton(){
	var radio1= $("#extraField_importeAPagar_opt_0");
	var radio2= $("#extraField_importeAPagar_opt_1");
	var a = $(radio1).val();
	var b = $(radio2).val();
	var radioUno=a.split(" ");
	var radioDos=b.split(" ");
	var valor1=radioUno[1];
	var valor2=radioDos[1];
	var valorEnmascarado1=valor1.toString().replace(".",",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
	radio1.val("$"+" " +valorEnmascarado1);
	var valorEnmascarado2=valor2.toString().replace(".",",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
	radio2.val("$"+" " +valorEnmascarado2);
}


function selectFavoriteAccount(b1,c2){
  var colOculta= $(c2);
  var filas= colOculta.find("tbody").find("tr");
  var existChecked = false;
  var inputFavorita = null;
  for (var i = filas.length - 1; i >= 0; i--) {
    var fila=filas[i];
    var columnas=$(fila).find("td");
    var favorita=$(columnas[2]).text();
      var radio=$(columnas[0]);
      var input=radio.find("input");
      if (favorita=="No"|| favorita.trim()==""){
       if(input.is(":checked")){
          existChecked=true;
       }
     }else{
      inputFavorita = input;
     }
  }

  if(!existChecked){
    if(inputFavorita!=null){
     inputFavorita.attr("checked",true);
   }
     $(b1).prop("disabled", true);
  }

}

 
 

function enableDisableButton(b1,c2){  
  var colOculta= $(c2);
  var filas= colOculta.find("tbody").find("tr");
  
  for (var i = filas.length - 1; i >= 0; i--) {
    var fila=filas[i];
    var columnas=$(fila).find("td");
    var favorita=$(columnas[2]).text();
      var radio=$(columnas[0]);
      var input=radio.find("input");
       if (favorita=="No"||favorita.trim()==""){

     }else{
      var inputFavorita=radio.find("input");
     }
      $(input).on("change",function (e) {

          if(this.checked){

            if (inputFavorita!=undefined){

            if(this.value==inputFavorita.val()){
              $(b1).prop("disabled", true);
              $(b1).prop("style").cursor = "auto"
            }else{
              $(b1).prop("disabled", false);
              $(b1).prop("style").cursor = "pointer";
            }

            }else{
            $(b1).prop("disabled", false);
            $(b1).prop("style").cursor = "pointer";
            }

          }




      });
     

  };

}
 
function vtValidateCBU(elem,msg){

  earlyValidation.call(elem,msg,function(){
    
    var cbu = $(elem).val();

    if(cbu==""){
    return -1;
    }
    var retorno = false;
    var VEC1 = new Array(7, 1, 3, 9, 7, 1, 3);
    var VEC2 = new Array(3, 9, 7, 1, 3, 9, 7, 1, 3, 9, 7, 1, 3);
    var valido = false;
    var bloque1 = cbu.substring(0, 7);
    var digitoValidador1 = cbu.substring(7, 8);
    var bloque2 = cbu.substring(8, 21);
    var digitoValidador2 = cbu.substring(21);
    var acum = 0;
    if(cbu.length != 22){
        return 0; 
    }
    for (var i = 0; i < 7; i++) {
    acum += bloque1.substring(i, i + 1) * VEC1[i];
    }
    var strAcum = (acum + '');
    var digitoVCalculado1 = 10 - strAcum.substring(strAcum.length - 1);
    valido = (digitoVCalculado1 == digitoValidador1); 
    acum = 0;
    for (var i = 0; i < 13; i++) {
    acum += bloque2.substring(i, i + 1) * VEC2[i];
    }
    strAcum = (acum + '');
    var digitoVCalculado2 = 10 - strAcum.substring(strAcum.length - 1);
    if (digitoVCalculado2 == 10){ 
    digitoVCalculado2 = 0;
    }
    if (digitoVCalculado2 == 1){ 
    digitoVCalculado2 = 1;
    }
    if (valido = (digitoVCalculado2 == digitoValidador2) /*&& valido*/){ 
    retorno = true;
    }
    else{
      return 0; 
    }
    return -1;

  });
}
function vtMustCompleteAtLeastOne(e0, e1, msjElem) {
	var myFunction = function (isFromButton){
	    var e0HaveData = false;
	    if (getElementValue(e0)!=''&&getElementValue(e0)!='Ninguno') {
	        e0HaveData = true;
	    }
	    var e1HaveData = false;
	    if (getElementValue(e1)!=''&&getElementValue(e1)!='Ninguno') {
	        e1HaveData = true;
	    }
	    
	    if ( (e1HaveData && e0HaveData) || (!e1HaveData && !e0HaveData) ) {
	    	return 0;
	    }
	    return -1;
	};
	earlyValidation.call(e0,msjElem,myFunction,e1,true);
}
function vtValidateEitherField(elem1, elem2,msgElem) {
	var myFunction = function (){
			var elemValue1 = getElementValue(elem1);
			var elemValue2 = getElementValue(elem2);
		    var isntValid1 = elemValue1=="Ninguno" || elemValue1=="" || elemValue1=="false" || elemValue1==undefined || elemValue1==null;
		    var isntValid2 = elemValue2=="Ninguno" || elemValue2=="" || elemValue2=="false" || elemValue2==undefined || elemValue2==null;

			if(isntValid1 && isntValid2){
				return 0;
			}
		return -1;
	};
	earlyValidation.call(elem1,msgElem,myFunction,elem2,true);
}
function vtCompareElementsCaseSensitive(caseSensitive,elem1,elem2,msg,operator,target){
  var auxElem1 = $(elem1);
  var auxElem2 = $(elem2);
  var myFunction = function() {
    if($(auxElem1).is("span")){
        var val1 = $(auxElem1).text();
    } else {
        var val1 = getElementValue(auxElem1);
      }

    if($(auxElem2).is("span")){
        var val2 = $(auxElem2).text();
    } else {
        var val2 = getElementValue(auxElem2);
      }
      if(val1=="" || val2=="")
        return -1;
      if(caseSensitive=='false'){
        val1 = val1.toLowerCase();
        val2 = val2.toLowerCase();
      }
      if(operator=='='){
        return (val1 == val2) ? 0: -1;
      } else if(operator == '!=' || operator == '<>' ){
        return (val1 != val2) ? 0: -1;
      } else if(operator == '<'){
        return (val1 < val2) ? 0: -1;
      } else if(operator == '>'){
        return (val1 > val2) ? 0: -1;
      } else if(operator == '<='){
        return (val1 <= val2) ? 0: -1;
      } else if(operator == '>='){
        return (val1 >= val2) ? 0: -1;
      } else if(operator == 'contains'){
        return val1.indexOf(val2)!=-1 ? 0:-1;
      }  else {
        return -1;
      } 
    };
  if($(target)[0]==$(elem2)[0]){
      earlyValidation.call(elem2,msg,myFunction,elem1);
  }else{
      earlyValidation.call(elem1,msg,myFunction,elem2);
  }
}
function vtValidateNotContainsNombres(apellido,claveNueva,msg,nombre,target) {
  var claveNuevaAux=$(claveNueva);
  var apellido = $(apellido).text();
  var nombre = $(nombre).text();

  earlyValidation.call(target,msg,function() {
      claveNuevaVal = $(claveNuevaAux).val();
      if(claveNuevaVal.length>3){
          var nombres = (nombre.toLowerCase() + " " + apellido.toLowerCase()).split(" ");
            var valorclaveLower = claveNuevaVal.toLowerCase();
          for (name in nombres){
            if((nombres[name].length > 3) && ((valorclaveLower.indexOf(nombres[name])) >= 0)){
              return 0;
            }
          }
      }
      return -1;
  });
}
function vtValidateThreeConsecutiveAscODesc(claveNueva,msg,target) {
  var claveNuevaAux=$(claveNueva);

  earlyValidation.call(target,msg,function() {
    var claveNuevaVal = $(claveNuevaAux).val();
    if(claveNuevaVal==""){
    return -1;
    }
    if(new RegExp(/012{1,}|123{1,}|234{1,}|345{1,}|456{1,}|567{1,}|678{1,}|789{1,}|987{1,}|876{1,}|765{1,}|654{1,}|543{1,}|432{1,}|321{1,}/).test(claveNuevaVal)){
        return 0;
    }
    return -1;
  });
}
function vtValidateThreeConsecutiveRepeat(elem,msg,target) {
  var claveNuevaAux=$(elem);
  earlyValidation.call(target,msg,function() {
    var claveNuevaVal = $(claveNuevaAux).val();
    if(claveNuevaVal==""){
    return -1;
    }
    if(new RegExp(/0{3,}|1{3,}|2{3,}|3{3,}|4{3,}|5{3,}|6{3,}|7{3,}|8{3,}|9{3,}|A{3,}|B{3,}|C{3,}|D{3,}|E{3,}|F{3,}|G{3,}|H{3,}|I{3,}|J{3,}|K{3,}|L{3,}|M{3,}|N{3,}|Ñ{3,}|O{3,}|P{3,}|Q{3,}|R{3,}|S{3,}|T{3,}|U{3,}|V{3,}|W{3,}|X{3,}|Y{3,}|Z{3,}|a{3,}|b{3,}|c{3,}|d{3,}|e{3,}|f{3,}|g{3,}|h{3,}|i{3,}|j{3,}|k{3,}|l{3,}|m{3,}|n{3,}|ñ{3,}|o{3,}|p{3,}|q{3,}|r{3,}|s{3,}|t{3,}|u{3,}|v{3,}|w{3,}|x{3,}|y{3,}|z{3,}|!{3,}|"{3,}|#{3,}|\${3,}|%{3,}|\&{3,}|\({3,}|\){3,}|\*{3,}|\+{3,}|,{3,}|-{3,}|\.{3,}|\/{3,}|:{3,}|;{3,}|<{3,}|={3,}|>{3,}|\?{3,}|@{3,}|\{{3,}|\|{3,}|\}{3,}|~{3,}|\[{3,}|\]{3,}|\^{3,}|\_{3,}|\'{3,}|`{3,}/).test(claveNuevaVal)){
        return 0;
    }
    return -1;
  });
}
function vtValidateAtLeastOneNumberAndLetter(elem,msg,target) {
  var claveNuevaAux=$(elem);
  earlyValidation.call(target,msg,function() {
	  claveNuevaVal = $(claveNuevaAux).val();
	  if((claveNuevaVal != "") && !(new RegExp(/^(?=.*[0-9])(?=.*[a-zA-Z ñÑáéíóúÁÉÍÓÚ])([\S]+)$/).test(claveNuevaVal))){
	      return 0;
	  }
	  return -1;
  });
}
function vtValidateDatosPersonales(dni,elem,fecha,msg,target) {
  var claveNuevaAux=$(elem);
  var fecha = $(fecha).text();
  var dni = $(dni).text();
  earlyValidation.call(target,msg,function() {
	  claveNuevaVal = $(claveNuevaAux).val();
	  //vaidacion que la clave no contenga el dni
	  if((dni != "") && (claveNuevaVal.indexOf(dni) >= 0)){
	      return 0;
	  }
	    //validacion datos personales
	    var Exp = new RegExp(/^(\d{1,2})\/(\d{1,2})\/(\d{4})$/); // fecha dd/mm/yyyy
	  if(claveNuevaVal != "" && fecha != "" && Exp.test(fecha)){
	    var dd = fecha.split('/')[0];
	    var mm = fecha.split('/')[1];
	    var aaaa = fecha.split('/')[2];
	    var aa = fecha.split('/')[2].substring(2,4);

	    var valorclaveActual = claveNuevaVal;
	    if (valorclaveActual.indexOf(aaaa+mm+dd) != -1 ||
	      valorclaveActual.indexOf(aaaa+dd+mm) != -1 ||
	      valorclaveActual.indexOf(dd+mm+aa) != -1 ||
	      valorclaveActual.indexOf(dd+aa+mm) != -1 ||
	      valorclaveActual.indexOf(mm+dd+aa) != -1 ||
	      valorclaveActual.indexOf(mm+aa+dd) != -1 ||
	      valorclaveActual.indexOf(aa+dd+mm) != -1 ||
	      valorclaveActual.indexOf(aa+mm+dd) != -1 ||
	      valorclaveActual.indexOf(dd+mm+aaaa) != -1 ||
	      valorclaveActual.indexOf(dd+aaaa+mm) != -1 ||
	      valorclaveActual.indexOf(mm+dd+aaaa) != -1 ||
	      valorclaveActual.indexOf(mm+aaaa+dd) != -1){
	        return 0;
	    }
	  } 
	  return -1;
  });
}
function vtValidarCuotas(elem, msg) {
	earlyValidation.call(elem,msg,function(){
		var elemValue;
		if("checkbox"==elem.attr("type")){
			elemValue=elem.is(':checked') ;
		} else {
			elemValue = elem.val();
			if (elemValue==undefined){
				elemValue= elem.options[elem.selectedIndex].value;
			}
		}
		var isReadOnly= elem.prop("readonly")	
		var isntValid = !isReadOnly && (elemValue=="Ninguno" || elemValue=="" || elemValue=="false" || elemValue==="$0,00" || elemValue==="$ 0,00" || elemValue==="0" || elemValue==="0.0" )

		if(isntValid){
			return 0;	
		}
		return -1;
	});
	
}
function vtCompareElemRangeTwoValues(elem,errorMsg,valMay,valMen){
  CB.automask.decSeparator=',';CB.automask.thousSeparator='.';
  var valMayMasked = CB.automask.setMask(valMay,"#,##0.00");
  var valMenMasked = CB.automask.setMask(valMen,"#,##0.00");
  earlyValidation.call(elem,"El importe debe ser mayor a $" + valMenMasked + " y menor a $" + valMayMasked,function(){
    if ((elem != "")&&(valMen != "")&&(valMay != "")){
      var valor = parseFloat($(elem).attr("unmasked"));
      parseFloat(valMen);
      parseFloat(valMay);
      
      if ((valor < valMen)||(valor>valMay)){
        return 0;
      }
      return -1;
    }
    if(!isNaN(valMay) && !isNaN(valMen) && (elem != "")){
    var valor = parseFloat($(elem).attr("unmasked"));
      parseFloat(valMen);
      parseFloat(valMay);
      
      if ((valor < valMen)||(valor>valMay)){
        return 0;
      }
    }
    return -1; 
  });
}
function vtValidateField(elem, msg) {
	earlyValidation.call(elem,msg,function(){
		var elemValue = getElementValue(elem)
		var isReadOnly= elem.prop("readonly")	
		var isntValid = !isReadOnly && (elemValue=="Ninguno" || elemValue=="" || elemValue=="false")

		if(isntValid){
			return 0;
		}
		return -1;
	});
}
function vtValidateCBUdependRadioButton(elem,msg,radio) {
  var nombre=document.getElementById(radio[0].id);
  var id_opt1=nombre.id+"_opt_0";
  var radio_op1=document.getElementById(id_opt1);

  earlyValidation.call(elem,msg,function(){

  if(radio_op1.checked==true){

    
    var cbu = $(elem).val();
    if(cbu==""){
    return -1;
    }
    var retorno = false;
    var VEC1 = new Array(7, 1, 3, 9, 7, 1, 3);
    var VEC2 = new Array(3, 9, 7, 1, 3, 9, 7, 1, 3, 9, 7, 1, 3);
    var valido = false;
    var bloque1 = cbu.substring(0, 7);
    var digitoValidador1 = cbu.substring(7, 8);
    var bloque2 = cbu.substring(8, 21);
    var digitoValidador2 = cbu.substring(21);
    var acum = 0;
    if(cbu.length != 22){
        return 0; 
    }
    for (var i = 0; i < 7; i++) {
    acum += bloque1.substring(i, i + 1) * VEC1[i];
    }
    var strAcum = (acum + '');
    var digitoVCalculado1 = 10 - strAcum.substring(strAcum.length - 1);
    valido = (digitoVCalculado1 == digitoValidador1); 
    acum = 0;
    for (var i = 0; i < 13; i++) {
    acum += bloque2.substring(i, i + 1) * VEC2[i];
    }
    strAcum = (acum + '');
    var digitoVCalculado2 = 10 - strAcum.substring(strAcum.length - 1);
    if (digitoVCalculado2 == 10){ 
    digitoVCalculado2 = 0;
    }
    if (digitoVCalculado2 == 1){ 
    digitoVCalculado2 = 1;
    }
    if (valido = (digitoVCalculado2 == digitoValidador2) /*&& valido*/){ 
    retorno = true;
    }
    else{
      return 0; 
    }
    return -1;

  }
  return -1;
  });
}
function vtValidateEitherFieldUniqueMsg(elem1, elem2,msgElem) {
	if($(elem1).length>0 && $(elem2).length>0){
	var myFunction = function (){
			var elemValue1 = getElementValue(elem1);
			var elemValue2 = getElementValue(elem2);
		    var isntValid1 = elemValue1=="Ninguno" || elemValue1=="" || elemValue1=="false" || elemValue1==undefined || elemValue1==null;
		    var isntValid2 = elemValue2=="Ninguno" || elemValue2=="" || elemValue2=="false" || elemValue2==undefined || elemValue2==null;

			if(isntValid1 && isntValid2){
				return 0;
			}
		return -1;
	};
	earlyValidation.call(elem1,msgElem,myFunction,elem2,true);
	}
}
function vtValidateRequiredDependant(elem1, elem2,msgElem) {
  earlyValidation.call(elem1,msgElem,function (){
      var elemValue1 = getElementValue(elem1);
      var elemValue2 = getElementValue(elem2);
        var isntValid1 = elemValue1=="Ninguno" || elemValue1=="" || elemValue1=="false" || elemValue1==undefined || elemValue1==null;
        var isntValid2 = elemValue2=="Ninguno" || elemValue2=="" || elemValue2=="false" || elemValue2==undefined || elemValue2==null;

      if(isntValid1 && !isntValid2){
        return 0;
      }
    return -1;
  },elem2);
  earlyValidation.call(elem2,msgElem,function (){
      var elemValue1 = getElementValue(elem1);
      var elemValue2 = getElementValue(elem2);
        var isntValid1 = elemValue1=="Ninguno" || elemValue1=="" || elemValue1=="false" || elemValue1==undefined || elemValue1==null;
        var isntValid2 = elemValue2=="Ninguno" || elemValue2=="" || elemValue2=="false" || elemValue2==undefined || elemValue2==null;

      if(isntValid2 && !isntValid1){
        return 0;
      }
    return -1;
  },elem1);
}
function invalidateButtonSelectCuotas(button,collTable){
    var countCuotasSelected = 0;
    $(collTable).find("tbody tr td:nth-child(1) input").each(function(i,elem){
        if(elem.checked){
            countCuotasSelected++;
        }
        $(elem).on("change",function(){
        	var aux=0;
        	var lista=$(collTable).find("tbody tr td:nth-child(1) input");
        	for (var x = lista.length - 1; x >= 0; x--) {
        		if(lista[x].checked){
        			aux++;
        		}
        	};
        	countCuotasSelected=aux;
        	$(button).attr("cuotasseleccionadas",countCuotasSelected);

	            if(parseInt($(button).attr("cuotasseleccionadas"))<=0){
		$(button).prop("style").cursor = "default";
	                $(button).attr("disabled","");
	            }else{
	                $(button).removeAttr("disabled");
		$(button).attr("style","cursor: pointer");
	            }
        });
    });



    $(button).attr("cuotasseleccionadas",countCuotasSelected);
    if(parseInt(countCuotasSelected)<=0){
        $(button).attr("disabled","");
	$(button).prop("style").cursor = "default";
    }else{
        $(button).removeAttr("disabled");
	$(button).attr("style","cursor: pointer");
    }
}

function clickRadioToDisabledEnabledButtonAndCheck(button,checkbox, colection){
	var radioselected = false;
	$(colection).find("tbody tr td:nth-child(1) input").each(function(i,elem){
        if(elem.checked){
            radioselected=true;
        }
        $(elem).on("change",function(){
			if (this.checked){
				if($(checkbox).is(':checked')){
					$(button).removeAttr("disabled");
				}
				else {
					 $(button).attr("disabled","");
				} 
			}
        });
    });
    $(checkbox).on("change",function(){
		if (this.checked){
			var radioselecteda = false;
	    	$(colection).find("tbody tr td:nth-child(1) input").each(function(i,elem){
		        if(elem.checked){
		            radioselecteda=true;
		            return;
		        }
	    	});
			if (this.checked && radioselecteda){
				$(button).removeAttr("disabled");
			}
			else {
				 $(button).attr("disabled","");
			} 
		}else{
				 $(button).attr("disabled","");
		}
    });
	var checkTyC = $(checkbox).is(':checked');
	if (radioselected && checkTyC){
		$(button).removeAttr("disabled");
	} else {
		 $(button).attr("disabled","");
	} 
}
 


function vtCompareRangeDate(date1,date2,meses,msg,target){
  	var target2 = null;
	if($(date1).attr("id")==$(target).attr("id")){
		target2 = date2;
	}else{
		target2 = date1;
	}
    if ($(target).attr("id")==$(date2).attr("id")){
 earlyValidation.call(target,msg,function(){
//	if(fecha1=="" && fecha2==""){
    //    return -1;
  //  }

	var fecha1 = $(date1).val();
	var startDate = parseDate(date1.val());

	 if (startDate!=null){
    var range = parseInt(meses)+1;
    
    var fecha2 = $(date2).val();
    var today = new Date();
   
    var endDate = today;

    var startMonth = startDate.getMonth() + 1;

    var endMonth = endDate.getMonth() + 1;

    var starYear = startDate.getFullYear();

    var endYear = endDate.getFullYear();

    var numMeses = endYear * 12 + endMonth - (starYear * 12 + startMonth);

    if (endYear < starYear) {
        numMeses = numMeses - 1;
    }
 
    	 if(fecha2=="" || parseDate(date2.val())==null){
        return -1;
        }
	    if (parseDate(fecha2)< parseDate(fecha1) && parseDate(fecha2)<today) {
	    	return 0;
	    }else{
	    	return -1;
	    }

}else {
	return -1;
}
  },target2);


	}else{
 earlyValidation.call(target,msg,function(){
//	if(fecha1=="" && fecha2==""){
    //    return -1;
  //  }

	var fecha1 = $(date1).val();
	var startDate = parseDate(date1.val());

	 if (startDate!=null){
    var range = parseInt(meses)+1;
    
    var fecha2 = $(date2).val();
    var today = new Date();
   
    var endDate = today;

    var startMonth = startDate.getMonth() + 1;

    var endMonth = endDate.getMonth() + 1;

    var starYear = startDate.getFullYear();

    var endYear = endDate.getFullYear();

    var numMeses = endYear * 12 + endMonth - (starYear * 12 + startMonth);

    if (endYear < starYear) {
        numMeses = numMeses - 1;
    }
 

		if(fecha1==""){
        return -1;
        }
		 if (numMeses >= range && parseDate(fecha1)<today){
	    	return 0;
	    }else{
	    	return -1;
	    }
	

	}else {
		return -1;
	}
  },target2);
	}
}

function vtValidateParamRangeMin(elem,min,msg,target) {
  var elemAux = $(elem);
  earlyValidation.call(target,msg,function() {
  if($(elemAux).val() == "")
    return -1;
  if((parseFloat($(elemAux).val().replace("$","").replace(/\./g,"").replace(",",".")) < parseFloat(min))){
      return 0;
      }
      return -1;
  });
  }
function vtValidateRadioButton(msg,radio){
    earlyValidation.call(radio,msg,function(){
        var hasChecked = false;
        $(radio).find("input[type='radio']").each(function(i,elem){
            if(elem.checked){
                hasChecked = true;
                return;
            }
            $(elem).on("click",function(){
			    if ($(this).is(':checked'))
			    {
            		$(msg).css("display","none");
            	}
            });
        });
        return hasChecked;
    });
}
function updateDependentSelectFieldByInput(input,select){
  	var value = $(input).attr("lastValue");
	var newValue = $(input).val();
	$(input).attr("lastValue",$(input).val());
	copyToUnmasked(document.getElementById($(input).attr('id')));
	if(value!=newValue){
		var dependentFields = new Array($(select).prop("id"));
		clearField(dependentFields);
		window.status = traducir("Ejecutando...");
		if (procesando == false) {
			setProcesando(true);
			timerId = window.setTimeout('setProcesando(false)', 7000);
		}
		var parameters = encodeForm(getDocumentIDForm());
		for (var i = 0; i < dependentFields.length; i++)
			makePOSTRequest('index', parameters, dependentFields[i],false);
	}
	$.hideprogress();
}
function avatarSeleccionado(component){
   var avatarSelected = $(component).find("div.actualAvatar").find("img");
  var seleccionada=avatarSelected.attr("src");
   var carpetas=seleccionada.split("/");
   var lon=carpetas.length;
   var nombreSeleccionada=carpetas[lon-1];
   var grilla= $(component).find("div.avatarList").find("img");
   var eligio=false;
for (var i = grilla.length - 1; i >= 0; i--) {
   var ruta=$(grilla[i]).attr("src");
   var carpetasGrilla=ruta.split("/");
   var lon1=carpetasGrilla.length;
   var imagenGrilla=carpetasGrilla[lon1-1];
    if (imagenGrilla==nombreSeleccionada){
      eligio=true;

    break;
    }

  
  }

 return eligio;

}
 
function setTabAndAltAvatar(component){
   var avatarSelected = $(component).find("div.actualAvatar").find("img");
  var seleccionada=avatarSelected.attr("src");
   var carpetas=seleccionada.split("/");
   var lon=carpetas.length;
   var nombreSeleccionada=carpetas[lon-1];
   var parte=nombreSeleccionada.split(".");
   var descripcion=parte[0];
   var b = $(avatar_selection_component).find("div.actualAvatar").find("div.actualAvatarLabel").find("label");

   $(avatarSelected).attr("alt",descripcion);



}

 
function enableDisableAvatarButton(b1,c2){  
  var grilla= $(c2).find("div.avatarList").find("img");
  if (!avatarSeleccionado(c2)){
      $(b1).prop("disabled", true);
      $(b1).prop("style").cursor = "auto"
  }
  for (var i = grilla.length - 1; i >= 0; i--) {
    var imagen=grilla[i];
          $(imagen).on("click",function (e) {
          if ($(this).prop("onclick")!=null){
              $(b1).prop("disabled", false);
              $(b1).prop("style").cursor = "pointer";
          }
      });
     $(imagen).keypress(function (e) {
          if (e.keyCode == 13){
            if ($(this).prop("onclick")!=null){
              $(this).click();
              $(b1).prop("disabled", false);
              $(b1).prop("style").cursor = "pointer";
            }         
          }
    });

  };

}
 
function setTabIndex(elem,tab){
	$(elem).attr("tabindex",tab);
}
function opcionTodosPorDefecto(combo){
    var opts_list = $(combo).find("option");
    opts_list.sort(function(a, b) { return a.innerHTML > b.innerHTML ? 1 : -1; });
    $(combo).empty().append(opts_list);

    var optionTodas = opts_list.filter(function(i, e) { return e.innerHTML == "Todos"});
    var optionNinguna = opts_list.filter(function(i, e) { return e.innerHTML == "Seleccioná un canal"});
    if (optionTodas && optionNinguna) {
        var newTag = "<option value="+optionTodas.val()+">Todos</option>";
        var newTagFirst="<option value="+optionNinguna.val()+">Seleccioná un canal</option>";
        optionNinguna.remove();
        optionTodas.remove();
        $(combo).prepend(newTag);
        $(combo).val(optionTodas.val());
        $(combo).prepend(newTagFirst);
        $(combo).val(optionNinguna.val());
    }
}

function hideOrShowDependingOnSelectValue(elem, select){

	var elem=$(elem);
	var valor=$(select).val();

	if (valor=="Ninguno"){	
		hideElement(elem);	
	}
}

function hideOrShowEmptyWhenLoadSelect (elem, select){
	$(select).on('selectFilled',function(event){
				if((this.options==null ||
				(this.options.length==1 && this.options[0].value == 'Ninguno'))){
					hideElement(elem);
				}else{
					showElement(elem);
				}

		});
}
function openSaltoDeSitioFCI(token){
	var tokenString=$(token).val();
	if(tokenString != ''){
		var urlToSite = FCIUrl +"?TokenIOSE="+ tokenString;
		var win = window.open(urlToSite);
			if (win) {
				win.focus();
			}
			$(token).val('');
}
}
function invokerleaveSite(origin,token,version){
 window.open("./pages/leaveSite.jsp?token="+$(token).val()+"&origin="+origin+"&version="+version+""," ", "_blank", "toolbar=yes,scrollbars=yes,resizable=yes,width=800,height=620,left=0,top=0,location=no");
}

 
function downloadPdfFile(archivo){
	downloadPdf(archivo);
}

function noReloadDependentOnSelectNinguno(elem){
	var onchange = $(elem).attr("onchange");
	if(onchange===undefined){
		onchange = "";
	}
	$(elem).attr("onchange","if(this.value=='Ninguno'){return false;};"+onchange);
}
function setTabIndexRepeatableSection(id,section,tab) {
    //Guarda los id de las secciones
    var sectionCollection = $(".repeteableSection");
    for (var i = 0; i < sectionCollection.length; i++) {
        //Guarda id del elemento indicado de cada sección
		var sectionElement = $("#"+$(sectionCollection[i]).attr("id") +"_"+ id);
		if(sectionElement != null){
			//Cada elemento deberia tener la forma ej. "sectionDetalleTarjetas_repeat0_tableAlignName2"
			$(sectionElement).attr("tabindex",tab);
		}
    }
}
function refreshHomePage(){ 
	if(showSessionTimeOutLayout){
		setTimeout(function(){$('#textField1').removeAttr('onblur');},100);
		showSessionTimeOutLayout=false;
	}
	
	var reloadTime = 435000;   	
		setTimeout(function(){
			if($('#isLandpage').val()=='true'){
				location.reload();
				}
			},reloadTime);
}
function vtValidateEitherPhoneUniqueMsg(area1,area2,msgElem,tel1, tel2) {
	if($(tel1).length>0 && $(tel2).length>0 && $(area2).length>0 && $(area1).length>0){
	var myFunction = function (isFromButton){
			var elemValue1 = getElementValue(area1);
			var elemValue2 = getElementValue(area2);
			var elemValue3 = getElementValue(tel1);
			var elemValue4 = getElementValue(tel2);
		    var isntValid1 = elemValue1=="Ninguno" || elemValue1=="" || elemValue1=="false" || elemValue1==undefined || elemValue1==null;
		    var isntValid2 = elemValue2=="Ninguno" || elemValue2=="" || elemValue2=="false" || elemValue2==undefined || elemValue2==null;
		    var isntValid3 = elemValue3=="Ninguno" || elemValue3=="" || elemValue3=="false" || elemValue3==undefined || elemValue3==null;
		    var isntValid4 = elemValue4=="Ninguno" || elemValue4=="" || elemValue4=="false" || elemValue4==undefined || elemValue4==null;

			if(isntValid1 && isntValid2 && isntValid3 && isntValid4 && isFromButton){
				return 0;
			}
		return -1;
	};
	earlyValidation.call(tel1,msgElem,myFunction,tel2,true);
	earlyValidation.call(tel1,msgElem,myFunction,area1,true);
	earlyValidation.call(tel1,msgElem,myFunction,area2,true);
	earlyValidation.call(tel2,msgElem,myFunction,area1,true);
	earlyValidation.call(tel2,msgElem,myFunction,area2,true);
	earlyValidation.call(area1,msgElem,myFunction,area2,true);
	}
}
function vtValidateParamRangeMinRadio(elem,index,min,msg) {

  var idRadio = $(elem).attr('id');
  var idInput = "#extraField_"+idRadio+"_opt_"+index;
  var radio = idRadio+"_opt_"+index;
  earlyValidation.call($(idInput),msg,function() {
    if($('#'+radio).is(":checked")==true){
      var dato = $(idInput).val();
      if(dato == ""){
        return -1;
      }
      if(parseFloat(dato.replace("$","").replace(/\./g,"").replace(",",".")) < parseFloat(min)){
          return 0;
      }
    }
    return -1;
  });
}
function setOnInputClearOtherInput(inputToClear,inputToListen){
  $(inputToListen).on("input",function(){
    clearError(null,$(inputToClear));
    $(inputToClear).val("");
    var unmasked = $(inputToClear).attr('unmasked');
    if (unmasked != undefined) {
      $(inputToClear).attr("unmasked","");
    }
  });
  if($(inputToListen).hasClass("niceCalendar")){
    $(inputToListen).on("dateset",function(){
        clearError(null,$(inputToClear));
      $(inputToClear).val("");
      var unmasked = $(inputToClear).attr('unmasked');
      if (unmasked != undefined) {
        $(inputToClear).attr("unmasked","");
      }
    });
  }
} 
function setAriaLabelInCollection(texto){
	var listTd = $(".collection-column_selectable-arrow");
	if(texto == "" || texto == null || texto == "null"){
		texto = "Botón. Ir a detalle"
	}else{
		if(texto.indexOf("Botón") == -1){
			texto="Botón. "+texto;
		}
		
	}
	for (var i = 0; i < listTd.length; i++) {
		$(listTd[i]).attr("aria-label",texto)
	};
	objAriaLabel = {
		textoAria:texto
	}
}
function setAltInIcon(elem,texto){
	if(texto == "null"){
		texto="";
	}
	$(elem).find("img").attr("alt",texto);
}
function goToLogin(){
	window.location.href = "./";
}
function buildKeyAliasCoord(amount,coordinate1,coordinate2,coordinateDisplay1,coordinateDisplay2,docNumber,docType,inputDest,serialNumber,useType){
    var dest = $(inputDest);
    var amount=String(amount);
    var coordinate1= String(coordinate1);
    var coordinate2= String(coordinate2);
    if(coordinate1.length==1){
    	coordinate1="0"+coordinate1;
    }
    if(coordinate2.length==1){
    	coordinate2="0"+coordinate2;
    }
    var coordinateDisplay1=coordinateDisplay1;
    var coordinateDisplay2=coordinateDisplay2;
    var docType = docType;
    var docNro = docNumber;
    var serialNumber=serialNumber;
    var useType=useType;
    var result = docType+";"+docNumber+";"+amount+";"+coordinate1+";"+coordinate2+";"+coordinateDisplay1+";"+coordinateDisplay2+";"+serialNumber+";"+useType;
    dest.val(result);
    }
function keyValueCoord(inputDest,inputOrigin1,inputOrigin2){
	var origin1 = $(inputOrigin1);
	var origin2 = $(inputOrigin2);
	var dest = $(inputDest);
	var result = origin1.val()+";"+origin2.val();
	dest.val(result);
}
function deleteText(element){
	if(!localStorage.getItem("textoOriginal"))
	{
			localStorage.setItem("textoOriginal",$(element).val())
	}
	var textoOriginal = localStorage.getItem("textoOriginal");
	var textoNuevo = $(element).val();
	if(textoOriginal == textoNuevo)
	{
		$(element).val("");
	}

}
function disableActionButtonSecondFactor(IdActionButton){
            $("#"+IdActionButton).prop("disabled", true);       
}
function ActivateActionButtonSecondFactor(IdActionButton){
            $("#"+IdActionButton).prop("disabled", false);       
            $("#actionButtonSecondFactorConfirmation").attr("style","cursor: pointer")
}
function moveUpLinkSecondFactorToken(){

	var linkaSubir = $("#messageC2m");
	var error= $("#errorPanelCollection");
		if (linkaSubir!=undefined && linkaSubir.length>0 && error!=undefined && error.length>0){
		linkaSubir.css("padding-left","60px");
		$(errorPanelCollection).prop("class","error-panel_default_red errors-collection-table_error no-margin")
		error.after(linkaSubir);
	}
}
function openLogin(){
	var urlToSite=EnrolamientoUrl;
	location.href=urlToSite;
}
 
function eliminarItemLocalStorage()
{
	localStorage.removeItem("textoOriginal");
}
 
function openSaltoPayPal(preaprovalKey, token) {
    
    var actualLocation = window.location.href;
    actualLocation = actualLocation.replace("#", "");
    actualLocation = actualLocation.replace("sso", "");
	


    var urlToSite = actualLocation + 'pages/pyp/pyp_popup.jsp?' + 'preapprovalkey=' + preaprovalKey + '&token=' + token + '&paypalUrl='+PaypalUrl+'?cmd=_ap-grant-permissions';

    var posicion_x;
    var posicion_y;
    var ancho = 700;
    var alto = 500;
    posicion_x = (screen.width / 2) - (ancho / 2);
    posicion_y = (screen.height / 2) - (alto / 2);

    window.open(urlToSite, '_blank', "width=" + ancho + ",height=" + alto + ",menubar=0,toolbar=0,directories=0,scrollbars=no,resizable=no,left=" + posicion_x + ",top=" + posicion_y + "");

}
function setPypCallbackURL(elem){
	var actualLocation = window.location.href;
	actualLocation = actualLocation.replace("#", ""); 
	actualLocation = actualLocation.replace("sso", ""); 
	
	$(elem).val(actualLocation+"pages/pyp/pyp_callback.jsp")
   	
}
function setDynamicAvatarAlt(elem){
    var avatarArray = ["Perro de frente de cuerpo entero.","Pelota inflable playera flotando en agua.","Detalle de bola 8 de pool rodeada de otras bolas.","Rugbier pateando la pelota hacia el arco.","Persona surfeando una ola.","Persona haciendo una pirueta de snowboard.","Detalle de cabeza de gato tricolor.","Auto antiguo.","Persona esquiando.","Gato atigrado.","Persona saltando con la bicicleta.","Detalle de guitarra criolla.","Pelota de basquet entrando en el aro.","Paisaje de lago y montañas nevadas.","Detalle de flor con petalos rosas y centro amarillo.","Detalle de juego resorte.","Detalle del frente de auto rojo.","Persona navegando en kayak.","Detalle de cabeza de perro.","Campo de tulipanes.","Detalle de guitarra eléctrica.","Perro sacando la lengua.","Paisaje de mar con sombrilla multicolor.","Persona saltando entre dos montañas.","Golosina gomitas masticables.","Estrella de mar.","Pie pisando una pelota de fútbol.","Gatito gris y blanco.","Detalle de raqueta sobre pelota de tenis.","Molinillo de juquete multicolor.","Auto rojo.","Hombre nadando en una pileta.","Parte trasera de auto rojo.","Plato de ensalada.","Pelota de fútbol en la red del arco.","Detalle de petalos de rosa.","Palo de jockey y pelota.","Bandoneon.","Cabeza de perro marrón.","Cabeza de robot de juguete.","Flor violeta."];
    function setAlt(img){
        var indexImg = $(img).attr("src");
        indexImg = indexImg.substring(indexImg.lastIndexOf("/")+1,indexImg.indexOf(".jpg"));
        if(indexImg!=""){
            $(img).attr("alt",avatarArray[Number(indexImg)-1]);
        }
    }
    if($(elem).is("img")){
        setAlt(elem);
    }else{
        $(elem).find("img").each(function(){
            setAlt(this);
        });
    }
}
function vtValidateMinWoSpaces(elem,min,msg){
	earlyValidation.call(elem,msg,function(){
        if($(elem).val()==""){
            return true;
        }
        return $(elem).val().replace(/ /g,"").length >= Number(min);
	});
}
function vtCompareElementAndEntityWithMsg(elem, entity, msg, operator){
    var msg = msg.replace("VALUE",entity);
    earlyValidation.call(elem,msg,function(){
        var compare = {
            "=": function (x, y) { return x == y },
            "<": function (x, y) { return x < y },
            ">": function (x, y) { return x > y },
            ">=": function (x, y) { return x >= y },
            "<=": function (x, y) { return x <= y },
            "<>": function (x, y) { return x != y }
        };
        if(getElementValue(elem)==""){
        return -1;
        }
        strEx = elem.val().replace(".","").replace(",",".");
        if(compare[operator](parseFloat(strEx),entity)){
            return 0;
        } else{
            return -1;
        }
    });
}
function vtCompareElementPlusEntityAndEntity(elem, entity, msg, operator, plusentity){
   
    var msg = msg.replace("VALUE",entity);
    earlyValidation.call(elem,msg,function(){
        var compare = {
            "=": function (x, y) { return x == y },
            "<": function (x, y) { return x < y },
            ">": function (x, y) { return x > y },
            ">=": function (x, y) { return x >= y },
            "<=": function (x, y) { return x <= y },
            "<>": function (x, y) { return x != y }
        };
        if(getElementValue(elem)==""){
        return -1;
        }
        if(compare[operator]((parseInt(getElementValue(elem))+parseInt(plusentity)),entity)){
            return 0;
        } else{
            return -1;
        }
    });
}
function showHidePass(elem){
    if(!$(elem).next("button").length){
        $(elem).after(
            "<button tabindex='-1' type='button' class='action-button_icon show-pass'></button>"
        );   
    }

    $(elem).next("button").click(function(event){
        if($(this).hasClass("show-pass")){
        $(this).prev(elem).attr("type","text");
        $(this).removeClass("show-pass");
        $(this).addClass("hide-pass");
        }else{
        $(this).prev(elem).attr("type","password");
        $(this).removeClass("hide-pass");
        $(this).addClass("show-pass");
        }

        event.stopPropagation();
    });
}
function setCookie(name, value){
	setCookieName(name, value, 365);
}
function deleteCookie(name){	setCookieName(name, '', -1); }
function checkBoxCondition3(elem){
	if (elem != ""){
		var d = $(elem).find("tbody").find("tr");
		for (i = 0; i < d.length; i++){
			var q = $(d[i]);
			q = q.find("td");
			q = q[q.length-1]
			if (q.innerHTML == "No adherido"){
				var j = d[i];
				j = j.firstChild;
				j = j.firstChild;
				j.removeAttribute("onclick");
				j.remove("type");
				}
			}
		}
	}
function diferenciaEntreFechas(fecha,texto)
{
	var hoy = new Date();
	var dd = hoy.getDate();
	var mm = hoy.getMonth()+1; 
	var yyyy = hoy.getFullYear();

	if(dd<10) {
    	dd="0"+dd;
	} 

	if(mm<10) {
    	mm="0"+mm;
	} 

	hoy = dd+"/"+mm+"/"+yyyy;
	
	var fechaFinal = $(fecha).text()
	var resultado="";
		if(hoy && fechaFinal)
		{
			inicial=hoy.split("/");
			final=fechaFinal.split("/");
			var dateStart=new Date(inicial[2],(inicial[1]-1),inicial[0]);
            var dateEnd=new Date(final[2],(final[1]-1),final[0]);
            if(dateStart<dateEnd)

            {
            	resultFinal=(((dateEnd-dateStart)/86400)/1000);

            	if (resultFinal==1)
            	{
            	resultado=fechaFinal+" "+"- La aprobación expira en "+resultFinal+" día";
            	}
            	else
            	{
            	resultado=fechaFinal+" " +"- La aprobación expira en "+resultFinal+" días";
            	}
			}else{
				resultado=fechaFinal+" "+"- La aprobación expirará hoy";
			}
			$(texto).text(resultado);
		}

}
function concatText(monto,msjNuevo)
{
	var monto = $(monto).text()
	resultado= monto +" o su equivalente en pesos";
	$(msjNuevo).text(resultado)
}

 
function maskRichTextAmount(cantidad){

	for (var i = cantidad - 1; i >= 0; i--) {
	var numeroId=i+1;
	var dato=$("#i"+numeroId).text();

	if(isNaN(dato) == false && dato != null && dato != ""){
		dato = parseFloat(dato);

		if(typeof d === "undefined" || d<0){
		   	d = 2;
		
		}
	var enmascarado = dato.toFixed(d).toString().replace(".",",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");

	$("#i"+numeroId).text(enmascarado);
	}

	};

}


 function vtCompareElementAndEntityWithMsg2(elem, entity, entity2, msg, operator){
    var msg = msg.replace("VALUE",entity2);
    earlyValidation.call(elem,msg,function(){
        var compare = {
            "=": function (x, y) { return x == y },
            "<": function (x, y) { return x < y },
            ">": function (x, y) { return x > y },
            ">=": function (x, y) { return x >= y },
            "<=": function (x, y) { return x <= y },
            "<>": function (x, y) { return x != y }
        };
        if(getElementValue(elem)==""){
        return -1;
        }
        strEx = elem.val().replace(",",".");

        if (compare[operator](parseFloat(strEx),entity)){
        	return -1;
    	}else{
    		var montoIngresado=parseFloat(strEx) + entity;
	    	if(compare[operator](montoIngresado,entity2)){
	            return 0;
	        } else{
	            return -1;
        	}
    	}


    });
}
function amountMask(d,s){
    var dato=$(s).val();
   if(typeof dato !== "number" || dato === null) dato = parseFloat(dato);
   if(typeof d === "undefined" || d<0) d = 2;
   if(dato === dato){ //check for NaN
   var enmascarado = dato.toFixed(d).toString().replace(".",",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
    $(s).val("$ "+ enmascarado);
   }else{
    $(s).val("$ 0,00");
  }
}
function deleteSpace(elem){
	var listText= $(elem).val().split(" ");
	var strFinal="";
	for (var i = 0; i < listText.length; i++) {
		strFinal+=listText[i];
	}
	$(elem).val(strFinal);
}
function prueba(a){
	var x= $(a);
}

 
function amountFormatted(d,elem){
    var id=$(elem).attr("id");
    var dato=$("#"+id+" .mask").text();
    if(typeof dato !== "number" || dato === null) dato = parseFloat(dato);
    if(typeof d === "undefined" || d<0) d = 2;
    if(dato === dato){ //check for NaN
        var enmascarado = dato.toFixed(d).toString().replace(".",",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
        $("#"+id+" .mask").text("$ "+ enmascarado);
    }else{
        $("#"+id+" .mask").text("$ 0,00");
    }
}
function createAndSubmitFormDebinTam(p0formName, p1action, p1paramName, p1paramValue){
    var paramValue1=$(p1paramValue).html();

    var container = $("#main_form").parent().get(0);
	if(p1action=="DebinUrl"){
    $(container).append("<form id='" + p0formName + "' name='" + p0formName + "' method='POST' action='" + DebinUrl + "' target='_blank'></form>");
	}else{
$(container).append("<form id='" + p0formName + "' name='" + p0formName + "' method='POST' action='" + TamUrl + "' target='_blank'></form>");
	}
    $("#" + p0formName).append("<input type='hidden' name='" + p1paramName + "' value= '" + paramValue1 + "'>");
    
    $("#"+p0formName).submit();
}
function validateCollectionSelectionRadio(elem,errorMsg){
       
  earlyValidation.call(elem,errorMsg,function (){
     $('#tableAlignCredits').find('.error-validation').remove();
    var idRadio= "encodedcollection_"+$(elem).attr("id");
    var isOk = true;
    if ($("input[name="+idRadio+"]").is(":checked")) {
        isOk=true;
           return -1;
    }
    else {
            isOk=false;
            return 0;            
    
       }
    });
  }
function deleteRadioSelected(elem)
{
var idRadio= "encodedcollection_"+$(elem).attr("id");
    var isOk = true;
    if ($("input[name="+idRadio+"]").is(":checked")) {
        isOk=true;
        var error = $('#tableAlignCredits').find('.error-validation');
	    error.remove();          
    }
}

function setAriaLabelledBy(elemDest, elemLabel){
    var elemDestId = $(elemDest).attr("id");
    var elemLabelId = $(elemLabel).attr("id");
    var caption = $(elemLabel).text();
    
    $("#"+elemDestId).attr("aria-labelledby", elemLabelId);
    $("#"+elemDestId).attr("caption", caption);

}
function executeActionToClickRadio(button,collection,fecha,plazo){
	var idRadio= "encodedcollection_"+$(collection).attr("id");
   	if ($("input[name="+idRadio+"]").is(":checked")) {
		var dias = $("#"+collection.attr('id')+ " input[type='radio']:checked").parent().parent().parent().find("td")[1];
		var plazo = $(plazo);
		var fechaVencimiento=$(fecha);
		fechaVencimiento.val("");
		plazo.val($(dias).text());
		$(button).click();
	}
}

function showOverlay(){
	overlayBlocker.show()
}
function executeActionToClickCheck(button,collection){
	var check= "encodedcollection_"+$(collection).attr("id");
   	if ($("input[name="+check+"]").is(":checked")) {
		$(button).click();
	}
}

function vtCompareRangeDateWithLimit(date1,date2,date3,msg,target){
  	var target2 = null;
	if($(date1).attr("id")==$(target).attr("id")){
		target2 = date2;
	}else{
		target2 = date1;
	}
    if ($(target).attr("id")==$(date2).attr("id")){
 earlyValidation.call(target,msg,function(){
	
	var startDate = parseDate(date1.val());

	 if (startDate!=null){

	var fecha1 = $(date1).val();
    var fecha2 = $(date2).val();
    var today = new Date();
   
    var endDate = today;

   if(fecha2=="" || parseDate(date2.val())==null){
        return -1;
   }
	if (parseDate(fecha2)< parseDate(fecha1) && parseDate(fecha2)<today) {
	    	return 0;
	}else{
	    	return -1;
	}

}else {
	return -1;
}
  },target2);


	}else{
 earlyValidation.call(target,msg,function(){
	var fecha1 = $(date1).val();
	var startDate = parseDate(date1.val());

	 if (startDate!=null){

		var fechaLimiteValor = $(date3).val();
		var fechaLimite=parseDate(fechaLimiteValor);

	var fecha1 = $(date1).val();
    var fecha2 = $(date2).val();
    var today = new Date();
   
    var endDate = today;

		if(fecha1==""){
        return -1;
        }
		 if (startDate<fechaLimite && parseDate(fecha1)<today){
	    	return 0;
	    }else{
	    	return -1;
	    }
	
	}else {
		return -1;
	}
  },target2);
	}
}

function cleanFieldAndUnmasked(element) {
	
	try{
			var caracter = !event.charCode ? event.which : event.charCode;
		if(caracter!=9){
			if ($(element).is("select")){
			var tamano = document.getElementById(element[0].id).length;
			var sel = document.getElementById(element[0].id);
			for(var i = 0; i < tamano; i++){
					var t = sel.options[i].value;
					if (t == "Ninguno"){
						element.val("Ninguno");
						return;
					}
			}
		}else if($(element).is("input")) {
			element.val("");
			element.attr("unmasked","");
		}
	}
	}catch(err){
		if ( window.console && window.console.log ) {
			console.error(err,'Error en servicio --cleanField--');
		}
	}
}
function vtValidateRangeMinParam(elem,min1,msg,target){
	var elemAux = $(elem);
	  earlyValidation.call(target,$(msg).text(),function(){
	  if($(elemAux).val() == "")
	  	return -1;
	
	  if(parseInt($(elemAux).val()) < parseInt($(min1).val().split(",")[0])){
	      return 0;
	  	}
	      return -1;
	  });
	  }

function vtValidateRangeMax(elem,max1,msg,target){
	var elemAux = $(elem);
	  earlyValidation.call(target,$(msg).text(),function(){
	  if($(elemAux).val() == "")
	  	return -1;
	  if(parseInt($(elemAux).val()) > parseInt($(max1).val().split(",")[0])){
	      return 0;
	  	}
	      return -1;
	  });
	  }
function maskRichTextAmountNoDecimal(cantidad){
		if(cantidad !=null){
		for (var i = cantidad - 1; i >= 0; i--) {
			var numeroId=i+1;
			var dato=$("#i"+numeroId).text();
			var aux = (dato.toString().replace(".",",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.")).split(",");
			var enmascarado = aux[0];
			$("#i"+numeroId).text(enmascarado);
		}
		}
}
function maximoLengthVariable(elem,maxi){
	var aux = ($(maxi).val()).split(",");
	var aux2 = aux[0];
	var valor=aux2.length;
	$(elem).attr("maxLength",valor);
}
function vtValidateParamRangeMinRadioSimple(elem,index,min,msg) {
  var idRadio = $(elem).attr('id');
  var idInput = "#extraField_"+idRadio+"_opt_"+index;
  var radio = idRadio+"_opt_"+index;
	  earlyValidation.call($(idInput),msg,function() {
	  	$('#'+radio).on("click",function (e) {
	      var dato = $(idInput).val();
	      if(dato == ""){
	        return -1;
	      }
	      if(parseFloat(dato.replace("$","").replace(/\./g,"").replace(",",".")) < parseFloat(min)){
	          return 0;
	      }
	    
	    return -1;
	  });

	});
}
function vtCompareTwoNumbers(elem1,elem2,msg,operador,target){
	var elem1 = $(elem1);
	var elem2 = $(elem2);
	var myFunction = function(){
		if($(elem1).val()=="" || $(elem2).val()=="")
	        return -1;
		var valElem1 = parseInt($(elem1).val());
		var valElem2 = parseInt($(elem2).val());
		if(operador=="=="){
			return (valElem1 == valElem2) ? 0: -1;
		}
		else if(operador=="<"){
			return (valElem1 < valElem2) ? 0: -1;
		}
		else if(operador=="!="){
			return (valElem1 != valElem2) ? 0: -1;
		}
		else if(operador==">"){
			return (valElem1 > valElem2) ? 0: -1;
		}
		else if(operador=="<="){
			return (valElem1 <= valElem2) ? 0: -1;
		}
		else if(operador==">="){
			return (valElem1 >= valElem2) ? 0: -1;
		}
	};
	if($(target)[0]==$(elem2)[0]){
		earlyValidation.call(elem2,msg,myFunction,elem1);
	}else{
	    earlyValidation.call(elem1,msg,myFunction,elem2);
	}
}
function setCookieEnteMis(encryptId, encryptedValue){
	
	var exdate = new Date();
	exdate.setDate(exdate.getDate() + 365);
	var value = "${"+encryptId+":"+encryptedValue+"}";
	document.cookie = "ente-mis" + "=" + value + "; expires=" + exdate.toUTCString()+";path=/";
   	
}
function validateInputsImportExChange(elem1,elem2,errorMsg){
  earlyValidation.call(elem1,errorMsg,function (){
    var importe1=$(elem1);
    var importe2=$(elem2);
    var isOk = true;
    if ( importe1.val()=="" && importe2.val()=="") {
        isOk=true;
           return 0;
    }
    else {
        isOk=false;
        return -1;
       }
    });
  }
 

function downloadBase64()
{
	$("#downloadLink0").click();
}
 

function clickButtonById(idbutton) {
     $("#"+idbutton).click(); 
             
}



function  vtCompareElemRangeTwoValues2(elem,errorMsg,valMay,valMen){
  CB.automask.decSeparator=',';CB.automask.thousSeparator='.';
  var valMayMasked = CB.automask.setMask(valMay,"#,##0.00");
  var valMenMasked = CB.automask.setMask(valMen,"#,##0.00");
  earlyValidation.call(elem,"El importe debe ser mayor a $" + valMenMasked + " y menor a $" + valMayMasked,function(){
    if ((elem != "")&&(valMen != "")&&(valMay != "")){
    var aux=$(elem).val();
      var valor = parseFloat(aux.replace(/\\./g,'').replace(',','.').trim());
      parseFloat(valMen);
      parseFloat(valMay);
      if ((valor < valMen)||(valor>valMay)){
        return 0;
      }
      return -1;
    }
    return -1; 
  });
}
function mascReadOnly(elem){
    if ($(elem).text()!=""){
       $(elem).text($(elem).text().split(" ")[0]+" "+maskNumber($(elem).text().split(" ")[1]));
    }
}

function showButtonSendTicket(button,section){
	$("#"+section).change(function() {
	    if($("#"+section).attr("aria-expanded")=="true")
		{
			$("#"+button).show();
		}
		else
		{	
			$("#"+button).hide();
		}	
	});
}
function validateButtonWithSelectField(elem,msg,target){
	var myFunction = function(){
		clearError(null,$('#intField076'))
		return $(elem).val() != "Ninguno";
		
	};
 earlyValidation.call(target,$(msg).text(),myFunction,target);
}
function changeFont(elem){
  var moneda=$(elem).text();
  if(moneda=="PESOS"){
    $(elem).text("Pesos");
  }else{
    $(elem).text("Dólares (*)");
  }
}
function setOnClicktoHeaderGroup(elem){
  var tablas =$(elem).find("table");
  for (var i = tablas.length; i >= 0; i--) {
    var tablaAux=tablas[i];
    var auxGroup=$(tablaAux).find("thead").find("tr");
    var tituloGRoup=auxGroup[0];
    var titulo=$(tituloGRoup).find("td");
    var auxRegistros=$(tablaAux).find("tbody").find("tr").find("td");
    var registro= auxRegistros[0];
    var eventOnclick=$(registro).attr("onclick");
	var eventOnkeypress =$(registro).attr("onkeypress");
	$(titulo).attr("onkeypress",eventOnkeypress);
    $(titulo).attr("style","cursor: pointer");
    $(titulo).attr("onclick",eventOnclick);
    for (var p = auxRegistros.length - 1; p >= 0; p--) {
      var reg= auxRegistros[p];
      $(reg).attr("onclick","");
      $(reg).attr("style","cursor: default");
    };
  };
}
function printContainer(contenedor) {
         
         var container = document.getElementById(contenedor);
         var anchoOriginal = $(container).width();
         var printContents = document.getElementById(contenedor).innerHTML;
         //Ocultamos el sitio
         $("#mainContainer").css("display","none");
         //Se muestra el contenido a imprimir
         $( "body" ).append("<div id='tempContainerToPrint' style='width:"+anchoOriginal+"px';>"+printContents+"</div>");
         //Se imprime el contenido seleccionado
         window.print();
         //Se remueve el contenido
         $("#tempContainerToPrint").remove();
         //Se restaura el contenido
         $("#mainContainer").css("display","block");
         
    }
function ordenarTenenciasAgrupamiento(elem){
   var tabla=$(elem).find("table")[1];
   var aux=$(tabla).find("td");
   var nombre=aux.attr("aria-label");
   if(nombre!=" Cuenta Corriente."){
      $("collectionTableCuentasa_1").remove();
      $(elem).append(tabla);
   }
}
function vtValidateDateFromToDateTo(date1,date2,msg,target){
	var targetFinal = null;

	if($(date1).attr("id")==$(target).attr("id")){
			targetFinal = date2;
	}else{
			targetFinal = date1;
	}

	earlyValidation.call(target,msg,function(){

		var fecha1 = $(date1).val();
		var fecha2 = $(date2).val();
		var startDate = parseDate(date1.val());

		if (startDate!=null){
		    
		    if(fecha2=="" || parseDate(date2.val())==null){
		        return -1;
		    }
			if (parseDate(fecha1) > parseDate(fecha2)) {
			    return 0;
			}else{
			    return -1;
			}

		}else{
			return -1;
		}
	},targetFinal);
}
function exportCheques(){
  $(".collection-footer_export").parent().click();
}
function clearErrorPFijo(elemAlign){
   var elem= $(elemAlign).find("a");
   var focuss="$(constantLabelErrorValidation).hide();clearError(null,'#dateFieldFinTermino');clearError(null,'#intFieldCantidadDias');updateActualFocus(this);"
  $(elem).attr('onfocus',focuss);
}

function formatFloatValue(){
var lista=document.getElementsByClassName("default formatear center-align")
for (var i = lista.length - 1; i >= 0; i--) {
   var elem=lista[i];
   var valor=$(elem).text();
   if (valor!=""){
      valor.replace(",","")
      if (!isNaN(valor)){
        var masc=valor.replace(".",",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.")
        $(elem).text("$ "+masc);
      }
   }
};

}
function vtValidateEitherFieldUniqueMsgAux(elem1, elem2, elem3,msgElem) {
   if($(elem1).length>0 && $(elem2).length>0){
   var myFunction = function (){
         var elemValue1 = getElementValue(elem1);
         var elemValue2 = getElementValue(elem2);
          var isntValid1 = elemValue1=="Ninguno" || elemValue1=="" || elemValue1=="false" || elemValue1==undefined || elemValue1==null;
          var isntValid2 = elemValue2=="Ninguno" || elemValue2=="" || elemValue2=="false" || elemValue2==undefined || elemValue2==null;
         if(isntValid1 && isntValid2){
            $(elem2).addClass("error");
            var label = $(elem2).siblings("#label_"+$(elem2).attr("id"));
            $(label).addClass("error");
            return 0;
         }
      return -1;
   };
   earlyValidation.call(elem1,msgElem,myFunction,elem3,true);
   }
}
function url(logoUrl){
$("#urlCompania").text(logoUrl);
$("#recargar").click();
}
function setOnclickRadiobuttonCollection(collection){
var trr=$(collection).find("tbody").find("tr");
for (var i = trr.length - 1; i >= 0; i--) {
   var elem=trr[i];
   var td=$(elem).find("td")[1];
   var eventOnclick=$(td).attr("onclick");
   var eventOnkeypress=$(td).attr("onkeypress");
   var input=$($(elem).find("td")[0]).find("input");
   $(input).attr("onclick",eventOnclick);
   $(input).attr("onkeypress",eventOnkeypress);
};
}
function vtValidateConsecutiveCharacter(elem,msg,target){
  var email=$(elem);
  earlyValidation.call(target,msg,function() {
    var emailVal = $(email).val();
    if(emailVal==""){
    return -1;
    }
   if(new RegExp(/\.\.{1,}/).test(emailVal)){
        return 0;
    }
    return -1;
  });
}
function omitComa(elem) {
$(elem).keypress(function (e) {
if (e.which == 44) {
        return false;
    }
return true;
});
}

function hideOrShowDependingOnSelectValueCero(elem, select){
  var elem=$(elem);
  var valor=$(select).val();
  if (valor=="0"){  
    $(elem).removeClass("hidden");
  }else{
    $(elem).addClass("hidden");
  }
}
function hideDownloadPDFOptionInIframe(){
    if(inIframe()){
      $( "img[src='images/pdf.png']" ).parent().addClass( "hidden" );
      $( "img[src='images/Macro-Selecta/pdf.png']" ).parent().addClass( "hidden" );
    }
}
function jumpToNext(elem1,elem2){
$(elem1).on("keyup",function () {
    if(this.getAttribute("maxlength")==this.value.length)
      $(elem2).focus();
})
$(elem2).on("keydown",function (event) {
  var keycode;
  if (window.event)
    keycode = window.event.keyCode;
  else if (event)
    keycode = event.which;
  else
    return true;
  if(event.keyCode == 8 && 0==this.value.length)
      $(elem1).focus();
})
}
function opcionCBUPorDefecto(combo){
    var opts_list = $(combo).find("option");
    opts_list.sort(function(a, b) { return a.innerHTML > b.innerHTML ? 1 : -1; });
    $(combo).empty().append(opts_list);
    var optionCBU = opts_list.filter(function(i, e) { return e.innerHTML == "CBU"});
    var optionNinguna = opts_list.filter(function(i, e) { return e.innerHTML == "Seleccioná un destinatario"});
    if (optionCBU && optionNinguna) {
        var newTag = "<option value="+optionCBU.val()+">CBU</option>";
        var newTagFirst="<option value="+optionNinguna.val()+">Seleccioná un destinatario</option>";
        optionNinguna.remove();
        optionCBU.remove();
        $(combo).prepend(newTag);
        $(combo).val(optionCBU.val());
        $(combo).prepend(newTagFirst);
        $(combo).val(optionNinguna.val());
    }
}
 
function optionCBUPorDefectoOwnerAccount(combo){
  $("#selectFieldOwnCuentas").append($("#selectFieldOwnCuentas option:gt(0)").sort(function (a, b) {
    return a.text == b.text ? 0 : a.text < b.text ? -1 : 1;
}));
    var opts_list = $(combo).find("option");
    opts_list.sort(function(a, b) { return a.innerHTML > b.innerHTML ? 1 : -1; });
  $(combo).empty().append(opts_list);
    var optionCBU = opts_list.filter(function(i, e) { return e.innerHTML == "CBU"});
    var optionNinguna = opts_list.filter(function(i, e) { return e.innerHTML == "Seleccioná un destinatario"});
      if (optionCBU && optionNinguna) {
        var newTag = "<option value="+optionCBU.val()+">CBU</option>";
        var newTagFirst="<option value="+optionNinguna.val()+">Seleccioná un destinatario</option>";
        optionNinguna.remove();
        optionCBU.remove();
        $(combo).prepend(newTag);
        $(combo).val(optionCBU.val());
        $(combo).prepend(newTagFirst);
        $(combo).val(optionNinguna.val());
    }
}
function optionCBUPorDefectoOwnerAccountAux(combo){
$(combo).append($("combo option:gt(0)").sort(function (a, b) {
    return a.text == b.text ? 0 : a.text < b.text ? -1 : 1;
}));
    var opts_list = $(combo).find("option");
    opts_list.sort(function(a, b) { return a.innerHTML > b.innerHTML ? 1 : -1; });
  $(combo).empty().append(opts_list);
    var optionCBU = opts_list.filter(function(i, e) { return e.innerHTML == "CBU"});
    var optionNinguna = opts_list.filter(function(i, e) { return e.innerHTML == "Seleccioná una cuenta"});
      if (optionCBU && optionNinguna) {
        var newTag = "<option value="+optionCBU.val()+">CBU</option>";
        var newTagFirst="<option value="+optionNinguna.val()+">Seleccioná una cuenta</option>";
        optionNinguna.remove();
        optionCBU.remove();
        $(combo).prepend(newTag);
        $(combo).val(optionCBU.val());
        $(combo).prepend(newTagFirst);
        $(combo).val(optionNinguna.val());
    }
}
function setSelectedResponse(name){
$( "form input:radio" ).on( "click",function() {
$( this ).closest("div.repeteableSection").find("input.numeric-align").val($( this ).parent().parent().find("td[tipo='number']").text());
});}
function actionDelay(actionButton, path, pathInMacro){
    if(path=="NOT_ADHERED_VIRTUAL_BANKING" && pathInMacro =="CUSTOMER_MACRO_NEW_BV"){
        setTimeout(function(){$.showprogress();},40);
        setTimeout(function(){$(actionButton).click();},3000);
          
    }
}
function vtValidateMultiplos100(elem,msg,target) {
  var elemAux = $(elem);
  earlyValidation.call(target,msg,function() {
  if($(elemAux).val() == "")
    return -1;
  if(Number($(elemAux).val().replace(".","").replace(",",".")) % 100 !== 0){
    return 0;
  }
    return -1;
  });
  }
function optionNewMandate(combo){
  $(combo).append($("combo option:gt(0)").sort(function (a, b) {
    return a.text == b.text ? 0 : a.text < b.text ? -1 : 1;
}));
    var opts_list = $(combo).find("option");
    opts_list.sort(function(a, b) { return a.innerHTML > b.innerHTML ? 1 : -1; });
  $(combo).empty().append(opts_list);
    var optionNuevo = opts_list.filter(function(i, e) { return e.innerHTML == "Nuevo destinatario"});
    var optionNinguna = opts_list.filter(function(i, e) { return e.innerHTML == "Seleccioná una opción"});
      if (optionNuevo && optionNinguna) {
        var newTag = "<option value="+optionNuevo.val()+">Nuevo destinatario</option>";
        var newTagFirst="<option value="+optionNinguna.val()+">Seleccioná una opción</option>";
        optionNinguna.remove();
        optionNuevo.remove();
        $(combo).prepend(newTag);
        $(combo).val(optionNuevo.val());
        $(combo).prepend(newTagFirst);
        $(combo).val(optionNinguna.val());
    }
}
 
function vtValidateDNICeros(elem,msg,target) {
  var elemAux = $(elem);
  earlyValidation.call(target,msg,function() {
  if($(elemAux).val() == "")
    return -1;
  if( $(elemAux).val() == 00000 || $(elemAux).val() == 000000 || $(elemAux).val() == 0000000 || $(elemAux).val() == 00000000 || $(elemAux).val() == 000000000 || $(elemAux).val() == 0000000000 || $(elemAux).val() == 00000000000){
    return 0;
  }
    return -1;
  });
  }
function transformChecksToSwitch(text){    
if(true){
               $( "input:checkbox.switch" ).parent().each(function() {
  	     $( this ).append( "<div class='check-switch'></div>" );
                 });              
            }
}
function vtEnableDisableButton(boton, texto, operator, number){ 

  var button=  $(boton);

  var txtField= $(texto);
  
button.attr('disabled','disabled');

if(operator === '=='){
txtField.keyup(function(e){
if (txtField.val().length == number) {
   	 button.removeAttr('disabled');
}else{
 	button.attr('disabled','disabled');
}

});

}

if(operator === '>='){
txtField.keyup(function(e){
if (txtField.val().length >= number) {
   	 button.removeAttr('disabled');
}else{
 	button.attr('disabled','disabled');
}

});

}

if(operator === '<='){
txtField.keyup(function(e){
if (txtField.val().length <= number) {
   	 button.removeAttr('disabled');
}else{
 	button.attr('disabled','disabled');
}

});

}

if(operator === '>'){
txtField.keyup(function(e){
if (txtField.val().length > number) {
   	 button.removeAttr('disabled');
}else{
 	button.attr('disabled','disabled');
}

});

}

if(operator === '<'){
txtField.keyup(function(e){
if (txtField.val().length < number) {
   	 button.removeAttr('disabled');
}else{
 	button.attr('disabled','disabled');
}

});

}

if(operator === '!='){
txtField.keyup(function(e){
if (txtField.val().length != number) {
   	 button.removeAttr('disabled');
}else{
 	button.attr('disabled','disabled');
}

});

}
}
 
function enableDisableButtonWithSelect(actionButton,selectField){var valor=$(selectField).val();if (valor!="Ninguno"){$(actionButton).attr("disabled",false);}else{$(actionButton).prop("disabled", true);}}
function vtCompareDate(date1,date2,msg,target){
    var target2 = null;
  if($(date1).attr("id")==$(target).attr("id")){
      target2 = date2;
  }else{
      target2 = date1;
  }
  if ($(target).attr("id")==$(date2).attr("id")){
earlyValidation.call(target,msg,function(){


  var fecha1 = $(date1).val();
  var startDate = parseDate(date1.val());

   if (startDate!=null){
  
  var fecha2 = $(date2).val();
  var today = new Date();

       if(fecha2=="" || parseDate(date2.val())==null){
      return -1;
      }
      if (parseDate(fecha2)< parseDate(fecha1) && parseDate(fecha2)<today) {
          return 0;
      }else{
          return -1;
      }

}else {
  return -1;
}
},target2);


  }else{
earlyValidation.call(target,msg,function(){


  var fecha1 = $(date1).val();
  var startDate = parseDate(date1.val());

   if (startDate!=null){

  
  var fecha2 = $(date2).val();
  var today = new Date();


      if(fecha1==""){
      return -1;
      }
      if(fecha2=="" || parseDate(date2.val())==null){
        return -1;
        }
        if (parseDate(fecha2)< parseDate(fecha1) && parseDate(fecha2)<today) {
            return 0;
        }else{
            return -1;
        }
  }else {
      return -1;
  }
},target2);
  }
}
function vtCompareRangeDateWithDays(date1,date2,meses,msg,target){
    var target2 = null;
  if($(date1).attr("id")==$(target).attr("id")){
      target2 = date2;
  }else{
      target2 = date1;
  }
  if ($(target).attr("id")==$(date2).attr("id")){
earlyValidation.call(target,msg,function(){
//	if(fecha1=="" && fecha2==""){
  //    return -1;
//  }

  var fecha1 = $(date1).val();
  var startDate = parseDate(date1.val());

   if (startDate!=null){
  var range = parseInt(meses)+1;
  
  var fecha2 = $(date2).val();
  var today = new Date();
 
  var endDate = today;

  var startMonth = startDate.getMonth() + 1;

  var endMonth = endDate.getMonth() + 1;

  var starYear = startDate.getFullYear();

  var endYear = endDate.getFullYear();

  var numMeses = endYear * 12 + endMonth - (starYear * 12 + startMonth);

  if (endYear < starYear) {
      numMeses = numMeses - 1;
  }

       if(fecha2=="" || parseDate(date2.val())==null){
      return -1;
      }

      if (parseDate(fecha2)< parseDate(fecha1) && parseDate(fecha2)<today) {
          return 0;
      }else{
         
          return -1;
      }

}else {
  return -1;
}
},target2);


  }else{
earlyValidation.call(target,msg,function(){
//	if(fecha1=="" && fecha2==""){
  //    return -1;
//  }

  var fecha1 = $(date1).val();
  var startDate = parseDate(date1.val());

   if (startDate!=null){
  var range = parseInt(meses)+1;
  
  var fecha2 = $(date2).val();
  var today = new Date();
 
  var endDate = today;

  var startMonth = startDate.getMonth() + 1;

  var endMonth = endDate.getMonth() + 1;

  var starYear = startDate.getFullYear();

  var endYear = endDate.getFullYear();

  var numMeses = endYear * 12 + endMonth - (starYear * 12 + startMonth);

  if (endYear < starYear) {
      numMeses = numMeses - 1;
  }
if(numMeses == (range-1)){
        var fecha1Days = fecha1.split("/")[0];
        var fecha2Days = fecha2.split("/")[0];
          if(fecha1Days  < fecha2Days ){
            return 0;
          }
        }
      if(fecha1==""){
      return -1;
      }
       if (numMeses >= range && parseDate(fecha1)<today){
          return 0;
      }else{
          return -1;
      }
  }else {
      return -1;
  }
},target2);
  }
}
function opcionTODOSFinal(combo){
   var opts_list = $(combo).find("option");
   opts_list.sort(function(a, b) { return a.innerHTML > b.innerHTML ? 1 : -1; });
   $(combo).empty().append(opts_list);

   var optionTodas = opts_list.filter(function(i, e) { return e.innerHTML == "TODOS"});
   var optionNinguna = opts_list.filter(function(i, e) { return e.innerHTML == "Seleccioná una opción"});
   if (optionTodas && optionNinguna) {
       var newTag = "<option value="+optionTodas.val()+">TODOS</option>";
       var newTagFirst="<option value="+optionNinguna.val()+">Seleccioná una opción</option>";
       optionNinguna.remove();
       optionTodas.remove();
       $(combo).append(newTag);
       $(combo).val(optionTodas.val());
       $(combo).prepend(newTagFirst);
       $(combo).val(optionNinguna.val());
   }
}
function setPlaceHolder(elem, placeholder){
	$(elem).attr("placeholder", placeholder);
}
function vtCompareRangeDateWithMonth(date1,date2,days,message, months) {
 
target2 = date2; 


earlyValidation.call(target2,message,function(){

 var date="";

 date   = parseDate(date1.val());  
 date22 = parseDate(date2.val());

   if (date != null && date22 != null)
     {

        var result = new Date();  
        result.setFullYear(date.getFullYear(), date.getMonth() + parseInt(months),date.getDate()+parseInt(days)); 

        day=result.getDate();
        day = day.toString();
        month=result.getMonth()+1;
        month = month.toString();
        year=result.getFullYear();
        if(day.length==1){
	        day = "0"+day;
        }
        if(month.length==1){
	        month = "0"+month;
        }

       var result2 = day+"/"+month+"/"+year;

	var today = new Date();
	dayT=today.getDate();
	dayT = dayT.toString();
	monthT=today.getMonth()+1;
	monthT = monthT.toString();
	yearT=today.getFullYear();
	        if(dayT.length==1){
		        dayT = "0"+dayT;
	        }
	        if(monthT.length==1){
		        monthT = "0"+monthT;
	        }
	 var result3 = dayT+"/"+monthT+"/"+yearT;

	$("p").each(function() {
	    var text = $(this).text();
	    text = text.replace("Debe ser una fecha menor o igual a "+result3, "La fecha ingresada debe ser anterior o igual a hoy");
	    $(this).text(text);
	});
	

        var fecha1 = $(date1).val();
        var fecha2 = $(date2).val();

        if (parseDate(fecha2) <= parseDate(result2)) {
	    	return -1;
	    }else{
	    	return 0;
	        }
    
      }
    else
       return -1;
    },target2);


}
function showOrHideElemSelectValue(elemToHide,elemToShow,selectToEvaluate,textToCompare)
{ 
 var elemValue = "";
 if (selectToEvaluate.length ) 
 {
  elemValue = $("#" + selectToEvaluate.attr("id") + " option:selected").text();
  }

  if ( textToCompare == null || elemValue == textToCompare ) 
  {
    $(elemToHide).attr('hidden',true);
    $(elemToShow).attr('hidden',false);
   } 
  else 
  {
    $(elemToShow).attr('hidden',true);
    $(elemToHide).attr('hidden',false);
   }
 
}
function vtCompareRangeDateValEmpty(date,msg,target,val)
{
var target2 = null;
target2 = date;


    earlyValidation.call(target,msg,function(){

	var fecha = $(date).val();
	var startDate = parseDate(date.val());

	 if (startDate==null){
	        $(date).val($(val).val());
    }
    return -1;
  },target2);
}
function vtCompareYearLater(date1,msg,target){
    earlyValidation.call(target,msg,function(){

        var fechaActual = new Date();

        var sumaDias = new Date();
        var fechaPosterior = new Date(sumaDias.setDate(sumaDias.getDate()+360));

        var fechaPago = $(date1).val();
        var dia = (fechaPago).slice(0,2);
        var mes = (fechaPago).slice(3,5);
        var anio = (fechaPago).slice(6,10);
        var fechaTexto = anio+"/"+mes+"/"+dia;
        var fechaPagoFinal = new Date(fechaTexto);

        if (fechaPagoFinal >= fechaPosterior) {
            return 0;
          }
        return -1;    
    });    
    }
function setRestrictionsDatePickerObj(componentId,dias){
    var disabledDates = {};
    //armo fecha de hoy 
    var dt = new Date();
    var dia = String(dt.getDate());
    var mes = String(dt.getMonth()+1);
    var anio = String(dt.getFullYear());
    //valido formato
    if(dia.length == 1){
        dia = "0"+dia;
    }
    if(mes.length == 1){
        mes = "0"+mes;
    }
    var fechaHoy = anio+mes+dia;
    //fecha para dFrom
    var fechaInicial = "******01"
    //fecha para dTo
    var fechaFinal = "99991231";
    //calculo fechas a partir de dfrom y dto
    //dFrom
    dFrom = "0M";
    if(dFrom != "null"){
        if(dFrom.indexOf("D") != -1){
        var dateFrom = new Date();
        var intDFrom = parseInt(dFrom);
        dateFrom.setDate(dateFrom.getDate()+intDFrom);
        }
        else if(dFrom.indexOf("M") != -1){
            var dateFrom = new Date();
            var intDFrom = parseInt(dFrom);
            dateFrom.setMonth(dateFrom.getMonth()+intDFrom);
        }
        else if(dFrom.indexOf("Y") != -1){
            var dateFrom = new Date();
            var intDFrom = parseInt(dFrom);
            dateFrom.setFullYear(dateFrom.getFullYear()+intDFrom);
        }
        var diaDateFrom = String(dateFrom.getDate()-1);
        var mesDateFrom = String(dateFrom.getMonth()+1);
        var anioDateFrom = String(dateFrom.getFullYear());
        //valido formato
        if(diaDateFrom.length == 1){
            diaDateFrom = "0"+diaDateFrom;
        }
        if(mesDateFrom.length == 1){
            mesDateFrom = "0"+mesDateFrom;
        }
        if(diaDateFrom!="00"){
            dateFrom = anioDateFrom+mesDateFrom+diaDateFrom;
        }else{
            var dateFromAux = anioDateFrom+"/"+mesDateFrom+"/01";
            var newDate = new Date(dateFromAux);
            newDate.setDate(newDate.getDate() + -1);
            var diaDateFromAux = String(newDate.getDate());
            var mesDateFromAux = String(newDate.getMonth()+1);
            var anioDateFromAux = String(newDate.getFullYear());
            //valido formato
            if(diaDateFromAux.length == 1){
                diaDateFromAux = "0"+diaDateFromAux;
            }
            if(mesDateFromAux.length == 1){
                mesDateFromAux = "0"+mesDateFromAux;
            }
            dateFrom = anioDateFromAux+mesDateFromAux+diaDateFromAux;
        }

        
        disabledDates[fechaInicial] = dateFrom;
    }

    dToAux = dias + "D";
    dTo = dToAux;
    if(dTo != "null"){
        if(dTo.indexOf("D") != -1){
        var dateDTo = new Date();
        var intDTo = parseInt(dTo);
        dateDTo.setDate(dateDTo.getDate()+intDTo);
        }
        else if(dTo.indexOf("M") != -1){
            var dateDTo = new Date();
            var intDTo = parseInt(dTo);
            dateDTo.setMonth(dateDTo.getMonth()+intDTo);
        }
        else if(dTo.indexOf("Y") != -1){
            var dateDTo = new Date();
            var intDTo = parseInt(dTo);
            dateDTo.setFullYear(dateDTo.getFullYear()+intDTo);
        }

        var diaDateTo = String(dateDTo.getDate()+1);
        var mesDateTo = String(dateDTo.getMonth()+1);
        var anioDateTo = String(dateDTo.getFullYear());
        //valido formato
        if(diaDateTo.length == 1){
            diaDateTo = "0"+diaDateTo;
        }
        if(mesDateTo.length == 1){
            mesDateTo = "0"+mesDateTo;
        }
        dateTo = anioDateTo+mesDateTo+diaDateTo;
        disabledDates[dateTo] = fechaFinal;
    }
    if (typeof datePickerProperties == "undefined") {
        datePickerProperties = {};
    }
    datePickerProperties[componentId.attr("id")] = disabledDates;
}
function showElementByName(elem) {
       if (elem){
            $("#"+elem).show();
        }
}

function hideElementByName(elem){
       if (elem){
            $("#"+elem).hide();
        }
}
function clickButtonTime(elem, time) {
    if (elem){
        setTimeout(function(){ elem.focus(); elem.click(); }, time);             
        }
}
function showAndHideElementUsingRadioButton(elem1,elem2,radio)
{

 if ($("#"+radio+"_opt_0").is(":checked"))
    {
       if (elem1 != null)
          $(elem1).show();
       if (elem2 != null)
          $(elem2).hide();
    }
    
  else
    {
       if (elem2 != null)
         $(elem2).show();
       if (elem1 != null)
         $(elem1).hide();
    }

}
function vtCompareRangeDatesFCI(date1,date2,days,msg,target){
    var target2 = null;
	if($(date1).attr("id")==$(target).attr("id")){
		target2 = date2;
	}else{
		target2 = date1;
    }
    if ($(target).attr("id")==$(date2).attr("id")){

        earlyValidation.call(target,msg,function(){

            var dias = days;

            function transformarFecha(day){
                var fecha = $(day).val();
                var dia = (fecha).slice(0,2);
                var mes = (fecha).slice(3,5);
                var anio = (fecha).slice(6,10);
                var fechaTexto = anio+"/"+mes+"/"+dia;
                var fechaFinal = new Date(fechaTexto);
                return fechaFinal;
            }

            var fechaDesde = transformarFecha(date1);
            var fechaHasta = transformarFecha(date2);

            function calcularDias(fecha1, fecha2){
                var diferencia = (fecha2 - fecha1) / (1000*60*60*24);
                return diferencia;
            }
            
            var diasEntreFDyFH = calcularDias(fechaDesde, fechaHasta);

            if (diasEntreFDyFH > dias) {
                return 0;
            }
            return -1; 
            
        },target2);         
    
    }else{
        earlyValidation.call(target,msg,function(){

            var dias = days;

            function transformarFecha(day){
                var fecha = $(day).val();
                var dia = (fecha).slice(0,2);
                var mes = (fecha).slice(3,5);
                var anio = (fecha).slice(6,10);
                var fechaTexto = anio+"/"+mes+"/"+dia;
                var fechaFinal = new Date(fechaTexto);
                return fechaFinal;
            }

            var fechaDesde = transformarFecha(date1);
            var fechaHasta = transformarFecha(date2);

            function calcularDias(fecha1, fecha2){
                var diferencia = (fecha2 - fecha1) / (1000*60*60*24);
                return diferencia;
            }
            
            var diasEntreFDyFH = calcularDias(fechaDesde, fechaHasta);

            if (diasEntreFDyFH > dias) {
                return 0;
            }
            return -1; 

        },target2);
    }
}
function vtCompareElemRangeTwoValuesSigno(elem,errorMsg,signo,valMay,valMen){
  CB.automask.decSeparator=',';CB.automask.thousSeparator='.';
  var valMayMasked = CB.automask.setMask(valMay,"#,##0.00");
  var valMenMasked = CB.automask.setMask(valMen,"#,##0.00");
  earlyValidation.call(elem,"El importe debe ser mayor a " + signo + " " + valMenMasked + " y menor a " + signo + " " + valMayMasked,function(){
    if ((elem != "")&&(valMen != "")&&(valMay != "")){
      var valor = parseFloat($(elem).attr("unmasked"));
      parseFloat(valMen);
      parseFloat(valMay);
      
      if ((valor < valMen)||(valor>valMay)){
        return 0;
      }
      return -1;
    }
    if(!isNaN(valMay) && !isNaN(valMen) && (elem != "")){
    var valor = parseFloat($(elem).attr("unmasked"));
      parseFloat(valMen);
      parseFloat(valMay);
      
      if ((valor < valMen)||(valor>valMay)){
        return 0;
      }
    }
    return -1; 
  });
}
function plazoFCI(elem,elem1,texto){
    var dias;
    var horas;
    dias = $(elem).attr("unmasked");
    horas = dias * 24;
    $(elem1).html(horas+texto)
}
function vtValidateParamRangeMinUsd(elem,min,msg,target) {
    var elemAux = $(elem);
    earlyValidation.call(target,msg,function() {
    if($(elemAux).val() == "")
      return -1;
    if((parseFloat($(elemAux).val().replace("U$S","").replace(/\./g,"").replace(",",".")) < parseFloat(min))){
        return 0;
        }
        return -1;
    });
}
function vtValidateParamRangeMaxUsd(elem,min,msg,target) {
    var elemAux = $(elem);
    earlyValidation.call(target,msg,function() {
    if($(elemAux).val() == "")
      return -1;
    if((parseFloat($(elemAux).val().replace("U$S","").replace(/\./g,"").replace(",",".")) > parseFloat($(min).html().replace("U$S","").replace(/\./g,"").replace(",",".")))){
        return 0;
        }
        return -1;
    });
}
function vtValidateParamRangeMax(elem,min,msg,target) {
  var elemAux = $(elem);
  earlyValidation.call(target,msg,function() {
  if($(elemAux).val() == "")
    return -1;
  if((parseFloat($(elemAux).val().replace("$","").replace(/\./g,"").replace(",",".")) > parseFloat($(min).html().replace("$","").replace(/\./g,"").replace(",",".")))){
      return 0;
      }
      return -1;
  });
  }
function vtCompareElementsFloat(elem1,elem2,msg,operator,target){
  
  var myFunction = function() 
    { 
    var val1 = (parseFloat($(elem1).val().replace("U$S","").replace("$","").replace(/\./g,"").replace(",",".")));
    var val2 = (parseFloat($(elem2).text().replace("U$S","").replace("$","").replace(/\./g,"").replace(",",".")));

      if(val1=="" || val2=="")
        return -1;
 
      if(operator=='='){
        return (val1 == val2) ? 0: -1;
      } else if(operator == '!=' || operator == '<>' ){
        return (val1 != val2) ? 0: -1;
      } else if(operator == '<'){
        return (val1 < val2) ? 0: -1;
      } else if(operator == '>'){
        return (val1 > val2) ? 0: -1;
      } else if(operator == '<='){
        return (val1 <= val2) ? 0: -1;
      } else if(operator == '>='){
        return (val1 >= val2) ? 0: -1;
      } else if(operator == 'contains'){
        return val1.indexOf(val2)!=-1 ? 0:-1;
      } else {
        return -1;
      } 
    };
 
  if($(target)[0]==$(elem2)[0]){
      earlyValidation.call(elem2,msg,myFunction,elem1);
  }else{
      earlyValidation.call(elem1,msg,myFunction,elem2);
  }
 }
function vtValidateAliasYCbuDos(elemento,mensaje){   
    earlyValidation.call(elemento,mensaje,function(){    
        var cbu = $(elemento).val();
        if(cbu.length === 21){
            return 0;
        }
        else{
           return -1; 
        } 
    });
}
function vtValidateAliasYCbu(elemento,mensaje){   
    earlyValidation.call(elemento,mensaje,function(){    
        var cbu = $(elemento).val();
        var retorno = false;
        var VEC1 = new Array(7, 1, 3, 9, 7, 1, 3);
        var VEC2 = new Array(3, 9, 7, 1, 3, 9, 7, 1, 3, 9, 7, 1, 3);
        var valido = false;
        var bloque1 = cbu.substring(0, 7);
        var digitoValidador1 = cbu.substring(7, 8);
        var bloque2 = cbu.substring(8, 21);
        var digitoValidador2 = cbu.substring(21);
        var acum = 0;
    
        if(cbu.length === 22){
                if (/^([0-9])*$/.test(cbu)){
                    for (var i = 0; i < 7; i++) {
                        acum += bloque1.substring(i, i + 1) * VEC1[i];
                    }
                    var strAcum = (acum + '');
                    var digitoVCalculado1 = 10 - strAcum.substring(strAcum.length - 1);
                    valido = (digitoVCalculado1 == digitoValidador1); 
                    acum = 0;
                    for (var i = 0; i < 13; i++) {
                        acum += bloque2.substring(i, i + 1) * VEC2[i];
                    }
                    strAcum = (acum + '');
                    var digitoVCalculado2 = 10 - strAcum.substring(strAcum.length - 1);
                    if (digitoVCalculado2 == 10){ 
                        digitoVCalculado2 = 0;
                    }
                    if (digitoVCalculado2 == 1){ 
                        digitoVCalculado2 = 1;
                    }
                    if (valido = (digitoVCalculado2 == digitoValidador2) /*&& valido*/){ 
                        retorno = true;
                    }
                    else{
                        return 0; 
                    }
                    return -1;
                }
                else{
                    return 0;
                }
        }
        else{
           return -1; 
        } 
    });
}
function updateDependentSelectFieldByInputIfApplyNew(selectFieldReload, idInput){
    /*console.log("elemento Activo ---> "+document.activeElement.id)
    console.log("combo a actualizar ---> "+selectFieldReload)*/
    if(document.activeElement.id === idInput){
        /*console.log("RECARGA por DOWN");*/
        mostrarEnEjecucion();
        updateDependentSelectFieldByInput(document.getElementById(idInput),document.getElementById(selectFieldReload));
    }/*else{
        console.log("No hay recarga por DOWN");
    }*/
}

function bindDependentSelectFieldOnBlurNew(idElementToShow,selectField,trigger){

	$(trigger).attr("lastValue",$(trigger).val());
  	var es_ie = navigator.userAgent.indexOf("MSIE") > -1 || navigator.userAgent.indexOf("Edge") > -1 ;
   
     if(es_ie){
	    var mousedown = $(selectField).attr('onmousedown');
	    if(mousedown == undefined){
		    mousedown = "";
    	}

    	$(selectField).attr('onmousedown',"updateDependentSelectFieldByInputIfApplyNew('"+$(selectField).attr('id')+"', '"+$(trigger).attr("id")+"');"+mousedown);
        
        $(trigger).keydown(function(e) {
        var tabKeyPressed = false;
        tabKeyPressed = e.keyCode == 9;
        if (tabKeyPressed) {
	        mostrarEnEjecucion();
	        updateDependentSelectFieldByInput($(trigger),$(selectField));
	        }
	    });    
    }    

    $(trigger).on("blur",function(){
         if(document.activeElement.id !== $(selectField).attr('id')){
             /*console.log("RECARGA por BLUR");*/
	         mostrarEnEjecucion();
	         updateDependentSelectFieldByInput($(trigger),$(selectField));
	         }/*else{
                 console.log("No hay recarga por BLUR");
                }*/
     });
    
            
	
    if(idElementToShow!='null'){
		$(selectField).on('selectFilled',function(event){
			var elem = this;
				if(getElementValue(trigger)!="" && (elem.options==null ||
				(elem.options.length==1 && elem.options[0].value == 'Ninguno'))){
					if($('#'+idElementToShow).hasClass( "hidden" )){
						$('#'+idElementToShow).removeClass( "hidden" );
						window.scrollBy(0, document.getElementById(idElementToShow).offsetHeight);
					}
				}else if(!$('#'+idElementToShow).hasClass( "hidden" )){
					window.scrollBy(0, -1*document.getElementById(idElementToShow).offsetHeight);
					$('#'+idElementToShow).addClass( "hidden" );
				}

		});
	}
}

function downloadPdfHostMacro(fileName) {
	var downloadWindow = window.open(fileName, '_blank', 'fullscreen=no');
}
function ordenarComboLocalidad(combo){
 
    function NASort(a, b) {    
      if (a.innerHTML == 'Seleccioná una localidad') {
          return 1;   
      }
      else if (b.innerHTML == 'Seleccioná una localidad') {
          return -1;   
      }       
      return (a.innerHTML > b.innerHTML) ? 1 : -1;
    };
    var opts_list = $(combo).find("option");
    opts_list.sort(NASort).appendTo(combo);
    var optionSeleccione = opts_list.filter(function(i, e) { return e.innerHTML == "Seleccioná una localidad"});
    if (optionSeleccione) {
    var newTag = "<option value="+optionSeleccione.val()+">Seleccioná una localidad</option>";
    optionSeleccione.remove();
          $(combo).prepend(newTag);
          $(combo).val(optionSeleccione.val());
    }    
}
function ordenarComboSucursal(combo) {
	function NASort(a, b) {
		if (a.innerHTML == "Seleccioná una sucursal") {
			return 1;
		} else if (b.innerHTML == "Seleccioná una sucursal") {
			return -1;
		}
		var pos_a = a.innerHTML.indexOf(")") + 2;
		var pos_b = b.innerHTML.indexOf(")") + 2;
		return (a.innerHTML.substr(pos_a) > b.innerHTML.substr(pos_b)) ? 1 : -1;
	};
	var opts_list = $(combo).find("option");
	opts_list.sort(NASort).appendTo(combo);
	var optionSeleccione = opts_list.filter(function (i, e) {
		return e.innerHTML == "Seleccioná una sucursal"
	});
	if (optionSeleccione) {
		var newTag = "<option value=" + optionSeleccione.val() + ">Seleccioná una sucursal</option>";
		optionSeleccione.remove();
		$(combo).prepend(newTag);
		$(combo).val(optionSeleccione.val());
	}
}
function applyMaskPagoTotalYMinimo(elem){
    if (elem){
        var coma = $("#"+elem).val().indexOf(",");
        var enteros = $("#"+elem).val().substr(0,coma+1);
        var decimalesConPunto = $("#"+elem).val().substr(coma+1);
        var punto = decimalesConPunto.indexOf(".");
        var decimalesSinPunto = decimalesConPunto.substr(0,punto) + decimalesConPunto.substr(punto+1);
        var numeroFinal = enteros+decimalesSinPunto.substr(0,2);
        $("#"+elem).val(numeroFinal);
    }
}
function sortSelectFieldSeguros(combo){
		var sel = $(combo);
		var selected = sel.val();
        var opts_list = sel.find("option");
        var optionNinguna = opts_list.filter(function(i, e) { return e.innerHTML == "Seleccioná un método de pago"});
		opts_list.sort(function(a, b) {
		
		    var valor1 = a.innerHTML;
            var valor2 = b.innerHTML.startsWith('Master') ? 'master' : b.innerHTML.startsWith('Visa') ? 'visa' : b.innerHTML.startsWith('Ame') ? 'amex' : b.innerHTML.startsWith('CA') ? 'ca' : b.innerHTML.startsWith('CC') ? 'cc' :'';
            if(valor1.startsWith('Visa')){
                            return -1;
            }
            if(valor1.startsWith('MasterCard')){
		            switch (valor2) {
                        case 'master':
                            return -1;
                        case 'visa':
                            return 1;
                        case 'amex':
                            return -1;
                        case 'ca':
                            return -1;
                        case 'cc':
                            return -1;
                    }        
                }
                if(valor1.startsWith('Ame')){
		            switch (valor2) {
                        case 'master':
                            return 1;
                        case 'visa':
                            return 1;
                        case 'amex':
                            return -1;
                        case 'ca':
                            return -1;
                        case 'cc':
                            return -1;
                    }        
                }
                if(valor1.startsWith('CA')){
		            switch (valor2) {
                        case 'master':
                            return 1;
                        case 'visa':
                            return 1;
                        case 'amex':
                            return 1;
                        case 'ca':
                            return -1;
                        case 'cc':
                            return -1;
                    }        
                }
                if(valor1.startsWith('CC')){
		            switch (valor2) {
                        case 'master':
                            return 1;
                        case 'visa':
                            return 1;
                        case 'amex':
                            return 1;
                        case 'ca':
                            return 1;
                        case 'cc':
                            return -1;
                    }        
                }
                return -1;
    });
    sel.empty().append(opts_list);
    if (optionNinguna) {
        var newTag = "<option value="+optionNinguna.val()+">Seleccioná un método de pago</option>";
        optionNinguna.remove();
        sel.prepend(newTag);
        sel.val(selected);
    }
}
function controlAddButton(a_boton, b_max) {
	try{
	    
    	   $(".collection-column_default_radio :first-child" ).click(function(){ 
    
            if(($("input[name='encodedcollection_collectionTableMovimientosSearch']:checked" ).length >0) && 
                ($("input[name='encodedcollection_collectionTableMovimientosSearch']:checked" ).length + $(".loadOpContainer" ).length <= b_max)){
                   $(a_boton).removeAttr('disabled');
            }else{
                 $(a_boton).attr('disabled',true);
            }        
            });
            $(a_boton).attr('disabled',true);
            
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --controlAddButton--");
		}
	}
}
function ordenarComboConCBUMisComprobantes(combo){
    $(combo).append($("combo option:gt(0)").sort(function (a, b) {
        return a.text == b.text ? 0 : a.text < b.text ? -1 : 1;
    }));
    var optionActual = $(combo).val();
    var opts_list = $(combo).find('option');
    opts_list.sort(function(a, b) { return $(a).text().toUpperCase() < $(b).text().toUpperCase() ? -1 : 1; });
    $(combo).empty().append(opts_list);
    var optionCBU = opts_list.filter(function(i, e) { return e.innerHTML == "CBU"});
    var optionNinguno = opts_list.filter(function(i, e) { return $(e).val() == "Ninguno"});
    if (optionCBU && optionNinguno) {
        optionNinguno.remove();
        optionCBU.remove();
        $(combo).prepend($("<option>", {
            value: optionCBU.val(),
            text: optionCBU.text()
        }));
        $(combo).prepend($("<option>", {
            value: "Ninguno",
            text: optionNinguno.text()
        }));
    }
    $(combo).val(optionActual);
}
function ordenarComboTransferencias(combo){
    var optionActual = $(combo).val();
    var opts_list = $(combo).find('option');
    opts_list.sort(function(a, b) { return $(a).text().toUpperCase() < $(b).text().toUpperCase() ? -1 : 1; });
    $(combo).empty().append(opts_list);
    var optionNew = opts_list.filter(function(i, e) { return e.innerHTML == "Agregar nueva CBU/CVU/Alias"});
    var optionNinguno = opts_list.filter(function(i, e) { return $(e).val() == "Ninguno"});
    if (optionNew && optionNinguno) {
        optionNew.remove();
        optionNinguno.remove();
        $(combo).append($("<option>", {
            value: optionNew.val(),
            text: optionNew.text()
        }));
        $(combo).prepend($("<option>", {
            value: "Ninguno",
            text: optionNinguno.text()
        }));
    }
    $(combo).val(optionActual);
}
function RSprueba(element) {
	try{
	    
	   
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function addAmount1Amount2InRadioButton(indice,label,radio,xmonto1, xmonto2){
	try{
	var idRadio = $(radio).attr("id");
  	var idOpcion = "#extraField_"+idRadio+"_opt_"+indice;
  	var opcion = $(idOpcion);
  	if (xmonto1 != null && xmonto2 != null)
	  opcion.val($(xmonto1).html()+" + "+$(xmonto2).html());
	else
	   if (xmonto1 != null)
	     opcion.val($(xmonto1).html());
	   else
	     opcion.val($(xmonto2).html());
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --addAmount1Amount2InRadioButton--");
		}
	}
}
function addAmountInRadioButton(indice,label,radio,xmonto1){
	try{
	var idRadio = $(radio).attr("id");
  	var idOpcion = "#extraField_"+idRadio+"_opt_"+indice;
  	var opcion = $(idOpcion);
    opcion.val($(xmonto1).html());
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --addAmountInRadioButton--");
		}
	}
}
function checkedValueRadioAndClickButton(date1, date2, date3, elem, elem1, elem2, hour, radioToCheck){
	try{
		$( radioToCheck ).find("input[type=radio]").each(function() {

			var attr = $(this).attr("value");

			if (typeof attr !== typeof undefined && attr !== false) {
				var cheked = false;
				
				var checkAttr = $(this).is(':checked');
				if (typeof checkAttr !== typeof undefined && checkAttr !== false) {
					cheked = true;
				}
				else
				 if (typeof checkAttr == typeof undefined)
				  {
				     checkAttr = $(this).attr("checked");
				        if (typeof checkAttr !== typeof undefined && checkAttr !== false) 
				        {
					        cheked = true;
				        }
				  }
				
				//valido que exista el elemento a consultar
				var elemToProcess = $("#"+attr);
				if (elemToProcess.length){
					if (cheked){
						if (elem1 == attr)
                            {
                                var venc1 = parseDate(date1.html());
                                var venc2 = new Date(venc1.getFullYear(),venc1.getMonth(),venc1.getDate());

                                var hoy1 = parseDate(date2.html());
                                var hoy2 = new Date(hoy1.getFullYear(),hoy1.getMonth(),hoy1.getDate());
                                
                                var hour2 = date3.html();

                                if (venc2 < hoy2)
                                {
                                    hideElement(elem2);
                                    $(elem).click();
                                }
                                else
                                    if (venc2.getTime() == hoy2.getTime())
                                    {
                                        var arrHour1 = hour.split(":");
                                        var arrHour2 = hour2.split(":"); //AHORA
                                        venc1.setHours(arrHour1[0],arrHour1[1]);
                                        hoy2.setHours(arrHour2[0],arrHour2[1]);
                                        
                                        if (venc1 <= hoy2)
                                        {
                                          hideElement(elem2);
                                          $(elem).click();
                                        }
                                    }
                                        

                            }

					}
				}
				
			}
		});
	}catch(err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio -- checkedValueRadioAndClickButton  --");
		}
	}
}
function checkedValueRadioAndClickButtonDisabled(elem, elem1, radioToCheck){ //elem = button   elem1 = FULL_PAYMENT   
	try{
		$( radioToCheck ).find("input[type=radio]").each(function() {

			var attr = $(this).attr("value");

			if (typeof attr !== typeof undefined && attr !== false) {
				var cheked = false;
				
				var checkAttr = $(this).is(':checked');
				if (typeof checkAttr !== typeof undefined && checkAttr !== false) {
					cheked = true;
				}
				else
				 if (typeof checkAttr == typeof undefined)
				  {
				     checkAttr = $(this).attr("checked");
				        if (typeof checkAttr !== typeof undefined && checkAttr !== false) 
				        {
					        cheked = true;
				        }
				  }
				
				//valido que exista el elemento a consultar
				var elemToProcess = $("#"+attr);
				if (elemToProcess.length){
					if (cheked){
						if (elem1 == attr) 
                            {
                                DisableElementNoCondition(elem);

                            }
					}
				}
				
			}
		});
	}catch(err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio -- checkedValueRadioAndClickButtonDisabled  --");
		}
	}
}
function checkedValueRadioAndClickButtonAction(elem, elem1, radioToCheck){
	try{
		$( radioToCheck ).find("input[type=radio]").each(function() {

			var attr = $(this).attr("value");

			if (typeof attr !== typeof undefined && attr !== false) {
				var cheked = false;
				
				var checkAttr = $(this).is(':checked');
				if (typeof checkAttr !== typeof undefined && checkAttr !== false) {
					cheked = true;
				}
				else
				 if (typeof checkAttr == typeof undefined)
				  {
				     checkAttr = $(this).attr("checked");
				        if (typeof checkAttr !== typeof undefined && checkAttr !== false) 
				        {
					        cheked = true;
				        }
				  }
				
				//valido que exista el elemento a consultar
				var elemToProcess = $("#"+attr);
				if (elemToProcess.length){
					if (cheked){
						if (elem1 == attr)
                            {
                                $(elem).click();
                            }
					}
				}
				
			}
		});
	}catch(err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio -- checkedValueRadioAndClickButtonAction  --");
		}
	}
}
function vtValidaLosAniosEntreElActual(elem,msg,target) {
    var fecha = new Date();
    var years = fecha.getFullYear();

    if($(elem).val() === ""){
        $(elem).val(years)
    }
    
  var elemAux = $(elem);
  earlyValidation.call(target,msg,function() {
    if($(elemAux).val() === ""){
        return -1;
    }
    if(Number($(elemAux).val()) < years){
    return 0;
    }
    return -1;
  });
}
function GTM_setEntityDataToEventDataLayer(eventName, eventAttr, value){ 
	try {
		CyberBank.gtm.setEventAttrDataLayer(eventName, eventAttr, value);
	} catch (err) {
		console.log(err, 'Error en servicio --GTM_setEntityDataToDataLayer--');
	}
}
function GTM_incrEventCountDataLayer(event, attr){ 
	try {
		CyberBank.gtm.incrEventCountDataLayer(event, attr);

	} catch (err) {
		console.log(err, 'Error en servicio --GTM_incrEventCountDataLayer--');
	}
}
function GTM_EncParam(elem) {
	try{
	    console.log("El valor encriptado es: "+elem);
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --GTM_EncParam--");
		}
	}
}
function applyMaskAmount(d,selector){
    
    var lista=$("."+selector);
    lista.each(function() {
        var elem=this;
    
        var dato=$(elem).text();
        if(typeof dato !== "number" || dato === null) dato = parseFloat(dato);
        if(typeof d === "undefined" || d<0) d = 2;
        if(dato === dato){ //check for NaN
            
            var enmascarado = (Math.trunc(dato * Math.pow(10,d))/Math.pow(10,d)).toString().replace(".",",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
            $(elem).text("$ "+ enmascarado);
        }else{
            $(elem).text("$ 0,00");
        }
    });
}
function vtValidateParamRangeMinAndMax(elem,max,min,msg,target) {
  var elemAux = $(elem);
  var maxNumFormat = "$ " + max.toString().replace(".",",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
  var minNumFormat = "$ " + min.toString().replace(".",",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
  var resp = "El importe debe ser mayor a " + minNumFormat + " y menor a " + maxNumFormat;
  
  earlyValidation.call(target,resp,function() {
  if($(elemAux).val() == "")
    return -1;
  if((parseFloat($(elemAux).val().replace("$","").replace(/\./g,"").replace(",",".")) < parseFloat(min))){
      return 0;
      } else if ((parseFloat($(elemAux).val().replace("$","").replace(/\./g,"").replace(",",".")) > parseFloat(max))){
        return 0;  
      }
      return -1;
  });
  
}
function vtValidateAmountPrestamosMinAndMax(elem, max, min) {
    var maxNumFormat = "$ " + max.toString().replace(".", ",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
    var minNumFormat = "$ " + min.toString().replace(".", ",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
    var resp = "El importe debe ser mayor a " + minNumFormat + " y menor a " + maxNumFormat;
    var msjInfo = $('#htmlCode2 p').text().trim();
    
    earlyValidation.call(elem, "", function() {
        var importe = parseFloat($(elem).val().replace("$", "").replace(/\./g, "").replace(",", "."));
        if ($(elem).val() == "")
            return -1;
        if (importe < parseFloat(min) || importe > parseFloat(max)) {
            $('#htmlCode2 p').text(resp).addClass("error-validation");
            return 0;
        }
        return -1;
    }, $('#htmlCode2 p'), true);        

    $('#floatField0').focus(function () {
        $('#htmlCode2 p').text(msjInfo).removeClass("error-validation");
    });

    var es_ie = navigator.userAgent.indexOf("MSIE") > -1 ;
	if (es_ie) {
		$('#range_widgetSliderSelectorAmount').on('change',function () {
        $('#htmlCode2 p').text(msjInfo).removeClass("error-validation");
    });
	} else {
		$('#range_widgetSliderSelectorAmount').on('input',function () {
        $('#htmlCode2 p').text(msjInfo).removeClass("error-validation");
    });
	}
        
} 
function floatFieldAsInteger(element) {
	try{
	    var importeSinDecimales = $(element).attr("unmasked").split(".")[0];
        $(element).attr("unmasked",importeSinDecimales);
	    
	    $(element).keydown(function(event){
          var reg = /[\.,\,]/g;
          	 $(element).val($(element).val().replace(reg,""));
        });
	    
	    
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --floatFieldAsInteger--");
		}
	}
}
function vtMaxLengthPhoneNumber(elem1, elem2, maxLong, msg,target){
  var myFunction = function() {
    var cod = $(elem1).val();
    var tel = $(elem2).val();
    var numCompleto = $(elem1).val() + $(elem2).val();
    var max = parseInt(maxLong);
    var primerDig = numCompleto.substring(0, 1);
    var str=numCompleto;
  

      if(cod=="" || tel=="")
        return -1;

    if(primerDig == "0"){
        str = numCompleto.substring(1);
    }
       if( str.length == max){
            return -1;
            }
        else{
            return 0; 
            }
    };

  if($(target)[0]==$(elem2)[0]){
      earlyValidation.call(elem2,msg,myFunction,elem1);
  }else{
      earlyValidation.call(elem1,msg,myFunction,elem2);
  }
}
function formatCelPhone(phoneNumberText){

ult4numeros = phoneNumberText.text().substr(-4);
primerosNumeros = 'xxxxxxxxxx';
numFinal = primerosNumeros+ult4numeros; 
phoneNumberText.text(numFinal);

}

function CompareElemRangeValueEcheq(element, errorMsg, maxValue){
    try {
        var maximun = parseFloat(maxValue);
        earlyValidation.call(element, errorMsg, function () {
            if ($(element).val() != "") {
                var valor = parseFloat($(element).attr("unmasked"));
                if (valor > maximun) {
                    return 0;
                }
                return -1;  
            }
            return -1; 
        });
    } catch (err) {
        if (window.console && window.console.log) {
            console.error(err, "Error en servicio --CompareElemRangeValueEcheq--");
        }
    }
}
function logicaTablaRenovacion(booleanBack, collection, numColumna,valor){
var trr=$(collection).find("tbody").find("tr");
for (var i = trr.length - 1; i >= 0; i--) {
   var elem=trr[i];
   var columna3 = $(elem).find("td")[numColumna];
   if ($(columna3).html() != valor){
    $($(elem).find("td")[0]).find("input").prop('disabled',true);
    $($(elem).find("td")[0]).find("input").prop('checked',true);
   }
   if (!booleanBack)
      $($(elem).find("td")[0]).find("input").prop('checked',true);     
}
}
function vtValidateTableRenovation (idTable,msg,target){
	earlyValidation.call(target,msg,function(){
		var chequeados = false;
	    idTable.find('input[type=checkbox]').each(function(idx, ele) {
		    var checkbox = $(this); //Do what you'd like here 
		    if (checkbox.is(':checked')) {
		        chequeados = true;
		    }
		});

		if (chequeados){
			return -1;
		}else{
			return 0;
		}
	});
	
}	

function temporizadorBotonReenviar(actionButton,nextStateContinuar,table1,table2) {
    try{
        
        $(document).ready(function() {

            $(table1).attr('style','min-width: fit-content; min-width: -moz-fit-content;');

            var str = "<button type='button' class='action-button_primary' id='Boton1' default='false' tabindex='0' validationenable='true' maptocontext='true' dependencies=''><div class='action-button_primary_container'><span class='action-button_primary_texto'><div class='autoAdjustText'><p>Reenviar código<span id='temporizador' class='horiontal-separator no-padding-right'> 00:20</span></p></div></span></div></button>",
                html = $.parseHTML(str);

            if($('#Boton1').length == 0){
                $(table2).prepend( html );

                $('#Boton1').attr("disabled", true);
                var interval = setInterval(function() {
            
                    if($('#temporizador').length == 0){
                        clearInterval(interval);
                        return;
                    } else {
                        var timer = $('#temporizador').html().split(':');
                        var minutes = timer[0];
                        seconds = parseInt(timer[1]);
                        --seconds;
                        if (seconds > 0) {
                            seconds = (seconds < 10) ? '0' + seconds : seconds;
                            $('#temporizador').html(minutes + ':' + seconds);
                        } else {
                            clearInterval(interval);
                            $('#temporizador').hide();
                            $('#Boton1').attr("disabled", false);
                        }
                        $(nextStateContinuar).click(function(){
                            clearInterval(interval);
                            return;
                        }); 
                }
                }, 1000);

                $("#Boton1").click(function() {
                    $(actionButton).click();
                });
            }
                   
        });
    } catch (err){
        if ( window.console && window.console.log ) {
            console.error(err,"Error en servicio --temporizadorBotonReenviar--");
        }
    }
}
function collectionTableCreditCard2() {
	try{
	    var ocultar = true;
	    $( "#collectionTableCreditCard2_1" ).find( "td[headers='_Estado']" ).each(
	        function() {
                    if("Pausada" == $( this ).html()){
                        ocultar = false;
                    }
        });
        if(ocultar){
            $("#_Estado").remove();
            $("td[headers='_Estado']").remove();
        }
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableCreditCard() {
	try{
	    
	    var restaurarEstado = function(){

            var objStatusList = {};
            if($("#CCStatusList").length){
                objStatusList = JSON.parse($("#CCStatusList").val());
            }
            
            var count = 0;
            
            $( "#collectionTableCreditCard_1" ).find( "tr" ).each(
        	        function() {
                            
                        var estado = $(this).find( "td[headers='_Estado']" );
        
                        if(estado.length){
                                                
                            var numero = $(this).find( "td[headers='_Número']" ).html();
                            var marca = $(this).find( "td[headers='_Nombre']" ).html();
                            
                            var clave = numero + marca + count;
                            
                            
                            var status = objStatusList[clave];
                            
                            if("Pausada" == status){
                                estado.addClass("creditCardPaused");
                            }
                            
                            estado.html(status);
        
                            count ++;
                        }
                        
                        
                });
        
	    }
	    
	    restaurarEstado();
	    
	    $("#collectionTableCreditCard .collection-table_collapsible_selectable_header td").attr("onclick", "javascript: hideTableWithoutAction('collectionTableCreditCard');");
	    
	    var ocultar = true;
	    $( "#collectionTableCreditCard_1" ).find( "td[headers='_Estado']" ).each(
	        function() {
                    if("Pausada" == $( this ).html()){
                        ocultar = false;
                    }
        });
        if(ocultar){
            $("#_Estado").remove();
            $("td[headers='_Estado']").remove();
        }
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function applyMaskAmount2(d,selector){
    
    var lista=$("."+selector);
    lista.each(function() {
        var elem=this;
    
        var dato=$(elem).text();
        if(typeof dato !== "number" || dato === null) dato = parseFloat(dato);
        if(typeof d === "undefined" || d<0) d = 2;
        if(dato === dato){ //check for NaN
            var enmascarado = (Math.trunc(dato * Math.pow(10,2))/Math.pow(10,2)).toString().replace(".",",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
            $(elem).text("$"+ enmascarado);
        }else{
            $(elem).text("$0,00");
        }
    });
}
function applyMaskAmount2(d,selector){
    
    var lista=$("."+selector);
    lista.each(function() {
        var elem=this;
    
        var dato=$(elem).text();
        if(typeof dato !== "number" || dato === null) dato = parseFloat(dato);
        if(typeof d === "undefined" || d<0) d = 2;
        if(dato === dato){ //check for NaN
            var enmascarado = (Math.trunc(dato * Math.pow(10,2))/Math.pow(10,2)).toString().replace(".",",").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
            $(elem).text("$"+ enmascarado);
        }else{
            $(elem).text("$0,00");
        }
    });
}
function vtCompareFloatInputAndEntityWithMsg (elem,msg,target){
    
	earlyValidation.call(target,msg,function(){
	    var importe = (parseFloat($(target).val().replace("U$S","").replace("$","").replace(/\./g,"").replace(",",".")));
	    if(importe > elem){
	    	return 0;
	    }else {
	    	return -1;
	    }
	});
	
}	
function collectionTableDebitosDirectos() {
	try{
	    
	    /*funcion para asociar a los checks*/
        var oncliClickCheck = function(check) {
            
            var status = getStopDebitStatus($(check));
            
            if($(check).prop('checked')){
                $("#countSelected").val(parseInt($("#countSelected").val())+1);
                $("#stateInUse").val(status);
                if($("#countSelected").val() == 11){
                    mostrarOcultarErrorFloat();
                    $(check).removeProp('checked');     
                    $("#countSelected").val(parseInt($("#countSelected").val())-1);
                }
            }else{
                $("#countSelected").val(parseInt($("#countSelected").val())-1);
                if($("#countSelected").val() == 0){
                    habilitarTodo();
                    $("#stateInUse").val(undefined);
                    manejarBotones();
                    return;    
                }
            }
            
            manejarBotones();    
            if (status) {
                if (status == 'Activo') {
            	    deshabilitarInactivos();
            	} else {
            		deshabilitarActivos();
            	}
            }
        };

        /*Maneja el estado de los botones segun el estado de los registros seleccionados*/
        var manejarBotones = function(){
            var status = getStopDebitStatusGeneral();
            if(status){
                if (status == 'Activo') {
            	    $("#nextStateAnular").removeAttr("disabled");
                    $("#nextStateActivar").attr("disabled",true)
            	} else {
            		$("#nextStateAnular").attr("disabled",true);
                    $("#nextStateActivar").removeAttr("disabled")
            	}
            }else{
                $("#nextStateAnular").attr("disabled",true);
                $("#nextStateActivar").attr("disabled",true)
            }
        }
        
        /*dehabilita los registros Activos*/
        var deshabilitarActivos = function() {
        	$(":checkbox").each(
        			function() {
        				if (getStopDebitStatus($(this))  == "Activo") {
        					desactivarRegistro($(this));
        				}
        			});
        };
        
        /*dehabilita los registros Inactivos*/
        var deshabilitarInactivos = function() {
        	$(":checkbox").each(
        			function() {
        				if (getStopDebitStatus($(this)) == "Inactivo") {
        					desactivarRegistro($(this));
        				}
        			});
        };
        
        var habilitarTodo = function(){
            $(":checkbox").each(
        			function() {
        				activarRegistro($(this));
        			});   
        }
        
        /*desactiva un unico registro*/
        var desactivarRegistro = function(reg) {
        	reg.attr("disabled", true);
        	let regCont = reg.parents("tr .evenRow");
        	if(regCont.length == 0){regCont = reg.parents("tr .oddRow");}
        	regCont.css("background-color", "lightgray");
        	regCont.css("opacity", 0.5);
        	var index = reg.attr("value");
        	$("#menuTableContainer" + index).attr("onMouseOver", "return;")
        };
        
        var mostrarOcultarErrorFloat= function(){
        	$(".error_float_red").css("display","table-cell");
            $(".error_float_red").css("opacity",1); 
            setTimeout(function(){$(".error_float_red").css("opacity",0);$(".error_float_red").css("display","none");},3000)
            window.scrollTo(0, 0);
        };
        
        var ocultarErrorFloat= function(){
        	$(".error_float_red").css("display","none");
        };
        
        /*Activa un unico registro*/
        var activarRegistro = function(reg) {
        	reg.removeAttr("disabled");
        	let regCont = reg.parents("tr");
        	regCont.css("background-color", "white");
        	regCont.css("opacity", 1);
        	var index = reg.attr("value");
        	$("#menuTableContainer" + index).attr("onMouseOver",
        			"showMenu('menuTableWidget" + index + "');")
        };
        
        
        /*inicializa el estado de los registros en la carga de la tabla*/
        var initTable = function() {
            
            //$("th[id='_Stop Debit']").prepend($("#widgetFilter"));
            
        	$(":checkbox").click(function() {
        		oncliClickCheck($(this))
        	});
        	
        	var statusGeneral = getStopDebitStatusGeneral();
        	manejarBotones();
        	
        	if (statusGeneral) {
        		if (statusGeneral == 'Activo') {
        			deshabilitarInactivos();
        		} else {
        			deshabilitarActivos();
        		}
        	}
        };
        
        /*Determina el estado de un registro*/
        var getStopDebitStatusGeneral = function(){
            if($("#stateInUse").val().trim()){
        	    return $("#stateInUse").val();
        	}
        	return undefined;
        }
        /*Determina el estado de un registro*/
        var getStopDebitStatus = function(selector){
            return selector.parents("tr").children("[headers='_Stop Debit']").html();
        }
        
        var asociarFiltros =function(){
            $("#actionButtonShowFiltro").unbind("click");
            $("#actionButtonShowFiltro").on("click", 
                function(){
                            if($("#section0").is(":visible")){
                                $("#menuTableContainerStopDebitFilter").css("display", "block");
                            }else{
                                $("#menuTableContainerStopDebitFilter").css("display", "none");
                            }
                            $("#section0_arrowButton").click();
    
                });
        }
        var reposicionarFiltro = function(){
            $('.stopDebitColumn').append($('#menuTableContainerStopDebitFilter').parent().html());
        }
        
        initTable();
        asociarFiltros();
        reposicionarFiltro();
        ocultarErrorFloat();
        
        	    
        	} catch (err){
        		if ( window.console && window.console.log ) {
        			console.error(err,"Error en servicio --collectionTableDebitosDirectos--");
        		}
        	}
    }
function dataForQualtrics(a_entityMis,b_apellido,c_nombre,d_entityBv,e_fechaNacimiento,f_categoria,g_datosAcceso,h_datosOficina,i_provincia,j_segmento,k_subsegmento,l_descDatosAcceso,m_descDatosOficina,n_provinciaCod,o_categoriaDesc,p_segmentoCod,q_subsegmentoCod){
	
    let e_fechaNacimientoMask = e_fechaNacimiento.substring(0,4) + "-" + e_fechaNacimiento.substring(4,6) + "-" + e_fechaNacimiento.substring(6,8);
	let g_datosAccesoMask = g_datosAcceso.substring(0,4) + "-" + g_datosAcceso.substring(4,6) + "-" + g_datosAcceso.substring(6,8) + " " + g_datosAcceso.substring(8,10) + ":" + g_datosAcceso.substring(10,12) + ":" + g_datosAcceso.substring(12,14) + g_datosAcceso.substring(17,20) + ":" + g_datosAcceso.substring(20);

    CyberBank.qualtrics.addSessionStorageProp("user.entityMis",a_entityMis);
	CyberBank.qualtrics.addSessionStorageProp("user.apellido",b_apellido);
	CyberBank.qualtrics.addSessionStorageProp("user.nombre",c_nombre);
	CyberBank.qualtrics.addSessionStorageProp("user.entityBV",d_entityBv);
	CyberBank.qualtrics.addSessionStorageProp("user.fechaNacimiento",e_fechaNacimientoMask);
	CyberBank.qualtrics.addSessionStorageProp("user.codCategoria",f_categoria);
	CyberBank.qualtrics.addSessionStorageProp("user.codDatosAcceso",g_datosAccesoMask);
	CyberBank.qualtrics.addSessionStorageProp("user.codDatosOficina",h_datosOficina);
	CyberBank.qualtrics.addSessionStorageProp("user.descProvincia",i_provincia);
	CyberBank.qualtrics.addSessionStorageProp("user.descSegmento",j_segmento);
	CyberBank.qualtrics.addSessionStorageProp("user.descSubsegmento",k_subsegmento);
	CyberBank.qualtrics.addSessionStorageProp("user.descDatosAcceso",l_descDatosAcceso);
	CyberBank.qualtrics.addSessionStorageProp("user.descDatosOficina",m_descDatosOficina);
	CyberBank.qualtrics.addSessionStorageProp("user.codProvincia",n_provinciaCod);
	CyberBank.qualtrics.addSessionStorageProp("user.descCategoria",o_categoriaDesc);
    CyberBank.qualtrics.addSessionStorageProp("user.codSegmento",p_segmentoCod);
    CyberBank.qualtrics.addSessionStorageProp("user.codSubsegmento",q_subsegmentoCod);
	CyberBank.qualtrics.addSessionStorageProp("userData.used","false");
}
function dataForQualtricsTransaction(value){
	CyberBank.qualtrics.addSessionStorageTransaction(value);
}

function reloadQualtricsIntercept() {
	try{
	    CyberBank.qualtrics.InterceptReload();
	    
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --reloadQualtricsIntercept--");
		}
	}
}
function clearDataSessionQualtrics() {
	try{
		var transactions = window.sessionStorage.getItem('user.transactions');
		var dataUsed = "true" == window.sessionStorage.getItem('userData.used');
	    if(transactions!= null && 
			(transactions.indexOf('ADHESION') >= 0 
			||transactions.indexOf('RECUPERO') >= 0 
			||transactions.indexOf('BLANQUEO') >= 0 ) 
			|| dataUsed){
			
				CyberBank.qualtrics.clearSession();
		}
		
		CyberBank.qualtrics.addSessionStorageProp("userData.used","true");

	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --clearDataSessionQualtrics--");
		}
	}
}
function showHideTablefromStatus(status, id) {
	try{
    	if("DISABLED" == status){
    	    $("#"+id).removeClass("hidden");
    	}else{
    	    $("#"+id).addClass("hidden");
    	}
	
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function activeInactiveCreditCard(elem1Div, elem2Check, eleme3Button) {
	try{
	    $(elem1Div).click(function(){$(elem2Check).click();$(eleme3Button).click(); });
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --activeInactiveCreditCard--");
		}
	}
}
function vtValidateTresNumerosRepetidos(elem,msg,target) {
  var claveNuevaAux=$(elem);
  
  earlyValidation.call(target,msg,function() {
    var claveNuevaVal = $(claveNuevaAux).val();
    if(claveNuevaVal==""){
    return -1;
    }
    for(i = 0; i < claveNuevaVal.length; i++) {
        let temp = claveNuevaVal[i];
        let contador = 1;
        for(j = i+1; j <= claveNuevaVal.length; j++) {
            if(contador == 3){
                return 0;
            }else if(temp == claveNuevaVal[j]) {
                contador++
            }
        }
    }
    return -1;
  });
}
function hideTableWithoutAction(collectionId){
	try{
	
	    $("#"+collectionId+" .collection-table_collapsible_selectable_header #flechaAbajo").addClass("flecha-abre-icon").removeClass("flecha-cierra-icon"); 
	    $("#"+collectionId).parent().find(".collection-table_collapsible_selectable_interna").css("display","none");
	    $("#"+collectionId+" .collection-table_collapsible_selectable_header td").attr("onclick", "javascript: displayTableWithoutAction('"+collectionId+"');");
	    
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --hideTableWithoutAction--");
		}
	}
}


    
function displayTableWithoutAction(collectionId){
	try{
	    
	    $("#"+collectionId+" .collection-table_collapsible_selectable_header #flechaAbajo").addClass("flecha-cierra-icon").removeClass("flecha-abre-icon");
		$("#"+collectionId).parent().find(".collection-table_collapsible_selectable_interna").css("display","table");
		$("#"+collectionId+" .collection-table_collapsible_selectable_header td").attr("onclick", "javascript: hideTableWithoutAction('"+collectionId+"');");
	
	    
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --displayTableWithoutAction--");
		}
	}
}


function collectionTableCreditCardConEstado() {
	try{
	    setAriaLabelMoneda();
	    setAriaLabelNCuenta();
	    var guardarEstadoPausaTC = function() {
	        
	        if(!$("#CCStatusList").length){
                $("body").prepend("<input type='hidden' id='CCStatusList' value='' />")
            }
            
            var statusListCC = '{';
            var count = 0;
            var comma = "";
            $( "#collectionTableCreditCardConEstado_1" ).find( "tr" ).each(
        	        function() {
                            
                        var estado = $(this).find( "td[headers='_Estado']" );
                        
                        if(estado.length){
                            var status = '';
                            if("Pausada" == estado.html()){
                                status = "Pausada";
                            }
        
                            if(count > 0){
                                comma = ","; 
                            } 
                            
                            var numero = $(this).find( "td[headers='_Número']" ).html();
                            var marca = $(this).find( "td[headers='_Nombre']" ).html();
                            var clave = numero + marca + count;
                            
                            var item = comma+'"'+clave+'":"'+status+'"';
        
                            statusListCC += item;
                            count ++;
                        }
                        
                        
                });
                
                statusListCC += '}';
                
                $("#CCStatusList").val(statusListCC);
	    }
	    
	    guardarEstadoPausaTC();
	    
	    $("#collectionTableCreditCardConEstado .collection-table_collapsible_selectable_header td").attr("onclick", "javascript: hideTableWithoutAction('collectionTableCreditCardConEstado');");
	    
	    var ocultar = true;
	    $( "#collectionTableCreditCardConEstado_1" ).find( "td[headers='_Estado']" ).each(
	        function() {
                    if("Pausada" == $( this ).html()){
                        ocultar = false;
                    }
        });
        if(ocultar){
            $("#_Estado").remove();
            $("td[headers='_Estado']").remove();
        }
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function vtValidateCuentaJudicialCBU(elem,idSelectField,target) {
    let msgCBU = "El CBU debe contener 22 caracteres numéricos.";
    let msgNCJ = "El numero de cuenta debe contener 15 caracteres numéricos.";
    earlyValidation.call(target,msgCBU,function() {
        let tipo = $(idSelectField).filter(':selected').html();
        let numero = $(elem).val();
        if(tipo == "CBU"){
            if(numero.length == 22 || numero.length == 0 ){
                return -1;
            }else{
                return 0;
            }
        }else{
            return -1;
        }
    });
    earlyValidation.call(target,msgNCJ,function() {
        let tipo = $(idSelectField).filter(':selected').html();
        let numero = $(elem).val();
        if(tipo == "Número de Cuenta Judicial"){
            if(numero.length == 15 || numero.length == 0 ){
                return -1;
            }else{
                return 0;
            }
        }else{
            return -1;
        }
    });
}
function hideTabsDebitosDirectos() {
	try{
	    $(".tab-component_tabs-container").css("display","none");
        $(".tab-component_default").css("padding-top","0px");
        $("#titleTab_text").parent().parent().css("display","none");
        $("#tableAlign003").css("display","none");
        $("#tabComponent0").removeClass("tab-component_header");
        $(".collection-table_collapsible_selectable_interna").parent().parent().addClass("scroll").parent().css("display","inline-grid");
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --hideTabsDebitosDirectos--");
		}
	}
}
function collectionTableConsultaAdhesion() {
	try{
	    
	    /*funcion para asociar a los checks*/
        var onClickRadio = function(radio) {
            
            var status = getStopDebitStatus($(radio));
            
            if($(radio).prop('checked')){
                $("#countSelected").val(parseInt($("#countSelected").val())+1);
                $("#stateInUse").val(status);
            }else{
                $("#countSelected").val(parseInt($("#countSelected").val())-1);
                if($("#countSelected").val() == 0){
                    habilitarTodo();
                    $("#stateInUse").val(undefined);
                    manejarBotones();
                    return;    
                }
            }
            
            manejarBotones();    
            
        };

        /*Maneja el estado de los botones segun el estado de los registros seleccionados*/
        var manejarBotones = function(){
            var status = getStopDebitStatusGeneral();
            var restricted = false;
            if($("input:checked").parents("tr").children(".center-align").find("li").length == 1){
                restricted = ($("input:checked").parents("tr").children(".center-align").find("li a").html() == "Ver detalle");
            }
            
            if(status){
                if (status == 'Pendiente' && !restricted) {
                    $("#tableAlign27").css("display","block");
                	$("#tableAlignVer").css("display","none");
            	    $("#nextStateAnularBaja").removeAttr("disabled");
                    $("#nextStateSolicitarBaja").attr("disabled",true);
            	} else{
            	    if(status == 'Bajas Confirmadas' || (status == 'Activa' && restricted) || (status == 'Pendiente' && restricted) ){
                	     $("#tableAlign27").css("display","none");
                	     $("#tableAlignVer").css("display","block");
            	    } else {
                    		$("#tableAlign27").css("display","block");
                    	    $("#tableAlignVer").css("display","none");
                	        $("#nextStateAnularBaja").attr("disabled",true);
                            $("#nextStateSolicitarBaja").removeAttr("disabled");
            	        }
            	}
            }else{
                $("#tableAlignVer").css("display","none");
                $("#tableAlign27").css("display","block");
                $("#nextStateAnularBaja").attr("disabled",true);
                $("#nextStateSolicitarBaja").attr("disabled",true)
            }
        }
        
        
        
        
        /*inicializa el estado de los registros en la carga de la tabla*/
        var initTable = function() {
            
            //$("th[id='_Stop Debit']").prepend($("#widgetFilter"));
            
        	$(":radio").click(function() {
        		onClickRadio($(this))
        	});
        	
        	var statusGeneral = getStopDebitStatusGeneral();
        	manejarBotones();
        	
        	/*if (statusGeneral) {
        		if (statusGeneral == 'Adhesión Activa') {
        			deshabilitarInactivos();
        		} else {
        			deshabilitarActivos();
        		}
        	}*/
        };
        
        /*Determina el estado de un registro*/
        var getStopDebitStatusGeneral = function(){
            return $("input:checked").parents("tr").children("[headers='_Adhesión']").html();
        	
        }
        /*Determina el estado de un registro*/
        var getStopDebitStatus = function(selector){
            return selector.parents("tr").children("[headers='_Adhesión']").html();
        }
        
        var asociarFiltros =function(){
            $("#actionButtonShowFiltro").unbind("click");
            $("#actionButtonShowFiltro").on("click", 
                function(){
                            if($("#section0").is(":visible")){
                                $("#menuTableContainerStopDebitFilter").css("display", "block");
                            }else{
                                $("#menuTableContainerStopDebitFilter").css("display", "none");
                            }
                            $("#section0_arrowButton").click();
    
                });
        }
        var reposicionarFiltro = function(){
            $('.stopDebitColumn.collection-column_default._title').append($('#menuTableContainerStopDebitFilter').parent().html());
        }
        
        initTable();
        manejarBotones();
        asociarFiltros();
        reposicionarFiltro();
        
        	    
        	} catch (err){
        		if ( window.console && window.console.log ) {
        			console.error(err,"Error en servicio --collectionTableConsultaAdhesion--");
        		}
        	}
    }
function enableDisableButtonWithSelectOption(actionButton,selectField,option){
    var valor=$(selectField).val();
    if (valor!=option){
        $(actionButton).attr("disabled",false);
        
    } else{
        $(actionButton).prop("disabled", true);
        
    }
    
}

function restoreTabsDebitosDirectos() {
	try{
	    $(".tab-component_tabs-container").css("display","table");
        $(".tab-component_default").css("padding-top","20px");
        $("#titleTab_text").parent().parent().css("display","table-row");
        $("#tableAlign003").css("display","block");
        $("#tabComponent0").addClass("tab-component_header");
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --restoreTabsDebitosDirectos--");
		}
	}
}
function enableDisableBuscar() {
	try{
	    if("Ninguno" == $("#selectFieldCuentas").val() && $("#textFieldEmpresaA").val().length < 3) {
	        $("#Boton1").attr("disabled","false");
	        
	    } else {
	        $("#Boton1").removeAttr("disabled");
	        
	    }
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --enableDisableBuscar--");
		}
	}
}
function centrarErrorCollection() {
	try{
	    $("#errorPanelCollection").css("padding","70px 0 20px 0px");
	    $("#errorPanelCollection").css("background-position","120px 0px");
	    $("#errorPanelCollection").css("text-align","center");
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function replaceByOpenWorkflow(elemTxt, workflow) {
	try{ 
	    var html = $(elemTxt).html();
	    var textos = html.split("|");
	    
	    if (textos.length < 3) return;
	    
	    var aHrefOpen = "<u style=\"cursor: pointer;\" href='#' onclick= \"submitSubmenuByAjax(\'"+workflow+"\', \'\');\">";
	    var aHrefClose = "</u>";
	    
	    var newHtml = textos[0] + aHrefOpen + textos[1] + aHrefClose + textos[2];
	    
	    $(elemTxt).html(newHtml);
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --replaceByOpenWorkflow--");
		}
	}
}
function dataFor_IS_update_status(status) {
	try{
	    CyberBank.IS.transactionData.estado_operacion = status;
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --dataFor_IS_update_status--");
		}
	}
}
function concatEntityValues(outElem,val1,val2,val3,val4,val5){
    arr = [val1,val2,val3,val4,val5];
    concatResult = "";
    for (i = 0; i < arr.length; i++) { 
        if(arr[i]===undefined || arr[i] === null || arr[i]==='' ||
            arr[i] === 'NaN' || arr[i] == 'null') continue;
          concatResult+=arr[i];
    }
    $(outElem).val(concatResult);
}
function ValidateFieldAndCheck(elem, msg) {
	earlyValidation.call(elem,msg,function(){
		var elemValue = getElementValue(elem)
		var isReadOnly= elem.prop("readonly")	
		var isntValid = !isReadOnly && (elemValue=="Ninguno" || elemValue=="")

		if(isntValid){
			return 0;
		}
		return -1;
	});
}
function allCheckCollectionChecked(collection){
var trr=$(collection).find("tbody").find("tr");
for (var i = trr.length - 1; i >= 0; i--) {
   var elem=trr[i];
   $($(elem).find("td")[0]).find("input").prop('checked',true);
}
}
function notEventCheckInCollection(numColumna, tabla, valor){
  var coleccion = $(tabla);
  var filas = coleccion.find("tbody").find("tr");
  var columnas = filas.find("td");
  for (var i=0; i<=filas.length-1; i++){
    var filaActual = filas[i];
    var columna3 = $(filaActual).find("td")[numColumna];
    var columna0 = $(filaActual).find("td")[0];
    var radioButton = $(columna0).find("input");
    if ($(columna3).html() != valor){
      $(radioButton).prop('disabled', true);
      $(radioButton).prop('checked',true);
    } 
  }
}
function testRuleServiceManager() {
	try{
	    console.log("test-RuleServiceManager<div></div> - Modificado");
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function test_Tomas(element, element2, element3) {
	try{
	    console.log(element);
	    console.log(element2);
	    console.log(element3);
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function dataFor_IS_solicitud_de_prestamos(a_podesSolicitarHasta, b_importeDelPrestamo, c_plazo, d_destinoFondos) {
	try{
	    
	    CyberBank.IS.action = "SolicitudPrestamos";
	    CyberBank.IS.setTransactionData({monto_maximo:a_podesSolicitarHasta, monto_operacion: b_importeDelPrestamo, plazo_operacion: c_plazo, motivo_operacion: d_destinoFondos, estado_operacion:"INICIADA"});
	    
	    $("#range_widgetSliderSelectorAmount").on("input",function(){
	                                                                    CyberBank.IS.transactionData.monto_operacion = $("#floatField0").attr("unmasked");
	                                                                });
	    
        $("#floatField0").on("blur",function(){
                                                CyberBank.IS.transactionData.monto_operacion = $("#floatField0").attr("unmasked");
                                            });
        $("#myRangeCat").on("input",function(){
                                                CyberBank.IS.transactionData.plazo_operacion = $("#SelectedTerm").html();
                                            });
	    
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}

function dataFor_IS_user_info(a_userID, b_userEmail, c_userCell) {
	try{
	    CyberBank.IS.setUserData(a_userID, b_userEmail, c_userCell);
	    
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function enableDisableButtonWithSelectOption(actionButton,selectField,option){
    var valor=$(selectField).val();
    if (valor!=option){
        $(actionButton).attr("disabled",false);
        
    } else{
        $(actionButton).prop("disabled", true);
        
    }
    
}
function unifyCollections() {
    
    try{
        var repeat;
        var max = Number($("#section0_repeats").val());
        for(repeat=1; repeat < max; repeat++){
            $('#section0_repeat0_div tbody').append($('#section0_repeat'+repeat+'_div tbody').html());
            $('#section0_repeat'+repeat+'').css('display', 'none');
        }
    
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --unifyCollections--");
		}
	}
}
function collectionTableConsultaReversa() {
	try{
        
        /*Determina el estado de un registro*/
        var getStopDebitStatusGeneral = function(){
            return $("input:checked").parents("tr").children("[headers='_null']").find("ul li:last").children("a").html();
        	
        }
        
        /*Maneja el estado de los botones segun el estado de los registros seleccionados*/
        var manejarBotones = function(){
            var status = getStopDebitStatusGeneral();
            
            if(status){
                if (status == 'Anular reversa') {
                    $("#tableAlign27").css("display","block");
                	$("#tableAlignVer").css("display","none");
            	    $("#nextStateAnularReversa").removeAttr("disabled");
                    $("#nextStateSolicitarReversa").attr("disabled",true);
            	} else if(status == 'Solicitar reversa'){
                	$("#tableAlign27").css("display","block");
                    $("#tableAlignVer").css("display","none");
                	$("#nextStateSolicitarReversa").removeAttr("disabled");
                	$("#nextStateAnularReversa").attr("disabled",true);
            	} else {
            	    $("#tableAlign27").css("display","none");
                	$("#tableAlignVer").css("display","block");
                }
            }else{
                $("#tableAlignVer").css("display","none");
                $("#tableAlign27").css("display","block");
                $("#nextStateSolicitarReversa").attr("disabled",true);
                $("#nextStateAnularReversa").attr("disabled",true);
            }
        }
        
        /*inicializa el estado de los registros en la carga de la tabla y formatea las fechas*/
        var initTable = function() {
            
            $("td[headers='_Débito']").each(function(){$(this).html($(this).html().split('-')[2]+"/"+$(this).html().split('-')[1]+"/"+$(this).html().split('-')[0])});
            
            $(":radio").click(function() {
        		manejarBotones();
        	});
        	manejarBotones();
        	
        };
        
	    var asociarFiltros =function(){
            $("#actionButtonShowFiltro").unbind("click");
            $("#actionButtonShowFiltro").on("click", 
                function(){
                            if($("#section0").is(":visible")){
                                $("#menuTableContainerStopDebitFilter").css("display", "block");
                            }else{
                                $("#menuTableContainerStopDebitFilter").css("display", "none");
                            }
                            $("#section0_arrowButton").click();
                            
                            //Autocompletar fechas default
                            if($("#dateFieldFechaHastaReversa").val()==''){
                                var newDate = new Date();
                                newDate.setDate(newDate.getDate() - 1);
                                var diaTo = String(newDate.getDate());
								if(diaTo.length == 1){diaTo = "0"+diaTo;}
                                var mesTo = String(newDate.getMonth()+1);
								if(mesTo.length == 1){mesTo = "0"+mesTo;}
                                var anioTo = String(newDate.getFullYear());
                                
                                var newDateFrom = new Date();
                                newDateFrom.setDate(newDateFrom.getDate() - 31);
                                
                                var diaFrom = String(newDateFrom.getDate());
								if(diaFrom.length == 1){diaFrom = "0"+diaFrom;}
                                var mesFrom = String(newDateFrom.getMonth()+1);
								if(mesFrom.length == 1){mesFrom = "0"+mesFrom;}
                                var anioFrom = String(newDateFrom.getFullYear());
                                
                                var stringFechaDesde = diaFrom+"/"+mesFrom+"/"+anioFrom;
                                datePickerController.setSelectedDate("dateFieldFechaDesdeReversa",newDateFrom);
                                datePickerController.setCursorDate("dateFieldFechaDesdeReversa",newDateFrom);
                                
                                var stringFechaHasta = diaTo+"/"+mesTo+"/"+anioTo;
                                datePickerController.setSelectedDate("dateFieldFechaHastaReversa",newDate);
                                datePickerController.setCursorDate("dateFieldFechaHastaReversa",newDate);
                            }
    
                });
        }
        
        var reposicionarFiltro = function(){
            $("#_Estado").append($('#menuTableContainerStopDebitFilter').parent().html());
        }
        
        
        initTable();
        manejarBotones();
        asociarFiltros();
        reposicionarFiltro();
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio collectionTableConsultaReversa");
		}
	}
}
function vtCompareRangeDatesFromToday(date,days,msg,target){
    earlyValidation.call(target,msg,function(){

        var dias = days;

        function transformarFecha(day){
            var fecha = $(day).val();
            var dia = (fecha).slice(0,2);
            var mes = (fecha).slice(3,5);
            var anio = (fecha).slice(6,10);
            var fechaTexto = anio+"/"+mes+"/"+dia;
            var fechaFinal = new Date(fechaTexto);
            return fechaFinal;
        }

        var fecha = transformarFecha(date);
        var fechaHoy = new Date();

        function calcularDias(fecha1, fecha2){
            var diferencia = (fecha2 - fecha1) / (1000*60*60*24);
            return diferencia;
        }
            
        if(dias<0){
            var diasEntreFechaYHoy = calcularDias(fecha, fechaHoy);
            dias = dias * -1;
        }else{
            var diasEntreFechaYHoy = calcularDias(fechaHoy, fecha);
        }
        

        if (diasEntreFechaYHoy > dias) {
            return 0;
        }
        return -1; 
    });        
}
function collectionTablePermisosSobreMisCuentas() {
	try{
		var entidades = "";

        var mostrarOcultarCuentas = function(tdVer, trId){

            if($(tdVer).hasClass("cuentasOcultas")){
                $("#collectionTablePermisosSobreMisCuentas").find(".mostrada").each(function(){
                    $(this).addClass("hidden");
                });
                $( "#collectionTablePermisosSobreMisCuentas" ).find("td[headers='_Desplegable'].cuentasMostradas").each(function(){
                    $(this).addClass("cuentasOcultas");
                    $(this).removeClass("cuentasMostradas");
                    $(this).html("Ver cuentas");
                });
            	$(tdVer).addClass("cuentasMostradas");
                $(tdVer).removeClass("cuentasOcultas");
                $(tdVer).html("Ocultar cuentas");
                $(".trOcultable_"+trId).removeClass("hidden");
                $(".trOcultable_"+trId).addClass("mostrada");
            }else{
                $(tdVer).addClass("cuentasOcultas");
                $(tdVer).removeClass("cuentasMostradas");
                $(tdVer).html("Ver cuentas");
                $(".trOcultable_"+trId).addClass("hidden");
                $(".trOcultable_"+trId).removeClass("mostrada");
            }
        }
        
		var formatearTrAgrupador = function(elem, trId){
            var ori = $(elem).parent();
            var copy = ori.clone();
            
            var checked = ori.find("input")[0].checked;
            
            ori.after(copy);
			ori.find("td[headers='_Cuenta']").addClass("hidden");
            formatearCuentas(copy.find("td[headers=_Entidad]")[0], trId);
            ori.find("td[headers='_Desplegable']").addClass("cuentasOcultas");
            ori.find("td[headers='_Desplegable']").click(function(){mostrarOcultarCuentas(this, trId)});
            ori.find("input")[0].checked = checked;
		}

        var ocultarColumnas = function(){
            $("#_Cuenta").addClass("hidden");
            $("#_urlTyC").addClass("hidden");
			$("#_Desplegable").addClass("hidden");
            $("td[headers='_urlTyC']").addClass("hidden");
        }

        var bindEventRadio = function(){
            $(":radio").click(function() {
        		$("#actionButton2").removeAttr("disabled");
        	});
        }

        var agregarLinkTyC = function(tr, itemId){
            
            $("#tycLink_"+itemId).remove();
            var url = $($(tr).find("td[headers='_urlTyC']")[0]).html();

            
            var trLink = document.createElement("tr");
            trLink.setAttribute("id","tycLink_"+itemId);
            trLink.setAttribute("class","trOcultable_"+itemId+" hidden evenRow");
            
            var tdEmpty = document.createElement("td"); 
            trLink.appendChild(tdEmpty); 
            var tdLink = document.createElement("td"); 
            var a = document.createElement("a");
            tdLink.setAttribute("style","height: 40px; padding-top: 20px; padding-left: 12px;");
            a.setAttribute("href",url); 
            a.setAttribute("target","_blank");
            a.setAttribute("class","text_primary-base");
            $(a).html("Ver términos y condiciones"); 
            tdLink.appendChild(a); 
            trLink.appendChild(tdLink);
            $(tr).after(trLink);
        
        }
        
		var formatearCuentas = function(elem, itemId){
			var tr = $(elem).parent();
			tr.find("td[headers='_Entidad']").addClass("hidden");
            tr.find("td[headers='_Desplegable']").addClass("hidden");
            tr.find(":radio").parent().html("");
            tr.find("td[headers='_Logo']").html("<div style='background-size: 35px;"+
                "width: 35px;"+
                "height: 35px;"+
                "background-position: center;'></div>");
            tr.addClass("trOcultable_"+itemId);
            $(".trOcultable_"+itemId).removeClass("evenRow");
            $(".trOcultable_"+itemId).removeClass("oddRow");
            tr.addClass("hidden");

            agregarLinkTyC(tr, itemId);
		}

        var formatearImagenes = function(){
            var imgComponent = document.getElementById("imageComponent01");
            var imgSrc = imgComponent.getAttribute("src");
            $("#imageComponent01").addClass("hidden");
            
            $("#collectionTablePermisosSobreMisCuentas").find( "td[headers='_Logo']").each(function(){
                 var imgUrl = $(this).html();
                $(this).html("<div style='background: url("+imgUrl+") no-repeat, url("+imgSrc+") no-repeat;"+
    	        "background-size: 35px;"+
    		    "width: 35px;"+
    		    "height: 35px;"+
    		    "background-position: center;'</div>");            
            })
	    }
	    
	    formatearImagenes();
        
	    $( "#collectionTablePermisosSobreMisCuentas" ).find("td[headers='_Entidad']").each(function(){
			var entidad ="|"+ $(this).html() + "|";
            var position = entidades.indexOf(entidad);
			if ( position == -1){
				entidades = entidades + entidad;
                position = entidades.indexOf(entidad);
				formatearTrAgrupador(this,position);
				
			}else{
                formatearCuentas(this, position);
				
				
			}
			});
    	bindEventRadio();
        ocultarColumnas();
		
		
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --collectionTablePermisosSobreMisCuentas--");
		}
	}
}
function vtValidateCbuOAliasYCtaJudicial(elemento,mensaje){
    
    var msgCtaJudicial = "Para realizar depósitos judiciales debés ingresar por Transferencias / Depósitos Judiciales.";
    var cbuValido = false;
    
    earlyValidation.call(elemento,mensaje,function(){    
        var cbu = $(elemento).val();
        var retorno = false;
        var VEC1 = new Array(7, 1, 3, 9, 7, 1, 3);
        var VEC2 = new Array(3, 9, 7, 1, 3, 9, 7, 1, 3, 9, 7, 1, 3);
        var valido = false;
        var bloque1 = cbu.substring(0, 7);
        var digitoValidador1 = cbu.substring(7, 8);
        var bloque2 = cbu.substring(8, 21);
        var digitoValidador2 = cbu.substring(21);
        var acum = 0;
        cbuValido = false;
    
        if(cbu.length === 22){
                if (/^([0-9])*$/.test(cbu)){
                    
                    for (var i = 0; i < 7; i++) {
                        acum += bloque1.substring(i, i + 1) * VEC1[i];
                    }
                    var strAcum = (acum + '');
                    var digitoVCalculado1 = (10 - (strAcum % 10)) % 10;
                    valido = (digitoVCalculado1 == digitoValidador1);
                    acum = 0;
                    
                    for (var i = 0; i < 13; i++) {
                        acum += bloque2.substring(i, i + 1) * VEC2[i];
                    }
                    strAcum = (acum + '');
                    var digitoVCalculado2 = (10 - (strAcum % 10)) % 10;
                    if (true == (digitoVCalculado2 == digitoValidador2) && valido){ 
                        retorno = true;
                        cbuValido = true;
                    }
                    else{
                        return 0;
                    }
                    return -1;
                }
                else{
                    return 0;
                }
        }
        else{
           return -1; 
        } 
    });
    
    earlyValidation.call(elemento,msgCtaJudicial,function(){
        var cbu = $(elemento).val();
        
        var banco = cbu[0] + cbu[1] + cbu[2];           //Los primeros 3 digitos son el codigo del Banco
                                                        //Para Banco Macro es 285
        if(cbuValido == true){
            if (banco == '285'){
                if (cbu[8] == '5' || cbu[8] == '6'){    //Digito en novena posicion
                    return 0;  // muestra mensaje       // 5 corresponde a Cta Judicial en pesos
                }                                       // 6 corresponde a Cta Judicial en dolares
                else{
                    return -1; // no muestra mensaje
                }
            }
            else{
                return -1;
            }
        }
        else{
           return -1; 
        }
    });
}
function invertirCamposCompraVenta(creditAmount, debitAmount,divAmounts, modo) {
	try{
	    if(modo=="compra"){
	        debitAmount.remove();
	        divAmounts.prepend(debitAmount)
	    }
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function guardarErroryPonerFoco(elem) {
	try{
	
	    $("#errorPanelCollection").attr("id","errorPanelCollectionNoBorrar");
    	setTimeout(function(){$(elem).focus();},10);
	    
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --guardarErroryPonerFoco--");
		}
	}
}
function NuevoID(ValorID) {
     // crea un nuevo div
  // y añade contenido
 
  var newDiv = document.createElement("div");
  newDiv.setAttribute("id", ValorID);
  
var currentDiv = document.getElementById("div1");
  document.body.insertBefore(newDiv, currentDiv);


}
function printQr(urlQr) {
	try{
        //Ocultamos el sitio
        $("#mainContainer").css("display","none");
        //Se muestra el contenido a imprimir
        $( "body" ).append("<div id='tempContainerToPrint' style='display:flex; justify-content:center; align-items:center'><img id='qr' height='470' width='470' src="+urlQr+"></div>");
        //Se imprime el contenido seleccionado
        window.print();
        //Se remueve el contenido
        $("#tempContainerToPrint").remove();
        //Se restaura el contenido
        $("#mainContainer").css("display","block");
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function temporizadorTarjetaDigital(boton, tableAlign, tiempoEnum) {
	try{
        var str = "<div><p id='mensaje' align='center'>Este mensaje se ocultará en <span id='temporizador'></span> segundos.</p></div>";
        $(tableAlign).html(str);
        
        var timeCountdown = parseInt(tiempoEnum);
        var minutes = Math.floor(timeCountdown / 60);
        var seconds = timeCountdown % 60;
        
        minutes = (minutes < 10) ? '0' + minutes : minutes;
        seconds = (seconds < 10) ? '0' + seconds : seconds;
        $("#temporizador").html(minutes + ":" + seconds);
        
        var interval = setInterval(function() {
            if (seconds <= 0) {
                if(minutes >= 1){
                    minutes--;
                    minutes = (minutes < 10) ? '0' + minutes : minutes;
                }                    
            } else {
                seconds--;
                seconds = (seconds < 10) ? '0' + seconds : seconds;
                $("#temporizador").html(minutes + ":" + seconds);
            }
        }, 1000);
        
        var myTimeout = setTimeout(function(){clearInterval(interval);$("#"+boton).click();}, timeCountdown*1000);
        
        $("#"+boton).on("click", function(){
            clearInterval(interval);
            clearTimeout(myTimeout);
        });
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --temporizadorTarjetaDigital--");
		}
	}
}
function logicaTcDigital(brand, fechaDesde, fechaHasta, nroTarjeta) {
	try{
	    var mostrarOcultarTc = function(){

	        if($("#contenedorBoton").attr("status") == "ojoCerrado"){
	            $("#contenedorBoton").removeClass("ojoCerrado");
	            $("#contenedorBoton").addClass("ojoAbierto");
	            $("#contenedorBoton").attr("status", "ojoAbierto");
	            if("VISA" == brand){
	                $("#nroTarjeta span").html(nroVisibleVisa); 
	            } else if("AMEX" == brand){
	                $("#nroTarjeta span").html(nroVisibleAmex);   
	            }
	            
	        } else if($("#contenedorBoton").attr("status") == "ojoAbierto"){
	            $("#contenedorBoton").removeClass("ojoAbierto");
	            $("#contenedorBoton").addClass("ojoCerrado");
	            $("#contenedorBoton").attr("status", "ojoCerrado");
	            if("VISA" == brand){
	                $("#nroTarjeta span").html(nroOcultoVisa); 
	            } else if("AMEX" == brand){
	                $("#nroTarjeta span").html(nroOcultoAmex);   
	            }
	        }
	    }
	    
	    var copiarNumeroTc = function(nroTarjeta){
	        if(location.protocol == 'https:'){
                navigator.clipboard.writeText(nroTarjeta);
                alert("Número de tarjeta copiado");
	        }
	        else {
	            alert("El sitio "+location.protocol+" no es seguro para realizar la copia.");
	            console.log("El sitio "+location.protocol+" no es seguro para realizar la copia.");
	        }
	    }
	    
	    nroTarjeta = nroTarjeta.toString();
	    
	    var nroVisibleVisa = nroTarjeta.substring(0,4) + " " + nroTarjeta.substring(4,8) + " " + nroTarjeta.substring(8,12) + " " + nroTarjeta.substring(12,16);
	    var nroVisibleAmex = nroTarjeta.substring(0,4) + " " + nroTarjeta.substring(4,10) + " " + nroTarjeta.substring(10,15);
	    
	    var nroOcultoVisa = "&#9679;&#9679;&#9679;&#9679;  &#9679;&#9679;&#9679;&#9679;  &#9679;&#9679;&#9679;&#9679; " + nroTarjeta.substring(12,16);
	    var nroOcultoAmex = "&#9679;&#9679;&#9679;&#9679; &#9679;&#9679;&#9679;&#9679;&#9679;&#9679; &#9679;"+ nroTarjeta.substring(11,15);
	    
	    var dateFrom = fechaDesde.substring(4,6) + "/" + fechaDesde.substring(2,4);
	    var dateTo = fechaHasta.substring(4,6) + "/" + fechaHasta.substring(2,4);
	    
	    if(brand == "VISA"){
	        $("#contenedorTarjetaVirtual").addClass("digital-card-visa");
	        $("#nroTarjeta span").html(nroOcultoVisa);
	    }
	    if(brand == "AMEX"){
	        $("#contenedorTarjetaVirtual").addClass("digital-card-amex");
	        $("#nroTarjeta span").html(nroOcultoAmex);
	    }
	    
	    $("#actionButtonSecondFactorConfirmation").on("click", function(){
	        $("#contenedorBoton").removeClass("ojoAbierto");
            $("#contenedorBoton").addClass("ojoCerrado");
            $("#contenedorBoton").attr("status", "ojoCerrado");
            if("VISA" == brand){
                $("#nroTarjeta span").html(nroOcultoVisa); 
            } else if("AMEX" == brand){
                $("#nroTarjeta span").html(nroOcultoAmex);   
            }
	    });
	    
	    $("#fechaDesde span").html(dateFrom);
	    $("#fechaHasta span").html(dateTo);
	    $("#contenedorBoton").on("click", mostrarOcultarTc);
	    $("#actionButtonCopiar").on("click", function() {copiarNumeroTc(nroTarjeta)});
	    
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en la regla de servicio --logicaTcDigital--");
		}
	}
}
function applyTokenCustomText(customText) {
	try{
	    if(customText != "null" && customText != undefined){
	        $("#label_textFieldToken").html(customText)
	    }
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --applyTokenCustomText--");
		}
	}
}
function setAriaLabelMoneda() {
	try{
	    var convertToLocalFormat = function (number) {
            try {
                let numberClear = number.replaceAll(".","");
                let numberFloat = parseInt(numberClear);
                return numberFloat.toLocaleString();
        } catch (e) {
                return number;
                }
        }
	    let clase = "aria-moneda"
	    $('.' + clase).each(function () {
            let valor = $(this).text().trim();
            if (valor === "-" || valor === undefined) {
                $(this).attr('tabindex', -1);
            } else {
                let ariaLabel = "";
                let moneda = valor.split(' ')[0];
                if (moneda.startsWith("-")) {
                    ariaLabel = "Menos ";
                    moneda = moneda.slice(1);
                }
                if (moneda === "$") {
                    moneda = " pesos";
                } else if (moneda === "U$S") {
                    moneda = " dolares";
                }
                let [monto, decimales] = valor.split(' ')[1].split(',');
                if(monto.startsWith("-")){
                    ariaLabel = "Menos ";
                    monto = monto.slice(1);
                }
                monto = convertToLocalFormat(monto);
                ariaLabel += monto + moneda;
                if (decimales) {
                    ariaLabel += " con " + decimales + " centavos";
                }
                $(this).attr('aria-label', ariaLabel);
                $(this).removeClass(clase)
            }
        });
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableCreditCard2ConEstado() {
	try{
	    setAriaLabelMoneda();
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableCuentas() {
	try{
	    
	    $("#collectionTableCuentas .collection-table_collapsible_selectable_header td").attr("onclick", "javascript: hideTableWithoutAction('collectionTableCuentas');");
	    
	    var ocultar = true;
	    $( "#collectionTableCuentas_1" ).find( "td[headers='_Estado']" ).each(
	        function() {
                    if("Pausada" == $( this ).html()){
                        ocultar = false;
                    }
        });
        if(ocultar){
            $("#_Estado").remove();
            $("td[headers='_Estado']").remove();
        }
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}

function collectionTableLoans() {
    try{
        setAriaLabelMoneda();
        setAriaLabelNCuenta();
        setAriaLabelReplacePesosForTable("_Nombre",$("#collectionTableLoans_1"));
        var guardarEstadoPausaL = function() {
            
            if(!$("#CCStatusList").length){
                $("body").prepend("<input type='hidden' id='CCStatusList' value='' />")
            }
            
            var statusListCC = '{';
            var count = 0;
            var comma = "";
            $( "#collectionTableLoans_1" ).find( "tr" ).each(
                    function() {
                            
                        var estado = $(this).find( "td[headers='_Estado']" );
                        
                        if(estado.length){
                            var status = '';
                            if("Pausada" == estado.html()){
                                status = "Pausada";
                            }
        
                            if(count > 0){
                                comma = ","; 
                            } 
                            
                            var numero = $(this).find( "td[headers='_Número']" ).html();
                            var marca = $(this).find( "td[headers='_Nombre']" ).html();
                            var clave = numero + marca + count;
                            
                            var item = comma+'"'+clave+'":"'+status+'"';
        
                            statusListCC += item;
                            count ++;
                        }
                        
                        
                });
                
                statusListCC += '}';
                
                $("#CCStatusList").val(statusListCC);
        }
        
        guardarEstadoPausaL();
        
        $("#collectionTableLoans .collection-table_collapsible_selectable_header td").attr("onclick", "javascript: hideTableWithoutAction('collectionTableLoans');");
        
        var ocultar = true;
        $( "#collectionTableLoans_1" ).find( "td[headers='_Estado']" ).each(
            function() {
                    if("Pausada" == $( this ).html()){
                        ocultar = false;
                    }
        });
        if(ocultar){
            $("#_Estado").remove();
            $("td[headers='_Estado']").remove();
        }
    } catch (err){
        if ( window.console && window.console.log ) {
            console.error(err,"Error en servicio --serviceName--");
        }
    }
}
function collectionTableLoans2() {
	try{
	    setAriaLabelMoneda();
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableLoanPF_1() {
	try{
	    setAriaLabelMoneda();
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableCuotasPrestamo() {
	try{
	    setAriaLabelMoneda();
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableMovimientos() {
	try{
	    setAriaMoneda();
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableMovimientosSearch() {
	try{
	    setAriaLabelMoneda();
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableMovimientosDolar() {
	try{
	    setAriaLabelMoneda();
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableMovimientosSearchDolar() {
	try{
	    setAriaLabelMoneda();
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableMovimientosOnlyDate() {
	try{
	    setAriaLabelMoneda();
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableMovimientosDolarOnlyDate() {
	try{
	    setAriaLabelMoneda();
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function setAriaLabelNCuenta() {
	try{
	    let clase = "aria-ncuenta"
	    $('.' + clase).each(function () {
            let cuentaConMascara = $(this).text();
            if (cuentaConMascara === "-" || cuentaConMascara === undefined) {
                $(this).attr('tabindex', -1);
            } else {
                let ariaLabel = "";
                let caracteres = cuentaConMascara.split("");
                caracteres.forEach((caracter, i) =>{
                   if(!isNaN(caracter) && i< caracteres.length-1){
                       caracteres[i] = caracter + " ";
                    } 
                });
                ariaLabel = caracteres.join("");
                $(this).attr('aria-label', ariaLabel);
                $(this).removeClass(clase)
            }
        });
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function downloadPDFEnum(url) {
	try{
	    	var downloadWindow = window.open(url, '_blank', 'fullscreen=no');
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function enableButtonWithInputs(boton, input1, input2) {
	try{
	    if(input1[0].value != input1.attr('old-value') || input2[0].value != input2.attr('old-value')){
    	    if((input1[0].value != "" || input2[0].value != "") && !(input1.attr('disabled') == 'disabled' && input2.attr('disabled') == 'disabled')){
    	        if(!(input1.hasClass('error') || input2.hasClass('error'))){
    	            boton.removeAttr('disabled');
    	        }else {
    	            boton.attr('disabled','disabled');
    	        }
    	    }else{
    	        boton.attr('disabled','disabled');
    	    }
	    }else{
    	   boton.attr('disabled','disabled');
    	}
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function textField3dSecure(label,msgDatoEditado,msgDatoEnEdicion,msgDatoIngresado,oldValue,textField) {
	try{
	    input = $(textField)[0];
	    if(oldValue == null || oldValue == "null"){
	        oldValue = "";
	    }
	    input.setAttribute('old-value', oldValue);
	    let lapizId = textField.attr("id") + "_Lapiz";
	    let container = input.closest(".col .s12");
	    $(container).append('<img id=' + lapizId + ' src="images/editarAlias_icn.png" style="margin-left: 20px;position: absolute;bottom: 15px;cursor: pointer;" hidden="true">');
	    if(input.value != ''){
	        $('#' + lapizId).attr('hidden', false);
	        input.setAttribute('disabled', 'disabled');
	        $(label).text(msgDatoIngresado);
	        $('#' + lapizId).on('click', function(e){
	           $('#' + lapizId).attr('hidden', true);
	           $(label).text(msgDatoEnEdicion);
	           let inputId = e.currentTarget.id.split('_')[0];
	           let clickInput =  $('#'+inputId);
	           clickInput.removeAttr('disabled');
	           clickInput.focus();
	           e.currentTarget.setAttribute('hidden', true);
	        });
	    }
	    if(input.value != input.getAttribute('old-value') && !(input.value == "" && input.getAttribute('old-value') == null)){
	        $(label).text(msgDatoEditado);
	        input.removeAttribute('disabled');
	        $('#' + lapizId).attr('hidden', true);
	    }
	}
	catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}


function disableField3dSecure(boton,input,label,msgDatoEditado,msgDatoIngresado) {
	try{
	    if(input[0].value == input[0].getAttribute('old-value') && input[0].value != ""){
	        $(label).text(msgDatoIngresado);
	        input[0].setAttribute('disabled','disabled');
	        let id = input.attr("id") + "_Lapiz";
	        $('#' + id).attr('hidden', false);
	    }else{
	        if( input[0].value != ""){
	            $(label).text(msgDatoEditado);
	        }
	    }
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function enableElementIfSubmit(elem, submitButton) {	
	try{		
		if (!$(submitButton).attr("disabled")) {
			$(elem).removeAttr("disabled");
		}
	}catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --enableElementIfSubmit--");
		}
	}
}
function vtValidateMayusculaMinusculaNumero(claveNueva,msg,target) {
  var claveNuevaAux=$(claveNueva);

  earlyValidation.call(target,msg,function() {
    var claveNuevaVal = $(claveNuevaAux).val();
    if((claveNuevaVal != "") && !(new RegExp(/^(?=.*[a-záéíóúüñ])(?=.*[A-ZÁÉÍÓÚÜÑ])(?=.*\d)(?=.*[áéíóúÁÉÍÓÚ!@#$%^&*()_+{}\[\]:;<>,.?~\\-])/).test(claveNuevaVal)) || /^((?![áéíóúÁÉÍÓÚ$?¿/()+\[\]\-!¡@.,_*:]).)*$/.test(claveNuevaVal)) {
	      return 0;
	  }
	  return -1;
  });
}

function showOrHideElementByClass(elem) {
	try{
	    	if ($( elem ).hasClass('hidden') == true){
        		$( elem ).removeClass('hidden');
        	}else{
        		$( elem ).addClass('hidden');
        	}
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --showOrHideElementByClass--");
		}
	}
}
function setAriaLabelByClass(clase,label) {
	try{
	    $("."+clase).attr("aria-label",label);
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function appendAriaLabel(append, element, prepend) {
	try{
	    let ariaLabel = $(element).attr('aria-label');
	    if(ariaLabel != null && ariaLabel != ''){
	        $(element).attr('aria-label', prepend+ariaLabel+append);
	    }else{
	         let elementText =  $(element).text();
	         $(element).attr('aria-label', prepend+elementText+append);
	    }
	    
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function setAriaLabelById(id,label) {
	try{
	    $("#"+id).attr("aria-label",label);
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableUltimosSaldos() {
	try{
	    setAriaLabelMoneda();
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableUltimosConsumos() {
	try{
	    setAriaLabelMoneda();
	    setAriaLabelNCuenta();
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableUltimosConsumosMaster() {
	try{
	    setAriaLabelMoneda();
	    setAriaLabelNCuenta();
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function setAriaLabelNCuenta() {
	try{
	    let clase = "aria-ncuenta"
	    $('.' + clase).each(function () {
            let cuentaConMascara = $(this).text();
            if (cuentaConMascara === "-" || cuentaConMascara === undefined) {
                $(this).attr('tabindex', -1);
            } else {
                let ariaLabel = "";
                let caracteres = cuentaConMascara.split("");
                caracteres.forEach((caracter, i) =>{
                   if(!isNaN(caracter) && i< caracteres.length-1){
                       caracteres[i] = caracter + " ";
                    } 
                });
                ariaLabel = caracteres.join("");
                $(this).attr('aria-label', ariaLabel);
                $(this).removeClass(clase)
            }
        });
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function bindDependentSelectFieldOnBlurFci(idElementToShow,selectField,trigger){

	$(trigger).attr("lastValue",$(trigger).val());
  	var es_ie = navigator.userAgent.indexOf("MSIE") > -1 || navigator.userAgent.indexOf("Edge") > -1 ;
    
     if(es_ie){
	    var mousedown = $(selectField).attr('onmousedown');
	    if(mousedown == undefined){
		    mousedown = "";
    	}

    	$(selectField).attr('onmousedown',"updateDependentSelectFieldByInputIfApply('"+$(selectField).attr('id')+"', '"+$(trigger).attr("id")+"');"+mousedown);
        
        $(trigger).keydown(function(e) {
        var tabKeyPressed = false;
        tabKeyPressed = e.keyCode == 9;
        if (tabKeyPressed) {
	        mostrarEnEjecucion();
	        updateDependentSelectFieldByInput($(trigger),$(selectField));
	        }
	    });    
    }    

    $(trigger).on("blur",function(){
         if(document.activeElement.id !== $(selectField).attr('id')){
            /* console.log("RECARGA por BLUR");*/
	        mostrarEnEjecucion();
	        updateDependentSelectFieldByInput($(trigger),$(selectField));
	        var opcionesCA = selectField.find('option').filter(function() {
                return $(this).text().substr(0,2) == 'CA';
            });
            if(opcionesCA.length == 1){
                $(selectField).val(opcionesCA.val());
                $(selectField).change();
            }
	    }/*else{
            console.log("No hay recarga por BLUR");
        }*/
     });

    if(idElementToShow!='null'){
	    $(selectField).on('selectFilled',function(event){
		    var elem = this;
			    if(getElementValue(trigger)!="" && (elem.options==null ||
			    (elem.options.length==1 && elem.options[0].value == 'Ninguno'))){
				    if($('#'+idElementToShow).css("display")=="none"){
					    $('#'+idElementToShow).css("display","block");
					    window.scrollBy(0, document.getElementById(idElementToShow).offsetHeight);
				    }
			    }else if($('#'+idElementToShow).css("display")=="block"){
				    window.scrollBy(0, -1*document.getElementById(idElementToShow).offsetHeight);
				    $('#'+idElementToShow).css("display","none");
			    }

	    });
    }

}
function validateAmountAndEnableButton(availableBalance, boton, error, floatField) {
	try{
	    let monto = parseFloat($(floatField).attr('unmasked'));
	    if(monto < availableBalance){
	        boton.removeAttr('disabled');
	        $(error).css("display","none");
	    }else if(monto > availableBalance){
	        boton.attr('disabled','disabled');
	        $(error).css("display","block");
	    }else{
	        $(error).css("display","none");
	        boton.attr('disabled','disabled');
	    }
	    
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function showAndHideElementUsingOptionField(elem1,elem2,option)
{

 if (document.getElementById(option).value ==  "true")
    {
       if (elem1 != null)
          $(elem1).show();
       if (elem2 != null)
          $(elem2).hide();
          $(elem2).find('input').val('');
    }
    
  else
    {
       if (elem2 != null)
         $(elem2).show();
       if (elem1 != null)
         $(elem1).hide();
         $(elem1).find('input').val('');
    }
}
function enableDisableFCIRescateButton(boton, cantidad, cuentaSel,cuentaSelectField, monto, montoUSD, tipoRescate) {
	try{
	    let tipoRescateSeleccionado = $(tipoRescate).find('input:checked').attr('id').slice(-1); //0-->Parcial 1-->Total
	    let cuentaSeleccionada = false;
	    if(cuentaSel != "null" || $(cuentaSelectField).val() != "Ninguno"){
	        cuentaSeleccionada = true;
	    }
	    
	    if(tipoRescateSeleccionado == 1){
	        if(cuentaSeleccionada){
	            boton.removeAttr('disabled');
	       }else{
	           boton.attr('disabled','disabled');
	       }
	    }else{
	        if(cuentaSeleccionada && (($(cantidad).val() != '' && $(cantidad).val() != undefined ) || ($(monto).val() != '' && $(monto).val() != undefined) || ($(montoUSD).val() != '' && $(montoUSD).val() != undefined))){
	            boton.removeAttr('disabled');
	        }else{
	            boton.attr('disabled','disabled');
	        }
	    }
	    
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function setAriaLabelReplacePesos(element) {
	try{
	    if(element.children().length > 0){
	        element = element.children()[0];
	    }
	    let ariaLabel = $(element).text().replace(/U\$S/g, 'dólares').replace(/\$/g, 'pesos');
	    $(element).attr('aria-label', ariaLabel);
	    $(element).attr('tabindex', '0');
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableLoans22() {
	try{
	    setAriaLabelMoneda();
        setAriaLabelNCuenta();
        setAriaLabelReplacePesosForTable("_Nombre",$("#collectionTableLoans22_1"));
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableLoans3() {
	try{
	    setAriaLabelMoneda();
        setAriaLabelNCuenta();
        setAriaLabelReplacePesosForTable("_Nombre",$("#collectionTableLoans3_1"));
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableLoans4() {
	try{
	    setAriaLabelMoneda();
        setAriaLabelNCuenta();
        setAriaLabelReplacePesosForTable("_Nombre",$("#collectionTableLoans4_1"));
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function setAriaLabelReplacePesosForTable(columna,table) {
	try{
	    
	    let elementoColumnas = table.find("[headers="+columna+"]");
	    
	    elementoColumnas.each(function() {
            let ariaLabel = $(this).text().replace(/U\$S/g, 'dólares').replace(/\$/g, 'pesos');
	        $(this).attr('aria-label', ariaLabel);
	        $(this).attr('tabindex', '0');
        });
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function addCBUOption(selectField) {
	try{
	    if(!($(selectField.selector + " option").filter(function() {return $(this).text() === "CBU";}).length)){
	        $(selectField).append(new Option("CBU", "CBU"));
	    }
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}
function collectionTableCuentas3() {
	try{
	    
	    $("#collectionTableCuentas3 .collection-table_collapsible_selectable_header td").attr("onclick", "javascript: hideTableWithoutAction('collectionTableCuentas3');");
	    
	    var ocultar = true;
	    $( "#collectionTableCuentas3_1" ).find( "td[headers='_Estado']" ).each(
	        function() {
                    if("Pausada" == $( this ).html()){
                        ocultar = false;
                    }
        });
        if(ocultar){
            $("#_Estado").remove();
            $("td[headers='_Estado']").remove();
        }
	} catch (err){
		if ( window.console && window.console.log ) {
			console.error(err,"Error en servicio --serviceName--");
		}
	}
}

function vtCompareRangeDateWithDaysPlus(date1,date2,days,msg,target){
    var target2 = null;
	if($(date1).attr("id")==$(target).attr("id")){
		target2 = date2;
	}else{
		target2 = date1;
    }
    if ($(target).attr("id")==$(date2).attr("id")){

        earlyValidation.call(target,msg,function(){

            var dias = days;

            function transformarFecha(day){
                var fecha = $(day).val();
                var dia = (fecha).slice(0,2);
                var mes = (fecha).slice(3,5);
                var anio = (fecha).slice(6,10);
                var fechaTexto = anio+"/"+mes+"/"+dia;
                var fechaFinal = new Date(fechaTexto);
                return fechaFinal;
            }

            var fechaDesde = transformarFecha(date1);
            var fechaHasta = transformarFecha(date2);

            function calcularDias(fecha1, fecha2){
                var diferencia = (fecha2 - fecha1) / (1000*60*60*24);
                return diferencia;
            }
            
            var diasEntreFDyFH = calcularDias(fechaDesde, fechaHasta);

            if (diasEntreFDyFH > dias) {
                return 0;
            }
            return -1; 
            
        },target2);         
    
    }else{
        earlyValidation.call(target,msg,function(){

            var dias = days;

            function transformarFecha(day){
                var fecha = $(day).val();
                var dia = (fecha).slice(0,2);
                var mes = (fecha).slice(3,5);
                var anio = (fecha).slice(6,10);
                var fechaTexto = anio+"/"+mes+"/"+dia;
                var fechaFinal = new Date(fechaTexto);
                return fechaFinal;
            }

            var fechaDesde = transformarFecha(date1);
            var fechaHasta = transformarFecha(date2);

            function calcularDias(fecha1, fecha2){
                var diferencia = (fecha2 - fecha1) / (1000*60*60*24);
                return diferencia;
            }
            
            var diasEntreFDyFH = calcularDias(fechaDesde, fechaHasta);

            if (diasEntreFDyFH > dias) {
                return 0;
            }
            return -1; 

        },target2);
    }
}
